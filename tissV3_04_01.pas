unit tissV3_04_01;

interface

uses xmldom, XMLDoc, XMLIntf;

type

{ Forward Decls }

  I341_XMLMensagemTISS = interface;
  I341_XMLCabecalhoTransacao = interface;
  I341_XMLCabecalhoTransacao_identificacaoTransacao = interface;
  I341_XMLCabecalhoTransacao_origem = interface;
  I341_XMLCt_prestadorIdentificacao = interface;
  I341_XMLCabecalhoTransacao_origem_identificacaoPrestador = interface;
  I341_XMLCabecalhoTransacao_destino = interface;
  I341_XMLCt_loginSenha = interface;
  I341_XMLOperadoraPrestador = interface;
  I341_XMLCt_recebimentoLote = interface;
  I341_XMLCt_motivoGlosa = interface;
  I341_XMLCt_motivoGlosaList341 = interface;
  I341_XMLCt_protocoloRecebimento = interface;
  I341_XMLCt_contratadoDados = interface;
  I341_XMLCt_protocoloDetalhe = interface;
  I341_XMLCt_protocoloDetalhe_glosaProtocolo = interface;
  I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa = interface;
  I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo = interface;
  I341_XMLCt_guiaDados = interface;
  I341_XMLCt_guiaDadosList341 = interface;
  I341_XMLCt_beneficiarioDados = interface;
  I341_XMLCt_valorTotal = interface;
  I341_XMLCt_guiaDados_glosaGuia = interface;
  I341_XMLCt_guiaDados_procedimentosRealizados = interface;
  I341_XMLCt_procedimentoExecutado = interface;
  I341_XMLCt_procedimentoDados = interface;
  I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado = interface;
  I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento = interface;
  I341_XMLCt_guiaDadosOdonto = interface;
  I341_XMLCt_guiaDadosOdontoList341 = interface;
  I341_XMLCt_guiaDadosOdonto_glosaGuia = interface;
  I341_XMLCt_guiaDadosOdonto_procedimentosRealizados = interface;
  I341_XMLCt_procedimentoExecutadoOdonto = interface;
  I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao = interface;
  I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado = interface;
  I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento = interface;
  I341_XMLOperadoraPrestador_recebimentoAnexo = interface;
  I341_XMLCt_anexoRecebimento = interface;
  I341_XMLCt_anexoRecebimento_anexosClinicos = interface;
  I341_XMLCtm_autorizacaoOPME = interface;
  I341_XMLCt_autorizacaoDados = interface;
  I341_XMLCtm_autorizacaoOPME_motivosNegativa = interface;
  I341_XMLCt_procedimentoAutorizado = interface;
  I341_XMLCt_procedimentoAutorizado_motivosNegativa = interface;
  I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME = interface;
  I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341 = interface;
  I341_XMLCtm_autorizacaoQuimio = interface;
  I341_XMLCt_dadosComplementaresBeneficiario = interface;
  I341_XMLCtm_anexoSolicitante = interface;
  I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia = interface;
  I341_XMLCt_diagnosticoOncologico = interface;
  I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas = interface;
  I341_XMLCt_drogasSolicitadas = interface;
  I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores = interface;
  I341_XMLCtm_autorizacaoQuimio_motivosNegativa = interface;
  I341_XMLCtm_autorizacaoRadio = interface;
  I341_XMLCt_dadosComplementaresBeneficiarioRadio = interface;
  I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio = interface;
  I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores = interface;
  I341_XMLCtm_autorizacaoRadio_motivosNegativa = interface;
  I341_XMLCto_anexoSituacaoInicial = interface;
  I341_XMLCto_anexoSituacaoInicialList341 = interface;
  I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial = interface;
  I341_XMLCt_situacaoClinica = interface;
  I341_XMLCt_situacaoClinica_dentes = interface;
  I341_XMLCt_recebimentoRecurso = interface;
  I341_XMLCt_recursoGlosaRecebimento = interface;
  I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo = interface;
  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso = interface;
  I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341 = interface;
  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia = interface;
  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia = interface;
  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341 = interface;
  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia = interface;
  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341 = interface;
  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao = interface;
  I341_XMLCt_demonstrativoRetorno = interface;
  I341_XMLCtm_demonstrativoAnaliseConta = interface;
  I341_XMLCtm_demonstrativoAnaliseContaList341 = interface;
  I341_XMLCt_demonstrativoCabecalho = interface;
  I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador = interface;
  I341_XMLCtm_demonstrativoAnaliseConta_dadosConta = interface;
  I341_XMLCt_contaMedicaResumo = interface;
  I341_XMLCt_contaMedicaResumo_relacaoGuias = interface;
  I341_XMLCt_contaMedicaResumo_relacaoGuiasList341 = interface;
  I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia = interface;
  I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341 = interface;
  I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa = interface;
  I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341 = interface;
  I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo = interface;
  I341_XMLCtm_demonstrativoPagamento = interface;
  I341_XMLCtm_demonstrativoPagamento_dadosContratado = interface;
  I341_XMLCtm_demonstrativoPagamento_pagamentos = interface;
  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData = interface;
  I341_XMLCt_pagamentoDados = interface;
  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo = interface;
  I341_XMLCt_dadosResumoDemonstrativo = interface;
  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData = interface;
  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData = interface;
  I341_XMLCt_descontos = interface;
  I341_XMLCt_descontosList341 = interface;
  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData = interface;
  I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo = interface;
  I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo = interface;
  I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo = interface;
  I341_XMLCto_demonstrativoOdontologia = interface;
  I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto = interface;
  I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPrestador = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341 = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341 = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341 = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341 = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento = interface;
  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData = interface;
  I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo = interface;
  I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo = interface;
  I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno = interface;
  I341_XMLCt_situacaoProtocolo = interface;
  I341_XMLCt_protocoloStatus = interface;
  I341_XMLCt_protocoloStatus_lote = interface;
  I341_XMLCt_loteStatus = interface;
  I341_XMLCt_loteStatus_guiasTISS = interface;
  I341_XMLCt_loteStatus_guiasTISS_guiasMedicas = interface;
  I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341 = interface;
  I341_XMLCt_loteStatus_guiasTISS_guiasOdonto = interface;
  I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341 = interface;
  I341_XMLCt_protocoloAnexoStatus = interface;
  I341_XMLCt_protocoloAnexoStatus_loteAnexo = interface;
  I341_XMLCt_loteAnexoStatus = interface;
  I341_XMLCt_loteAnexoStatus_anexosClinicos = interface;
  I341_XMLCt_situacaoAutorizacao = interface;
  I341_XMLCtm_autorizacaoInternacao = interface;
  I341_XMLCtm_autorizacaoServico = interface;
  I341_XMLCtm_autorizacaoServico_prestadorAutorizado = interface;
  I341_XMLCtm_autorizacaoServico_motivosNegativa = interface;
  I341_XMLCtm_autorizacaoServico_servicosAutorizados = interface;
  I341_XMLCtm_autorizacaoProrrogacao = interface;
  I341_XMLCto_autorizacaoServico = interface;
  I341_XMLCto_autorizacaoServico_procedimentosAutorizados = interface;
  I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341 = interface;
  I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao = interface;
  I341_XMLCto_autorizacaoServico_motivosNegativa = interface;
  I341_XMLOperadoraPrestador_respostaElegibilidade = interface;
  I341_XMLCt_elegibilidadeRecibo = interface;
  I341_XMLCt_elegibilidadeRecibo_motivosNegativa = interface;
  I341_XMLCt_reciboCancelaGuia = interface;
  I341_XMLCt_guiaCancelamentoRecibo = interface;
  I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas = interface;
  I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia = interface;
  I341_XMLCt_reciboComunicacao = interface;
  I341_XMLCtm_beneficiarioComunicacaoRecibo = interface;
  I341_XMLCtm_beneficiarioComunicacao = interface;
  I341_XMLCtm_beneficiarioComunicacao_dadosInternacao = interface;
  I341_XMLCt_respostaGlosa = interface;
  I341_XMLCt_glosaRecibo = interface;
  I341_XMLCt_glosaRecibo_dadosContratado = interface;
  I341_XMLCt_glosaRecibo_opcaoRecurso = interface;
  I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo = interface;
  I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia = interface;
  I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341 = interface;
  I341_XMLCt_respostaGlosaGuiaMedica = interface;
  I341_XMLCt_respostaGlosaItemMedico = interface;
  I341_XMLCt_glosaReciboOdonto = interface;
  I341_XMLCt_glosaReciboOdonto_dadosContratado = interface;
  I341_XMLCt_glosaReciboOdonto_opcaoRecurso = interface;
  I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo = interface;
  I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia = interface;
  I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341 = interface;
  I341_XMLCt_respostaRecursoGuiaOdonto = interface;
  I341_XMLCt_respostaRecursoItemOdonto = interface;
  I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento = interface;
  I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341 = interface;
  I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao = interface;
  I341_XMLCt_respostaGlosa_reciboGlosaStatus = interface;
  I341_XMLPrestadorOperadora = interface;
  I341_XMLCtm_guiaLote = interface;
  I341_XMLCtm_guiaLote_guiasTISS = interface;
  I341_XMLCtm_spsadtGuia = interface;
  I341_XMLCtm_spsadtGuiaList341 = interface;
  I341_XMLCt_guiaCabecalho = interface;
  I341_XMLCtm_spsadtGuia_cabecalhoGuia = interface;
  I341_XMLCt_autorizacaoSADT = interface;
  I341_XMLCtm_spsadtGuia_dadosSolicitante = interface;
  I341_XMLCt_contratadoProfissionalDados = interface;
  I341_XMLCtm_spsadtGuia_dadosSolicitacao = interface;
  I341_XMLCtm_spsadtGuia_dadosExecutante = interface;
  I341_XMLCtm_spsadtAtendimento = interface;
  I341_XMLCtm_spsadtGuia_procedimentosExecutados = interface;
  I341_XMLCt_procedimentoExecutadoSadt = interface;
  I341_XMLCt_identEquipeSADT = interface;
  I341_XMLCt_identEquipeSADTList341 = interface;
  I341_XMLCt_identEquipeSADT_codProfissional = interface;
  I341_XMLCt_outrasDespesas = interface;
  I341_XMLCt_outrasDespesas_despesa = interface;
  I341_XMLCt_procedimentoExecutadoOutras = interface;
  I341_XMLCt_guiaValorTotal = interface;
  IXMLSignatureType_ds = interface;
  IXMLSignedInfoType_ds = interface;
  IXMLCanonicalizationMethodType_ds = interface;
  IXMLSignatureMethodType_ds = interface;
  IXMLReferenceType_ds = interface;
  IXMLReferenceType_dsList341 = interface;
  IXMLTransformsType_ds = interface;
  IXMLTransformType_ds = interface;
  IXMLDigestMethodType_ds = interface;
  IXMLSignatureValueType_ds = interface;
  IXMLKeyInfoType_ds = interface;
  IXMLKeyValueType_ds = interface;
  IXMLKeyValueType_dsList341 = interface;
  IXMLDSAKeyValueType_ds = interface;
  IXMLRSAKeyValueType_ds = interface;
  IXMLRetrievalMethodType_ds = interface;
  IXMLRetrievalMethodType_dsList341 = interface;
  IXMLX509DataType_ds = interface;
  IXMLX509DataType_dsList341 = interface;
  IXMLX509IssuerSerialType_ds = interface;
  IXMLX509IssuerSerialType_dsList341 = interface;
  IXMLPGPDataType_ds = interface;
  IXMLPGPDataType_dsList341 = interface;
  IXMLSPKIDataType_ds = interface;
  IXMLSPKIDataType_dsList341 = interface;
  IXMLObjectType_ds = interface;
  IXMLObjectType_dsList341 = interface;
  I341_XMLSignature = interface;
  I341_XMLCtm_internacaoResumoGuia = interface;
  I341_XMLCtm_internacaoResumoGuiaList341 = interface;
  I341_XMLCt_autorizacaoInternacao = interface;
  I341_XMLCtm_internacaoResumoGuia_dadosExecutante = interface;
  I341_XMLCtm_internacaoDados = interface;
  I341_XMLCtm_internacaoDados_declaracoes = interface;
  I341_XMLCtm_internacaoDados_declaracoesList341 = interface;
  I341_XMLCtm_internacaoDadosSaida = interface;
  I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados = interface;
  I341_XMLCt_procedimentoExecutadoInt = interface;
  I341_XMLCt_procedimentoExecutadoInt_identEquipe = interface;
  I341_XMLCt_procedimentoExecutadoInt_identEquipeList341 = interface;
  I341_XMLCt_identEquipe = interface;
  I341_XMLCt_identEquipe_codProfissional = interface;
  I341_XMLCtm_honorarioIndividualGuia = interface;
  I341_XMLCtm_honorarioIndividualGuiaList341 = interface;
  I341_XMLCtm_honorarioIndividualGuia_beneficiario = interface;
  I341_XMLCtm_honorarioIndividualGuia_localContratado = interface;
  I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado = interface;
  I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante = interface;
  I341_XMLCtm_honorarioIndividualGuia_dadosInternacao = interface;
  I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados = interface;
  I341_XMLCt_procedimentoExecutadoHonorIndiv = interface;
  I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais = interface;
  I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341 = interface;
  I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional = interface;
  I341_XMLCtm_consultaGuia = interface;
  I341_XMLCtm_consultaGuiaList341 = interface;
  I341_XMLCtm_consultaGuia_contratadoExecutante = interface;
  I341_XMLCtm_consultaAtendimento = interface;
  I341_XMLCtm_consultaAtendimento_procedimento = interface;
  I341_XMLCto_guiaOdontologia = interface;
  I341_XMLCto_guiaOdontologiaList341 = interface;
  I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis = interface;
  I341_XMLCto_guiaOdontologia_procedimentosExecutados = interface;
  I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341 = interface;
  I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao = interface;
  I341_XMLCto_anexoSituacaoInicialnaGTO = interface;
  I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial = interface;
  I341_XMLCt_anexoLote = interface;
  I341_XMLCt_anexoLote_AnexosGuiasTISS = interface;
  I341_XMLCtm_anexoSolicitacaoRadio = interface;
  I341_XMLCt_anexoCabecalho = interface;
  I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio = interface;
  I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores = interface;
  I341_XMLCtm_anexoSolicitacaoQuimio = interface;
  I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia = interface;
  I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas = interface;
  I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores = interface;
  I341_XMLCtm_anexoSolicitacaoOPME = interface;
  I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas = interface;
  I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada = interface;
  I341_XMLCt_demonstrativoSolicitacao = interface;
  I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento = interface;
  I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo = interface;
  I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise = interface;
  I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos = interface;
  I341_XMLCt_protocoloSolicitacaoStatus = interface;
  I341_XMLCtm_solicitacaoLote = interface;
  I341_XMLCtm_spsadtSolicitacaoGuia = interface;
  I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante = interface;
  I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados = interface;
  I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341 = interface;
  I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante = interface;
  I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico = interface;
  I341_XMLCtm_internacaoSolicitacaoGuia = interface;
  I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante = interface;
  I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado = interface;
  I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao = interface;
  I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas = interface;
  I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados = interface;
  I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341 = interface;
  I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico = interface;
  I341_XMLCtm_prorrogacaoSolicitacaoGuia = interface;
  I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario = interface;
  I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao = interface;
  I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais = interface;
  I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341 = interface;
  I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao = interface;
  I341_XMLCto_odontoSolicitacaoGuia = interface;
  I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis = interface;
  I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados = interface;
  I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341 = interface;
  I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao = interface;
  I341_XMLCt_solicitacaoProcedimento = interface;
  I341_XMLCt_autorizacaoSolicitaStatus = interface;
  I341_XMLCt_elegibilidadeVerifica = interface;
  I341_XMLCt_guiaCancelamento = interface;
  I341_XMLCt_guiaCancelamento_guiasCancelamento = interface;
  I341_XMLCt_guiaCancelamento_guiasCancelamentoList341 = interface;
  I341_XMLCt_guiaRecursoLote = interface;
  I341_XMLCto_recursoGlosaOdonto = interface;
  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso = interface;
  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo = interface;
  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia = interface;
  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341 = interface;
  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento = interface;
  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341 = interface;
  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao = interface;
  I341_XMLCtm_recursoGlosa = interface;
  I341_XMLCtm_recursoGlosa_opcaoRecurso = interface;
  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo = interface;
  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia = interface;
  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341 = interface;
  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia = interface;
  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta = interface;
  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341 = interface;
  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia = interface;
  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341 = interface;
  I341_XMLEpilogo = interface;
  I341_XMLCt_creditoOdonto = interface;
  I341_XMLCt_diagnostico = interface;
  I341_XMLCt_fontePagadora = interface;
  I341_XMLCt_guiaDadosAnexo = interface;
  I341_XMLCt_guiaDadosAnexoList341 = interface;
  I341_XMLCt_guiaDadosAnexo_glosaAnexo = interface;
  I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados = interface;
  I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado = interface;
  I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento = interface;
  I341_XMLCt_guiaRecurso = interface;
  I341_XMLCt_guiaRecursoList341 = interface;
  I341_XMLCt_guiaValorTotalSADT = interface;
  I341_XMLCt_hipoteseDiagnostica = interface;
  I341_XMLCt_intervaloCiclos = interface;
  I341_XMLCt_opmeDados = interface;
  I341_XMLCt_opmUtilizada = interface;
  I341_XMLCt_opmUtilizada_OPM = interface;
  I341_XMLCt_opmUtilizada_OPM_identificacaoOPM = interface;
  I341_XMLCt_pagamentoResumo = interface;
  I341_XMLCt_procedimentosComplementares = interface;
  I341_XMLCt_procedimentoSolicitado = interface;
  I341_XMLCt_protocoloDetalheAnexo = interface;
  I341_XMLCt_protocoloRecurso = interface;
  I341_XMLCt_protocoloRecebimentoAnexo = interface;
  I341_XMLCt_protocoloRecebimentoRecurso = interface;
  I341_XMLCt_respostaElegibilidade = interface;
  I341_XMLCt_valorCreditoDesconto = interface;
  I341_XMLString_List341 = interface;
  I341_XMLBase64BinaryList341 = interface;
  I341_XMLSt_texto4List341 = interface;
  I341_XMLDm_tipoGlosaList341 = interface;
  I341_XMLDm_diagnosticoCID10List341 = interface;

{ I341_XMLMensagemTISS }

  I341_XMLMensagemTISS = interface(IXMLNode)
    ['{202ADC24-410D-4FFE-8CC3-FC111A33D54C}']
    { Property Accessors }
    function Get_Cabecalho: I341_XMLCabecalhoTransacao;
    function Get_OperadoraParaPrestador: I341_XMLOperadoraPrestador;
    function Get_PrestadorParaOperadora: I341_XMLPrestadorOperadora;
    function Get_Epilogo: I341_XMLEpilogo;
    function Get_Signature: IXMLSignatureType_ds;
    { Methods & Properties }
    property Cabecalho: I341_XMLCabecalhoTransacao read Get_Cabecalho;
    property OperadoraParaPrestador: I341_XMLOperadoraPrestador read Get_OperadoraParaPrestador;
    property PrestadorParaOperadora: I341_XMLPrestadorOperadora read Get_PrestadorParaOperadora;
    property Epilogo: I341_XMLEpilogo read Get_Epilogo;
    property Signature: IXMLSignatureType_ds read Get_Signature;
  end;

{ I341_XMLCabecalhoTransacao }

  I341_XMLCabecalhoTransacao = interface(IXMLNode)
    ['{DE983B4F-0FDA-4201-9E4A-EC25E8C5E9DB}']
    { Property Accessors }
    function Get_IdentificacaoTransacao: I341_XMLCabecalhoTransacao_identificacaoTransacao;
    function Get_FalhaNegocio: WideString;
    function Get_Origem: I341_XMLCabecalhoTransacao_origem;
    function Get_Destino: I341_XMLCabecalhoTransacao_destino;
    function Get_Padrao: WideString;
    function Get_LoginSenhaPrestador: I341_XMLCt_loginSenha;
    procedure Set_FalhaNegocio(Value: WideString);
    procedure Set_Padrao(Value: WideString);
    { Methods & Properties }
    property IdentificacaoTransacao: I341_XMLCabecalhoTransacao_identificacaoTransacao read Get_IdentificacaoTransacao;
    property FalhaNegocio: WideString read Get_FalhaNegocio write Set_FalhaNegocio;
    property Origem: I341_XMLCabecalhoTransacao_origem read Get_Origem;
    property Destino: I341_XMLCabecalhoTransacao_destino read Get_Destino;
    property Padrao: WideString read Get_Padrao write Set_Padrao;
    property LoginSenhaPrestador: I341_XMLCt_loginSenha read Get_LoginSenhaPrestador;
  end;

{ I341_XMLCabecalhoTransacao_identificacaoTransacao }

  I341_XMLCabecalhoTransacao_identificacaoTransacao = interface(IXMLNode)
    ['{3856D6B2-4909-4541-B31C-82F5D7D059A8}']
    { Property Accessors }
    function Get_TipoTransacao: WideString;
    function Get_SequencialTransacao: WideString;
    function Get_DataRegistroTransacao: WideString;
    function Get_HoraRegistroTransacao: WideString;
    procedure Set_TipoTransacao(Value: WideString);
    procedure Set_SequencialTransacao(Value: WideString);
    procedure Set_DataRegistroTransacao(Value: WideString);
    procedure Set_HoraRegistroTransacao(Value: WideString);
    { Methods & Properties }
    property TipoTransacao: WideString read Get_TipoTransacao write Set_TipoTransacao;
    property SequencialTransacao: WideString read Get_SequencialTransacao write Set_SequencialTransacao;
    property DataRegistroTransacao: WideString read Get_DataRegistroTransacao write Set_DataRegistroTransacao;
    property HoraRegistroTransacao: WideString read Get_HoraRegistroTransacao write Set_HoraRegistroTransacao;
  end;

{ I341_XMLCabecalhoTransacao_origem }

  I341_XMLCabecalhoTransacao_origem = interface(IXMLNode)
    ['{81AA1DFF-EF04-47B1-A891-27AEDDD00CC2}']
    { Property Accessors }
    function Get_IdentificacaoPrestador: I341_XMLCabecalhoTransacao_origem_identificacaoPrestador;
    function Get_RegistroANS: WideString;
    procedure Set_RegistroANS(Value: WideString);
    { Methods & Properties }
    property IdentificacaoPrestador: I341_XMLCabecalhoTransacao_origem_identificacaoPrestador read Get_IdentificacaoPrestador;
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
  end;

{ I341_XMLCt_prestadorIdentificacao }

  I341_XMLCt_prestadorIdentificacao = interface(IXMLNode)
    ['{6B883709-AA25-421C-8592-E03D0ABC133E}']
    { Property Accessors }
    function Get_CNPJ: WideString;
    function Get_CPF: WideString;
    function Get_CodigoPrestadorNaOperadora: WideString;
    procedure Set_CNPJ(Value: WideString);
    procedure Set_CPF(Value: WideString);
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
    { Methods & Properties }
    property CNPJ: WideString read Get_CNPJ write Set_CNPJ;
    property CPF: WideString read Get_CPF write Set_CPF;
    property CodigoPrestadorNaOperadora: WideString read Get_CodigoPrestadorNaOperadora write Set_CodigoPrestadorNaOperadora;
  end;

{ I341_XMLCabecalhoTransacao_origem_identificacaoPrestador }

  I341_XMLCabecalhoTransacao_origem_identificacaoPrestador = interface(I341_XMLCt_prestadorIdentificacao)
    ['{B1F79DFC-8441-49C9-8E16-26AF0534EBBE}']
  end;

{ I341_XMLCabecalhoTransacao_destino }

  I341_XMLCabecalhoTransacao_destino = interface(IXMLNode)
    ['{EA222BBF-D7F9-4A6F-B845-542B45AE6B15}']
    { Property Accessors }
    function Get_IdentificacaoPrestador: I341_XMLCt_prestadorIdentificacao;
    function Get_RegistroANS: WideString;
    procedure Set_RegistroANS(Value: WideString);
    { Methods & Properties }
    property IdentificacaoPrestador: I341_XMLCt_prestadorIdentificacao read Get_IdentificacaoPrestador;
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
  end;

{ I341_XMLCt_loginSenha }

  I341_XMLCt_loginSenha = interface(IXMLNode)
    ['{917B7F4B-6840-485A-83D3-050909EC93AA}']
    { Property Accessors }
    function Get_LoginPrestador: WideString;
    function Get_SenhaPrestador: WideString;
    procedure Set_LoginPrestador(Value: WideString);
    procedure Set_SenhaPrestador(Value: WideString);
    { Methods & Properties }
    property LoginPrestador: WideString read Get_LoginPrestador write Set_LoginPrestador;
    property SenhaPrestador: WideString read Get_SenhaPrestador write Set_SenhaPrestador;
  end;

{ I341_XMLOperadoraPrestador }

  I341_XMLOperadoraPrestador = interface(IXMLNode)
    ['{D1C2AB58-AE35-4ECD-A78E-87CD435A2113}']
    { Property Accessors }
    function Get_RecebimentoLote: I341_XMLCt_recebimentoLote;
    function Get_RecebimentoAnexo: I341_XMLOperadoraPrestador_recebimentoAnexo;
    function Get_RecebimentoRecursoGlosa: I341_XMLCt_recebimentoRecurso;
    function Get_DemonstrativosRetorno: I341_XMLCt_demonstrativoRetorno;
    function Get_SituacaoProtocolo: I341_XMLCt_situacaoProtocolo;
    function Get_AutorizacaoServicos: I341_XMLCt_situacaoAutorizacao;
    function Get_SituacaoAutorizacao: I341_XMLCt_situacaoAutorizacao;
    function Get_RespostaElegibilidade: I341_XMLOperadoraPrestador_respostaElegibilidade;
    function Get_ReciboCancelaGuia: I341_XMLCt_reciboCancelaGuia;
    function Get_ReciboComunicacao: I341_XMLCt_reciboComunicacao;
    function Get_RespostaRecursoGlosa: I341_XMLCt_respostaGlosa;
    { Methods & Properties }
    property RecebimentoLote: I341_XMLCt_recebimentoLote read Get_RecebimentoLote;
    property RecebimentoAnexo: I341_XMLOperadoraPrestador_recebimentoAnexo read Get_RecebimentoAnexo;
    property RecebimentoRecursoGlosa: I341_XMLCt_recebimentoRecurso read Get_RecebimentoRecursoGlosa;
    property DemonstrativosRetorno: I341_XMLCt_demonstrativoRetorno read Get_DemonstrativosRetorno;
    property SituacaoProtocolo: I341_XMLCt_situacaoProtocolo read Get_SituacaoProtocolo;
    property AutorizacaoServicos: I341_XMLCt_situacaoAutorizacao read Get_AutorizacaoServicos;
    property SituacaoAutorizacao: I341_XMLCt_situacaoAutorizacao read Get_SituacaoAutorizacao;
    property RespostaElegibilidade: I341_XMLOperadoraPrestador_respostaElegibilidade read Get_RespostaElegibilidade;
    property ReciboCancelaGuia: I341_XMLCt_reciboCancelaGuia read Get_ReciboCancelaGuia;
    property ReciboComunicacao: I341_XMLCt_reciboComunicacao read Get_ReciboComunicacao;
    property RespostaRecursoGlosa: I341_XMLCt_respostaGlosa read Get_RespostaRecursoGlosa;
  end;

{ I341_XMLCt_recebimentoLote }

  I341_XMLCt_recebimentoLote = interface(IXMLNode)
    ['{14996F18-3502-4895-A3DA-F1BD4C7758DE}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ProtocoloRecebimento: I341_XMLCt_protocoloRecebimento;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property ProtocoloRecebimento: I341_XMLCt_protocoloRecebimento read Get_ProtocoloRecebimento;
  end;

{ I341_XMLCt_motivoGlosa }

  I341_XMLCt_motivoGlosa = interface(IXMLNode)
    ['{09C0BB34-CAF5-4566-901D-0816FA635F63}']
    { Property Accessors }
    function Get_CodigoGlosa: WideString;
    function Get_DescricaoGlosa: WideString;
    procedure Set_CodigoGlosa(Value: WideString);
    procedure Set_DescricaoGlosa(Value: WideString);
    { Methods & Properties }
    property CodigoGlosa: WideString read Get_CodigoGlosa write Set_CodigoGlosa;
    property DescricaoGlosa: WideString read Get_DescricaoGlosa write Set_DescricaoGlosa;
  end;

{ I341_XMLCt_motivoGlosaList341 }

  I341_XMLCt_motivoGlosaList341 = interface(IXMLNodeCollection)
    ['{73820BE2-06DC-4E9B-91B3-F72C0E971D71}']
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;

    function Get_Item(Index: Integer): I341_XMLCt_motivoGlosa;
    property Items[Index: Integer]: I341_XMLCt_motivoGlosa read Get_Item; default;
  end;

{ I341_XMLCt_protocoloRecebimento }

  I341_XMLCt_protocoloRecebimento = interface(IXMLNode)
    ['{74D4AF42-3B8F-457B-B1B4-8E4241DFF1B3}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_DetalheProtocolo: I341_XMLCt_protocoloDetalhe;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property DataEnvioLote: WideString read Get_DataEnvioLote write Set_DataEnvioLote;
    property DetalheProtocolo: I341_XMLCt_protocoloDetalhe read Get_DetalheProtocolo;
  end;

{ I341_XMLCt_contratadoDados }

  I341_XMLCt_contratadoDados = interface(IXMLNode)
    ['{FF08B329-730C-4DB0-8594-5599CC145608}']
    { Property Accessors }
    function Get_CodigoPrestadorNaOperadora: WideString;
    function Get_CpfContratado: WideString;
    function Get_CnpjContratado: WideString;
    function Get_NomeContratado: WideString;
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
    procedure Set_CnpjContratado(Value: WideString);
    procedure Set_NomeContratado(Value: WideString);
    { Methods & Properties }
    property CodigoPrestadorNaOperadora: WideString read Get_CodigoPrestadorNaOperadora write Set_CodigoPrestadorNaOperadora;
    property CpfContratado: WideString read Get_CpfContratado write Set_CpfContratado;
    property CnpjContratado: WideString read Get_CnpjContratado write Set_CnpjContratado;
    property NomeContratado: WideString read Get_NomeContratado write Set_NomeContratado;
  end;

{ I341_XMLCt_protocoloDetalhe }

  I341_XMLCt_protocoloDetalhe = interface(IXMLNode)
    ['{231527F7-4065-460A-9981-692976B3183F}']
    { Property Accessors }
    function Get_NumeroProtocolo: WideString;
    function Get_ValorTotalProtocolo: WideString;
    function Get_GlosaProtocolo: I341_XMLCt_protocoloDetalhe_glosaProtocolo;
    function Get_DadosGuiasProtocolo: I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_ValorTotalProtocolo(Value: WideString);
    { Methods & Properties }
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property ValorTotalProtocolo: WideString read Get_ValorTotalProtocolo write Set_ValorTotalProtocolo;
    property GlosaProtocolo: I341_XMLCt_protocoloDetalhe_glosaProtocolo read Get_GlosaProtocolo;
    property DadosGuiasProtocolo: I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo read Get_DadosGuiasProtocolo;
  end;

{ I341_XMLCt_protocoloDetalhe_glosaProtocolo }

  I341_XMLCt_protocoloDetalhe_glosaProtocolo = interface(IXMLNode)
    ['{90F9C938-A230-4697-A0E3-914A3776C189}']
    { Property Accessors }
    function Get_MotivosGlosa: I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa;
    function Get_VlGlosaProtocolo: WideString;
    procedure Set_VlGlosaProtocolo(Value: WideString);
    { Methods & Properties }
    property MotivosGlosa: I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa read Get_MotivosGlosa;
    property VlGlosaProtocolo: WideString read Get_VlGlosaProtocolo write Set_VlGlosaProtocolo;
  end;

{ I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa }

  I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa = interface(IXMLNodeCollection)
    ['{346C6BE2-202D-4F33-8A8F-9CD9E0F3A6BE}']
    { Property Accessors }
    function Get_MotivoGlosa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoGlosa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoGlosa; default;
  end;

{ I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo }

  I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo = interface(IXMLNode)
    ['{08D113C7-BE52-4DD3-B704-AB9A58100529}']
    { Property Accessors }
    function Get_DadosGuias: I341_XMLCt_guiaDadosList341;
    function Get_DadosGuiasOdonto: I341_XMLCt_guiaDadosOdontoList341;
    { Methods & Properties }
    property DadosGuias: I341_XMLCt_guiaDadosList341 read Get_DadosGuias;
    property DadosGuiasOdonto: I341_XMLCt_guiaDadosOdontoList341 read Get_DadosGuiasOdonto;
  end;

{ I341_XMLCt_guiaDados }

  I341_XMLCt_guiaDados = interface(IXMLNode)
    ['{837BA71C-89A4-4787-A9F9-76954509125C}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DataRealizacao: WideString;
    function Get_VlInformadoGuia: I341_XMLCt_valorTotal;
    function Get_GlosaGuia: I341_XMLCt_guiaDados_glosaGuia;
    function Get_ProcedimentosRealizados: I341_XMLCt_guiaDados_procedimentosRealizados;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property DataRealizacao: WideString read Get_DataRealizacao write Set_DataRealizacao;
    property VlInformadoGuia: I341_XMLCt_valorTotal read Get_VlInformadoGuia;
    property GlosaGuia: I341_XMLCt_guiaDados_glosaGuia read Get_GlosaGuia;
    property ProcedimentosRealizados: I341_XMLCt_guiaDados_procedimentosRealizados read Get_ProcedimentosRealizados;
  end;

{ I341_XMLCt_guiaDadosList341 }

  I341_XMLCt_guiaDadosList341 = interface(IXMLNodeCollection)
    ['{33112478-F023-4A51-833B-4579153EDB2E}']
    { Methods & Properties }
    function Add: I341_XMLCt_guiaDados;
    function Insert(const Index: Integer): I341_XMLCt_guiaDados;

    function Get_Item(Index: Integer): I341_XMLCt_guiaDados;
    property Items[Index: Integer]: I341_XMLCt_guiaDados read Get_Item; default;
  end;

{ I341_XMLCt_beneficiarioDados }

  I341_XMLCt_beneficiarioDados = interface(IXMLNode)
    ['{FB822B35-ED1F-49BE-82CF-27125AE5BFFF}']
    { Property Accessors }
    function Get_NumeroCarteira: WideString;
    function Get_AtendimentoRN: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_AtendimentoRN(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    { Methods & Properties }
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property AtendimentoRN: WideString read Get_AtendimentoRN write Set_AtendimentoRN;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property NumeroCNS: WideString read Get_NumeroCNS write Set_NumeroCNS;
    property TipoIdent: WideString read Get_TipoIdent write Set_TipoIdent;
    property IdentificadorBeneficiario: WideString read Get_IdentificadorBeneficiario write Set_IdentificadorBeneficiario;
    property TemplateBiometrico: WideString read Get_TemplateBiometrico write Set_TemplateBiometrico;
  end;

{ I341_XMLCt_valorTotal }

  I341_XMLCt_valorTotal = interface(IXMLNode)
    ['{15D59804-BD2B-499E-982A-75F14818D7CF}']
    { Property Accessors }
    function Get_ValorProcessado: WideString;
    function Get_ValorGlosa: WideString;
    function Get_ValorLiberado: WideString;
    procedure Set_ValorProcessado(Value: WideString);
    procedure Set_ValorGlosa(Value: WideString);
    procedure Set_ValorLiberado(Value: WideString);
    { Methods & Properties }
    property ValorProcessado: WideString read Get_ValorProcessado write Set_ValorProcessado;
    property ValorGlosa: WideString read Get_ValorGlosa write Set_ValorGlosa;
    property ValorLiberado: WideString read Get_ValorLiberado write Set_ValorLiberado;
  end;

{ I341_XMLCt_guiaDados_glosaGuia }

  I341_XMLCt_guiaDados_glosaGuia = interface(IXMLNodeCollection)
    ['{26436679-EB9F-46DE-A8A2-25D8820DDF66}']
    { Property Accessors }
    function Get_MotivoGlosa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoGlosa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoGlosa; default;
  end;

{ I341_XMLCt_guiaDados_procedimentosRealizados }

  I341_XMLCt_guiaDados_procedimentosRealizados = interface(IXMLNodeCollection)
    ['{F17D73CC-AD19-439A-8743-9888232F8F5C}']
    { Property Accessors }
    function Get_ProcedimentoRealizado(Index: Integer): I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
    { Methods & Properties }
    function Add: I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
    function Insert(const Index: Integer): I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
    property ProcedimentoRealizado[Index: Integer]: I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado read Get_ProcedimentoRealizado; default;
  end;

{ I341_XMLCt_procedimentoExecutado }

  I341_XMLCt_procedimentoExecutado = interface(IXMLNode)
    ['{93AAF2A1-4816-4223-9DEC-8B94F6D9B183}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_UnidadeMedida: WideString;
    function Get_QuantidadeExecutada: WideString;
    function Get_ViaAcesso: WideString;
    function Get_TecnicaUtilizada: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_CodigoDespesa: WideString;
    function Get_FatorReducaoAcrescimo: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_UnidadeMedida(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: WideString);
    procedure Set_ViaAcesso(Value: WideString);
    procedure Set_TecnicaUtilizada(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
    procedure Set_CodigoDespesa(Value: WideString);
    procedure Set_FatorReducaoAcrescimo(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property DataExecucao: WideString read Get_DataExecucao write Set_DataExecucao;
    property HoraInicial: WideString read Get_HoraInicial write Set_HoraInicial;
    property HoraFinal: WideString read Get_HoraFinal write Set_HoraFinal;
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property UnidadeMedida: WideString read Get_UnidadeMedida write Set_UnidadeMedida;
    property QuantidadeExecutada: WideString read Get_QuantidadeExecutada write Set_QuantidadeExecutada;
    property ViaAcesso: WideString read Get_ViaAcesso write Set_ViaAcesso;
    property TecnicaUtilizada: WideString read Get_TecnicaUtilizada write Set_TecnicaUtilizada;
    property ValorUnitario: WideString read Get_ValorUnitario write Set_ValorUnitario;
    property ValorTotal: WideString read Get_ValorTotal write Set_ValorTotal;
    property CodigoDespesa: WideString read Get_CodigoDespesa write Set_CodigoDespesa;
    property FatorReducaoAcrescimo: WideString read Get_FatorReducaoAcrescimo write Set_FatorReducaoAcrescimo;
  end;

{ I341_XMLCt_procedimentoDados }

  I341_XMLCt_procedimentoDados = interface(IXMLNode)
    ['{27CA9497-9A5B-4D69-A220-786931D8FCB5}']
    { Property Accessors }
    function Get_CodigoTabela: WideString;
    function Get_CodigoProcedimento: WideString;
    function Get_DescricaoProcedimento: WideString;
    procedure Set_CodigoTabela(Value: WideString);
    procedure Set_CodigoProcedimento(Value: WideString);
    procedure Set_DescricaoProcedimento(Value: WideString);
    { Methods & Properties }
    property CodigoTabela: WideString read Get_CodigoTabela write Set_CodigoTabela;
    property CodigoProcedimento: WideString read Get_CodigoProcedimento write Set_CodigoProcedimento;
    property DescricaoProcedimento: WideString read Get_DescricaoProcedimento write Set_DescricaoProcedimento;
  end;

{ I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado }

  I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado = interface(I341_XMLCt_procedimentoExecutado)
    ['{90716880-726D-41D6-B2C4-08CEDAEC4B7C}']
    { Property Accessors }
    function Get_GlosasProcedimento: I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento;
    { Methods & Properties }
    property GlosasProcedimento: I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento read Get_GlosasProcedimento;
  end;

{ I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento }

  I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento = interface(IXMLNode)
    ['{1A75581D-3D5D-4E99-BB52-D2713EEB57E0}']
    { Property Accessors }
    function Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
    function Get_ValorGlosaProcedimento: WideString;
    procedure Set_ValorGlosaProcedimento(Value: WideString);
    { Methods & Properties }
    property MotivoGlosa: I341_XMLCt_motivoGlosaList341 read Get_MotivoGlosa;
    property ValorGlosaProcedimento: WideString read Get_ValorGlosaProcedimento write Set_ValorGlosaProcedimento;
  end;

{ I341_XMLCt_guiaDadosOdonto }

  I341_XMLCt_guiaDadosOdonto = interface(IXMLNode)
    ['{D6CF4159-98B7-47B5-ACFC-BE4D2DE191DE}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_AtendimentoRN: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_VlInformadoGuia: I341_XMLCt_valorTotal;
    function Get_GlosaGuia: I341_XMLCt_guiaDadosOdonto_glosaGuia;
    function Get_ProcedimentosRealizados: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_AtendimentoRN(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property AtendimentoRN: WideString read Get_AtendimentoRN write Set_AtendimentoRN;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property NumeroCNS: WideString read Get_NumeroCNS write Set_NumeroCNS;
    property TipoIdent: WideString read Get_TipoIdent write Set_TipoIdent;
    property IdentificadorBeneficiario: WideString read Get_IdentificadorBeneficiario write Set_IdentificadorBeneficiario;
    property TemplateBiometrico: WideString read Get_TemplateBiometrico write Set_TemplateBiometrico;
    property VlInformadoGuia: I341_XMLCt_valorTotal read Get_VlInformadoGuia;
    property GlosaGuia: I341_XMLCt_guiaDadosOdonto_glosaGuia read Get_GlosaGuia;
    property ProcedimentosRealizados: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados read Get_ProcedimentosRealizados;
  end;

{ I341_XMLCt_guiaDadosOdontoList341 }

  I341_XMLCt_guiaDadosOdontoList341 = interface(IXMLNodeCollection)
    ['{7101ABD6-6FCD-4282-BD1F-AC8330C61674}']
    { Methods & Properties }
    function Add: I341_XMLCt_guiaDadosOdonto;
    function Insert(const Index: Integer): I341_XMLCt_guiaDadosOdonto;

    function Get_Item(Index: Integer): I341_XMLCt_guiaDadosOdonto;
    property Items[Index: Integer]: I341_XMLCt_guiaDadosOdonto read Get_Item; default;
  end;

{ I341_XMLCt_guiaDadosOdonto_glosaGuia }

  I341_XMLCt_guiaDadosOdonto_glosaGuia = interface(IXMLNodeCollection)
    ['{1F778EFA-E249-4016-98F3-DB6C6E4ABF63}']
    { Property Accessors }
    function Get_MotivoGlosa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoGlosa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoGlosa; default;
  end;

{ I341_XMLCt_guiaDadosOdonto_procedimentosRealizados }

  I341_XMLCt_guiaDadosOdonto_procedimentosRealizados = interface(IXMLNodeCollection)
    ['{C61E0269-25BC-42FF-895E-9409FF7734EC}']
    { Property Accessors }
    function Get_ProcedimentoRealizado(Index: Integer): I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
    { Methods & Properties }
    function Add: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
    function Insert(const Index: Integer): I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
    property ProcedimentoRealizado[Index: Integer]: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado read Get_ProcedimentoRealizado; default;
  end;

{ I341_XMLCt_procedimentoExecutadoOdonto }

  I341_XMLCt_procedimentoExecutadoOdonto = interface(IXMLNode)
    ['{03461517-B8C4-472F-B21C-2F0539388B95}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_QtdProc: Integer;
    function Get_QtdUS: WideString;
    function Get_ValorProc: WideString;
    function Get_ValorFranquia: WideString;
    function Get_Autorizado: WideString;
    function Get_DataRealizacao: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_QtdUS(Value: WideString);
    procedure Set_ValorProc(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_Autorizado(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property DenteRegiao: I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao read Get_DenteRegiao;
    property DenteFace: WideString read Get_DenteFace write Set_DenteFace;
    property QtdProc: Integer read Get_QtdProc write Set_QtdProc;
    property QtdUS: WideString read Get_QtdUS write Set_QtdUS;
    property ValorProc: WideString read Get_ValorProc write Set_ValorProc;
    property ValorFranquia: WideString read Get_ValorFranquia write Set_ValorFranquia;
    property Autorizado: WideString read Get_Autorizado write Set_Autorizado;
    property DataRealizacao: WideString read Get_DataRealizacao write Set_DataRealizacao;
  end;

{ I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao }

  I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao = interface(IXMLNode)
    ['{F17C0F26-56BC-4B5D-9C26-1759C1B69EE2}']
    { Property Accessors }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
    { Methods & Properties }
    property CodDente: WideString read Get_CodDente write Set_CodDente;
    property CodRegiao: WideString read Get_CodRegiao write Set_CodRegiao;
  end;

{ I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado }

  I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado = interface(I341_XMLCt_procedimentoExecutadoOdonto)
    ['{D5E66D6B-0227-4A19-9949-67FA1E7199DF}']
    { Property Accessors }
    function Get_GlosasProcedimento: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento;
    { Methods & Properties }
    property GlosasProcedimento: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento read Get_GlosasProcedimento;
  end;

{ I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento }

  I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento = interface(IXMLNode)
    ['{811F76B8-F728-486D-9FC6-7C2CEDF54CD9}']
    { Property Accessors }
    function Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
    function Get_ValorGlosaProcedimento: WideString;
    procedure Set_ValorGlosaProcedimento(Value: WideString);
    { Methods & Properties }
    property MotivoGlosa: I341_XMLCt_motivoGlosaList341 read Get_MotivoGlosa;
    property ValorGlosaProcedimento: WideString read Get_ValorGlosaProcedimento write Set_ValorGlosaProcedimento;
  end;

{ I341_XMLOperadoraPrestador_recebimentoAnexo }

  I341_XMLOperadoraPrestador_recebimentoAnexo = interface(IXMLNode)
    ['{FFE76365-A226-4ED0-B4F9-DD199000C9B8}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ProtocoloRecebimentoAnexo: I341_XMLCt_anexoRecebimento;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property ProtocoloRecebimentoAnexo: I341_XMLCt_anexoRecebimento read Get_ProtocoloRecebimentoAnexo;
  end;

{ I341_XMLCt_anexoRecebimento }

  I341_XMLCt_anexoRecebimento = interface(IXMLNode)
    ['{B320EC0E-94CC-4134-80A0-E54DE3C0205B}']
    { Property Accessors }
    function Get_NrProtocoloRecebimento: WideString;
    function Get_DataEnvioAnexo: WideString;
    function Get_NumeroLote: WideString;
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_QtAnexosClinicos: Integer;
    function Get_AnexosClinicos: I341_XMLCt_anexoRecebimento_anexosClinicos;
    function Get_Observacao: WideString;
    procedure Set_NrProtocoloRecebimento(Value: WideString);
    procedure Set_DataEnvioAnexo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_QtAnexosClinicos(Value: Integer);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property NrProtocoloRecebimento: WideString read Get_NrProtocoloRecebimento write Set_NrProtocoloRecebimento;
    property DataEnvioAnexo: WideString read Get_DataEnvioAnexo write Set_DataEnvioAnexo;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property QtAnexosClinicos: Integer read Get_QtAnexosClinicos write Set_QtAnexosClinicos;
    property AnexosClinicos: I341_XMLCt_anexoRecebimento_anexosClinicos read Get_AnexosClinicos;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
  end;

{ I341_XMLCt_anexoRecebimento_anexosClinicos }

  I341_XMLCt_anexoRecebimento_anexosClinicos = interface(IXMLNode)
    ['{3BE256DB-0456-4CCF-A143-073746E64617}']
    { Property Accessors }
    function Get_AnexoOPME: I341_XMLCtm_autorizacaoOPME;
    function Get_AnexoQuimio: I341_XMLCtm_autorizacaoQuimio;
    function Get_AnexoRadio: I341_XMLCtm_autorizacaoRadio;
    function Get_AnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341;
    { Methods & Properties }
    property AnexoOPME: I341_XMLCtm_autorizacaoOPME read Get_AnexoOPME;
    property AnexoQuimio: I341_XMLCtm_autorizacaoQuimio read Get_AnexoQuimio;
    property AnexoRadio: I341_XMLCtm_autorizacaoRadio read Get_AnexoRadio;
    property AnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341 read Get_AnexoSituacaoInicial;
  end;

{ I341_XMLCtm_autorizacaoOPME }

  I341_XMLCtm_autorizacaoOPME = interface(IXMLNode)
    ['{F21B4932-4797-495D-993F-26BCEEAE9678}']
    { Property Accessors }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_StatusSolicitacao: WideString;
    function Get_MotivosNegativa: I341_XMLCtm_autorizacaoOPME_motivosNegativa;
    function Get_PrestadorAutorizado: I341_XMLCt_contratadoDados;
    function Get_ServicosAutorizadosOPME: I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341;
    procedure Set_StatusSolicitacao(Value: WideString);
    { Methods & Properties }
    property DadosAutorizacao: I341_XMLCt_autorizacaoDados read Get_DadosAutorizacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property StatusSolicitacao: WideString read Get_StatusSolicitacao write Set_StatusSolicitacao;
    property MotivosNegativa: I341_XMLCtm_autorizacaoOPME_motivosNegativa read Get_MotivosNegativa;
    property PrestadorAutorizado: I341_XMLCt_contratadoDados read Get_PrestadorAutorizado;
    property ServicosAutorizadosOPME: I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341 read Get_ServicosAutorizadosOPME;
  end;

{ I341_XMLCt_autorizacaoDados }

  I341_XMLCt_autorizacaoDados = interface(IXMLNode)
    ['{E3B52A37-7794-4AAB-B469-60C62498C398}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_DataAutorizacao: WideString;
    function Get_Senha: WideString;
    function Get_DataValidadeSenha: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataValidadeSenha(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
    property DataAutorizacao: WideString read Get_DataAutorizacao write Set_DataAutorizacao;
    property Senha: WideString read Get_Senha write Set_Senha;
    property DataValidadeSenha: WideString read Get_DataValidadeSenha write Set_DataValidadeSenha;
  end;

{ I341_XMLCtm_autorizacaoOPME_motivosNegativa }

  I341_XMLCtm_autorizacaoOPME_motivosNegativa = interface(IXMLNodeCollection)
    ['{F4A6177D-6857-4E55-B848-64307F4FF056}']
    { Property Accessors }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoNegativa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoNegativa; default;
  end;

{ I341_XMLCt_procedimentoAutorizado }

  I341_XMLCt_procedimentoAutorizado = interface(IXMLNode)
    ['{FD5EE4AA-1681-4217-88BB-042407E272AA}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeSolicitada: Integer;
    function Get_QuantidadeAutorizada: Integer;
    function Get_ValorSolicitado: WideString;
    function Get_ValorAutorizado: WideString;
    function Get_OpcaoFabricante: WideString;
    function Get_RegistroANVISA: WideString;
    function Get_CodigoRefFabricante: WideString;
    function Get_AutorizacaoFuncionamento: WideString;
    function Get_MotivosNegativa: I341_XMLCt_procedimentoAutorizado_motivosNegativa;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_QuantidadeSolicitada(Value: Integer);
    procedure Set_QuantidadeAutorizada(Value: Integer);
    procedure Set_ValorSolicitado(Value: WideString);
    procedure Set_ValorAutorizado(Value: WideString);
    procedure Set_OpcaoFabricante(Value: WideString);
    procedure Set_RegistroANVISA(Value: WideString);
    procedure Set_CodigoRefFabricante(Value: WideString);
    procedure Set_AutorizacaoFuncionamento(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property QuantidadeSolicitada: Integer read Get_QuantidadeSolicitada write Set_QuantidadeSolicitada;
    property QuantidadeAutorizada: Integer read Get_QuantidadeAutorizada write Set_QuantidadeAutorizada;
    property ValorSolicitado: WideString read Get_ValorSolicitado write Set_ValorSolicitado;
    property ValorAutorizado: WideString read Get_ValorAutorizado write Set_ValorAutorizado;
    property OpcaoFabricante: WideString read Get_OpcaoFabricante write Set_OpcaoFabricante;
    property RegistroANVISA: WideString read Get_RegistroANVISA write Set_RegistroANVISA;
    property CodigoRefFabricante: WideString read Get_CodigoRefFabricante write Set_CodigoRefFabricante;
    property AutorizacaoFuncionamento: WideString read Get_AutorizacaoFuncionamento write Set_AutorizacaoFuncionamento;
    property MotivosNegativa: I341_XMLCt_procedimentoAutorizado_motivosNegativa read Get_MotivosNegativa;
  end;

{ I341_XMLCt_procedimentoAutorizado_motivosNegativa }

  I341_XMLCt_procedimentoAutorizado_motivosNegativa = interface(IXMLNodeCollection)
    ['{E152876C-C42B-4245-8577-08AEB0C08E2D}']
    { Property Accessors }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoNegativa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoNegativa; default;
  end;

{ I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME }

  I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME = interface(I341_XMLCt_procedimentoAutorizado)
    ['{536BD6DA-0650-428F-94E6-93250F87D8B3}']
  end;

{ I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341 }

  I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341 = interface(IXMLNodeCollection)
    ['{0AFF22DF-2552-44BF-9CEE-0D829BC824CC}']
    { Methods & Properties }
    function Add: I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
    function Insert(const Index: Integer): I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;

    function Get_Item(Index: Integer): I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
    property Items[Index: Integer]: I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME read Get_Item; default;
  end;

{ I341_XMLCtm_autorizacaoQuimio }

  I341_XMLCtm_autorizacaoQuimio = interface(IXMLNode)
    ['{A3642DA3-AE68-485B-959C-3ABD53245330}']
    { Property Accessors }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_NumeroCarteira: WideString;
    function Get_StatusSolicitacao: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiario;
    function Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_DiagnosticoOncologicoQuimioterapia: I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia;
    function Get_DrogasSolicitadas: I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas;
    function Get_TratamentosAnteriores: I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores;
    function Get_NumeroCiclos: Integer;
    function Get_CicloAtual: Integer;
    function Get_DiasCicloAtual: Integer;
    function Get_IntervaloCiclos: Integer;
    function Get_MotivosNegativa: I341_XMLCtm_autorizacaoQuimio_motivosNegativa;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_StatusSolicitacao(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_NumeroCiclos(Value: Integer);
    procedure Set_CicloAtual(Value: Integer);
    procedure Set_DiasCicloAtual(Value: Integer);
    procedure Set_IntervaloCiclos(Value: Integer);
    { Methods & Properties }
    property DadosAutorizacao: I341_XMLCt_autorizacaoDados read Get_DadosAutorizacao;
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property StatusSolicitacao: WideString read Get_StatusSolicitacao write Set_StatusSolicitacao;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property NumeroCNS: WideString read Get_NumeroCNS write Set_NumeroCNS;
    property DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiario read Get_DadosComplementaresBeneficiario;
    property MedicoSolicitante: I341_XMLCtm_anexoSolicitante read Get_MedicoSolicitante;
    property DiagnosticoOncologicoQuimioterapia: I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia read Get_DiagnosticoOncologicoQuimioterapia;
    property DrogasSolicitadas: I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas read Get_DrogasSolicitadas;
    property TratamentosAnteriores: I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores read Get_TratamentosAnteriores;
    property NumeroCiclos: Integer read Get_NumeroCiclos write Set_NumeroCiclos;
    property CicloAtual: Integer read Get_CicloAtual write Set_CicloAtual;
    property DiasCicloAtual: Integer read Get_DiasCicloAtual write Set_DiasCicloAtual;
    property IntervaloCiclos: Integer read Get_IntervaloCiclos write Set_IntervaloCiclos;
    property MotivosNegativa: I341_XMLCtm_autorizacaoQuimio_motivosNegativa read Get_MotivosNegativa;
  end;

{ I341_XMLCt_dadosComplementaresBeneficiario }

  I341_XMLCt_dadosComplementaresBeneficiario = interface(IXMLNode)
    ['{721B6279-5461-4D45-90CC-25C7D6A6425F}']
    { Property Accessors }
    function Get_Peso: WideString;
    function Get_Altura: WideString;
    function Get_SuperficieCorporal: WideString;
    function Get_Idade: Integer;
    function Get_Sexo: WideString;
    procedure Set_Peso(Value: WideString);
    procedure Set_Altura(Value: WideString);
    procedure Set_SuperficieCorporal(Value: WideString);
    procedure Set_Idade(Value: Integer);
    procedure Set_Sexo(Value: WideString);
    { Methods & Properties }
    property Peso: WideString read Get_Peso write Set_Peso;
    property Altura: WideString read Get_Altura write Set_Altura;
    property SuperficieCorporal: WideString read Get_SuperficieCorporal write Set_SuperficieCorporal;
    property Idade: Integer read Get_Idade write Set_Idade;
    property Sexo: WideString read Get_Sexo write Set_Sexo;
  end;

{ I341_XMLCtm_anexoSolicitante }

  I341_XMLCtm_anexoSolicitante = interface(IXMLNode)
    ['{0C4F7B46-D065-43D0-B79F-630B6D44F5CB}']
    { Property Accessors }
    function Get_NomeProfissional: WideString;
    function Get_TelefoneProfissional: WideString;
    function Get_EmailProfissional: WideString;
    procedure Set_NomeProfissional(Value: WideString);
    procedure Set_TelefoneProfissional(Value: WideString);
    procedure Set_EmailProfissional(Value: WideString);
    { Methods & Properties }
    property NomeProfissional: WideString read Get_NomeProfissional write Set_NomeProfissional;
    property TelefoneProfissional: WideString read Get_TelefoneProfissional write Set_TelefoneProfissional;
    property EmailProfissional: WideString read Get_EmailProfissional write Set_EmailProfissional;
  end;

{ I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia }

  I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia = interface(IXMLNode)
    ['{C2CEBFC1-988C-47BB-83A6-9CE3D2C2957A}']
    { Property Accessors }
    function Get_DiagQuimio: I341_XMLCt_diagnosticoOncologico;
    function Get_Tumor: WideString;
    function Get_Nodulo: WideString;
    function Get_Metastase: WideString;
    function Get_TipoQuimioterapia: WideString;
    function Get_PlanoTerapeutico: WideString;
    procedure Set_Tumor(Value: WideString);
    procedure Set_Nodulo(Value: WideString);
    procedure Set_Metastase(Value: WideString);
    procedure Set_TipoQuimioterapia(Value: WideString);
    procedure Set_PlanoTerapeutico(Value: WideString);
    { Methods & Properties }
    property DiagQuimio: I341_XMLCt_diagnosticoOncologico read Get_DiagQuimio;
    property Tumor: WideString read Get_Tumor write Set_Tumor;
    property Nodulo: WideString read Get_Nodulo write Set_Nodulo;
    property Metastase: WideString read Get_Metastase write Set_Metastase;
    property TipoQuimioterapia: WideString read Get_TipoQuimioterapia write Set_TipoQuimioterapia;
    property PlanoTerapeutico: WideString read Get_PlanoTerapeutico write Set_PlanoTerapeutico;
  end;

{ I341_XMLCt_diagnosticoOncologico }

  I341_XMLCt_diagnosticoOncologico = interface(IXMLNode)
    ['{380E4940-F9A9-4701-BFE3-451A2236E113}']
    { Property Accessors }
    function Get_DataDiagnostico: WideString;
    function Get_DiagnosticoCID: I341_XMLDm_diagnosticoCID10List341;
    function Get_Estadiamento: WideString;
    function Get_Finalidade: WideString;
    function Get_Ecog: WideString;
    function Get_DiagnosticoHispatologico: WideString;
    function Get_InfoRelevantes: WideString;
    procedure Set_DataDiagnostico(Value: WideString);
    procedure Set_Estadiamento(Value: WideString);
    procedure Set_Finalidade(Value: WideString);
    procedure Set_Ecog(Value: WideString);
    procedure Set_DiagnosticoHispatologico(Value: WideString);
    procedure Set_InfoRelevantes(Value: WideString);
    { Methods & Properties }
    property DataDiagnostico: WideString read Get_DataDiagnostico write Set_DataDiagnostico;
    property DiagnosticoCID: I341_XMLDm_diagnosticoCID10List341 read Get_DiagnosticoCID;
    property Estadiamento: WideString read Get_Estadiamento write Set_Estadiamento;
    property Finalidade: WideString read Get_Finalidade write Set_Finalidade;
    property Ecog: WideString read Get_Ecog write Set_Ecog;
    property DiagnosticoHispatologico: WideString read Get_DiagnosticoHispatologico write Set_DiagnosticoHispatologico;
    property InfoRelevantes: WideString read Get_InfoRelevantes write Set_InfoRelevantes;
  end;

{ I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas }

  I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas = interface(IXMLNodeCollection)
    ['{FF7E58E1-EC07-4859-9FCE-335BD00A0A18}']
    { Property Accessors }
    function Get_DrogaSolicitada(Index: Integer): I341_XMLCt_drogasSolicitadas;
    { Methods & Properties }
    function Add: I341_XMLCt_drogasSolicitadas;
    function Insert(const Index: Integer): I341_XMLCt_drogasSolicitadas;
    property DrogaSolicitada[Index: Integer]: I341_XMLCt_drogasSolicitadas read Get_DrogaSolicitada; default;
  end;

{ I341_XMLCt_drogasSolicitadas }

  I341_XMLCt_drogasSolicitadas = interface(IXMLNode)
    ['{7D4F4336-AE6A-461B-AEA5-E635DEFE9E67}']
    { Property Accessors }
    function Get_DataProvavel: WideString;
    function Get_Identificacao: I341_XMLCt_procedimentoDados;
    function Get_QtDoses: WideString;
    function Get_UnidadeMedida: WideString;
    function Get_ViaAdministracao: WideString;
    function Get_Frequencia: Integer;
    procedure Set_DataProvavel(Value: WideString);
    procedure Set_QtDoses(Value: WideString);
    procedure Set_UnidadeMedida(Value: WideString);
    procedure Set_ViaAdministracao(Value: WideString);
    procedure Set_Frequencia(Value: Integer);
    { Methods & Properties }
    property DataProvavel: WideString read Get_DataProvavel write Set_DataProvavel;
    property Identificacao: I341_XMLCt_procedimentoDados read Get_Identificacao;
    property QtDoses: WideString read Get_QtDoses write Set_QtDoses;
    property UnidadeMedida: WideString read Get_UnidadeMedida write Set_UnidadeMedida;
    property ViaAdministracao: WideString read Get_ViaAdministracao write Set_ViaAdministracao;
    property Frequencia: Integer read Get_Frequencia write Set_Frequencia;
  end;

{ I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores }

  I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores = interface(IXMLNode)
    ['{829B2025-9961-4D79-A385-6C35677B5312}']
    { Property Accessors }
    function Get_Cirurgia: WideString;
    function Get_Datacirurgia: WideString;
    function Get_AreaIrradiada: WideString;
    function Get_DataIrradiacao: WideString;
    procedure Set_Cirurgia(Value: WideString);
    procedure Set_Datacirurgia(Value: WideString);
    procedure Set_AreaIrradiada(Value: WideString);
    procedure Set_DataIrradiacao(Value: WideString);
    { Methods & Properties }
    property Cirurgia: WideString read Get_Cirurgia write Set_Cirurgia;
    property Datacirurgia: WideString read Get_Datacirurgia write Set_Datacirurgia;
    property AreaIrradiada: WideString read Get_AreaIrradiada write Set_AreaIrradiada;
    property DataIrradiacao: WideString read Get_DataIrradiacao write Set_DataIrradiacao;
  end;

{ I341_XMLCtm_autorizacaoQuimio_motivosNegativa }

  I341_XMLCtm_autorizacaoQuimio_motivosNegativa = interface(IXMLNodeCollection)
    ['{47BFD327-E51E-484F-AFB9-8C6315ADF34D}']
    { Property Accessors }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoNegativa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoNegativa; default;
  end;

{ I341_XMLCtm_autorizacaoRadio }

  I341_XMLCtm_autorizacaoRadio = interface(IXMLNode)
    ['{37BB5554-D020-44A7-983E-E1B5FEFF0BAD}']
    { Property Accessors }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_StatusSolicitacao: WideString;
    function Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiarioRadio;
    function Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_DiagnosticoOncologicoRadio: I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio;
    function Get_TratamentosAnteriores: I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores;
    function Get_NumeroCampos: Integer;
    function Get_DoseCampo: Integer;
    function Get_DoseTotal: Integer;
    function Get_NrDias: Integer;
    function Get_DtPrevistaInicio: WideString;
    function Get_MotivosNegativa: I341_XMLCtm_autorizacaoRadio_motivosNegativa;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_StatusSolicitacao(Value: WideString);
    procedure Set_NumeroCampos(Value: Integer);
    procedure Set_DoseCampo(Value: Integer);
    procedure Set_DoseTotal(Value: Integer);
    procedure Set_NrDias(Value: Integer);
    procedure Set_DtPrevistaInicio(Value: WideString);
    { Methods & Properties }
    property DadosAutorizacao: I341_XMLCt_autorizacaoDados read Get_DadosAutorizacao;
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property NumeroCNS: WideString read Get_NumeroCNS write Set_NumeroCNS;
    property StatusSolicitacao: WideString read Get_StatusSolicitacao write Set_StatusSolicitacao;
    property DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiarioRadio read Get_DadosComplementaresBeneficiario;
    property MedicoSolicitante: I341_XMLCtm_anexoSolicitante read Get_MedicoSolicitante;
    property DiagnosticoOncologicoRadio: I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio read Get_DiagnosticoOncologicoRadio;
    property TratamentosAnteriores: I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores read Get_TratamentosAnteriores;
    property NumeroCampos: Integer read Get_NumeroCampos write Set_NumeroCampos;
    property DoseCampo: Integer read Get_DoseCampo write Set_DoseCampo;
    property DoseTotal: Integer read Get_DoseTotal write Set_DoseTotal;
    property NrDias: Integer read Get_NrDias write Set_NrDias;
    property DtPrevistaInicio: WideString read Get_DtPrevistaInicio write Set_DtPrevistaInicio;
    property MotivosNegativa: I341_XMLCtm_autorizacaoRadio_motivosNegativa read Get_MotivosNegativa;
  end;

{ I341_XMLCt_dadosComplementaresBeneficiarioRadio }

  I341_XMLCt_dadosComplementaresBeneficiarioRadio = interface(IXMLNode)
    ['{1FCE12E8-C017-4D06-A16C-65FEAC1F3C33}']
    { Property Accessors }
    function Get_Idade: Integer;
    function Get_Sexo: WideString;
    procedure Set_Idade(Value: Integer);
    procedure Set_Sexo(Value: WideString);
    { Methods & Properties }
    property Idade: Integer read Get_Idade write Set_Idade;
    property Sexo: WideString read Get_Sexo write Set_Sexo;
  end;

{ I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio }

  I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio = interface(IXMLNode)
    ['{01A85B82-EDE1-4554-8EBD-330913E74C05}']
    { Property Accessors }
    function Get_DiagRadio: I341_XMLCt_diagnosticoOncologico;
    function Get_DiagnosticoImagem: WideString;
    procedure Set_DiagnosticoImagem(Value: WideString);
    { Methods & Properties }
    property DiagRadio: I341_XMLCt_diagnosticoOncologico read Get_DiagRadio;
    property DiagnosticoImagem: WideString read Get_DiagnosticoImagem write Set_DiagnosticoImagem;
  end;

{ I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores }

  I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores = interface(IXMLNode)
    ['{7CC4CC6B-5AB4-4C74-A868-696159647A2E}']
    { Property Accessors }
    function Get_Cirurgia: WideString;
    function Get_Datacirurgia: WideString;
    function Get_Quimioterapia: WideString;
    function Get_DataQuimioterapia: WideString;
    procedure Set_Cirurgia(Value: WideString);
    procedure Set_Datacirurgia(Value: WideString);
    procedure Set_Quimioterapia(Value: WideString);
    procedure Set_DataQuimioterapia(Value: WideString);
    { Methods & Properties }
    property Cirurgia: WideString read Get_Cirurgia write Set_Cirurgia;
    property Datacirurgia: WideString read Get_Datacirurgia write Set_Datacirurgia;
    property Quimioterapia: WideString read Get_Quimioterapia write Set_Quimioterapia;
    property DataQuimioterapia: WideString read Get_DataQuimioterapia write Set_DataQuimioterapia;
  end;

{ I341_XMLCtm_autorizacaoRadio_motivosNegativa }

  I341_XMLCtm_autorizacaoRadio_motivosNegativa = interface(IXMLNodeCollection)
    ['{7A7C1582-C584-46A1-A6B4-A319CED6E94B}']
    { Property Accessors }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoNegativa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoNegativa; default;
  end;

{ I341_XMLCto_anexoSituacaoInicial }

  I341_XMLCto_anexoSituacaoInicial = interface(IXMLNode)
    ['{A6C310D4-C352-45A7-8AB1-C3E4784AAB33}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaAnexo: WideString;
    function Get_NumeroGuiaReferenciada: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_Ct_situacaoInicial: I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaAnexo(Value: WideString);
    procedure Set_NumeroGuiaReferenciada(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaAnexo: WideString read Get_NumeroGuiaAnexo write Set_NumeroGuiaAnexo;
    property NumeroGuiaReferenciada: WideString read Get_NumeroGuiaReferenciada write Set_NumeroGuiaReferenciada;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property Ct_situacaoInicial: I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial read Get_Ct_situacaoInicial;
  end;

{ I341_XMLCto_anexoSituacaoInicialList341 }

  I341_XMLCto_anexoSituacaoInicialList341 = interface(IXMLNodeCollection)
    ['{A3E3FCCB-546D-4DF4-BB1C-BE79D7EC0575}']
    { Methods & Properties }
    function Add: I341_XMLCto_anexoSituacaoInicial;
    function Insert(const Index: Integer): I341_XMLCto_anexoSituacaoInicial;

    function Get_Item(Index: Integer): I341_XMLCto_anexoSituacaoInicial;
    property Items[Index: Integer]: I341_XMLCto_anexoSituacaoInicial read Get_Item; default;
  end;

{ I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial }

  I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial = interface(IXMLNode)
    ['{5E2E4A67-9194-4D5C-A267-C3652CBD0E65}']
    { Property Accessors }
    function Get_SituacaoClinica: I341_XMLCt_situacaoClinica;
    function Get_DoencaPeriodontal: Boolean;
    function Get_AlteracaoTecidoMole: Boolean;
    function Get_Observacao: WideString;
    procedure Set_DoencaPeriodontal(Value: Boolean);
    procedure Set_AlteracaoTecidoMole(Value: Boolean);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property SituacaoClinica: I341_XMLCt_situacaoClinica read Get_SituacaoClinica;
    property DoencaPeriodontal: Boolean read Get_DoencaPeriodontal write Set_DoencaPeriodontal;
    property AlteracaoTecidoMole: Boolean read Get_AlteracaoTecidoMole write Set_AlteracaoTecidoMole;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
  end;

{ I341_XMLCt_situacaoClinica }

  I341_XMLCt_situacaoClinica = interface(IXMLNodeCollection)
    ['{2B94380D-08E5-4413-B0A6-D2785A5DA7BA}']
    { Property Accessors }
    function Get_Dentes(Index: Integer): I341_XMLCt_situacaoClinica_dentes;
    { Methods & Properties }
    function Add: I341_XMLCt_situacaoClinica_dentes;
    function Insert(const Index: Integer): I341_XMLCt_situacaoClinica_dentes;
    property Dentes[Index: Integer]: I341_XMLCt_situacaoClinica_dentes read Get_Dentes; default;
  end;

{ I341_XMLCt_situacaoClinica_dentes }

  I341_XMLCt_situacaoClinica_dentes = interface(IXMLNode)
    ['{2FF3C828-7A6A-4176-A496-0AE50EA11287}']
    { Property Accessors }
    function Get_ElementoDentario: WideString;
    function Get_CondicaoClinica: WideString;
    procedure Set_ElementoDentario(Value: WideString);
    procedure Set_CondicaoClinica(Value: WideString);
    { Methods & Properties }
    property ElementoDentario: WideString read Get_ElementoDentario write Set_ElementoDentario;
    property CondicaoClinica: WideString read Get_CondicaoClinica write Set_CondicaoClinica;
  end;

{ I341_XMLCt_recebimentoRecurso }

  I341_XMLCt_recebimentoRecurso = interface(IXMLNode)
    ['{4234A954-DE9D-4834-8404-43D716A72E3A}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ProtocoloRecebimento: I341_XMLCt_recursoGlosaRecebimento;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property ProtocoloRecebimento: I341_XMLCt_recursoGlosaRecebimento read Get_ProtocoloRecebimento;
  end;

{ I341_XMLCt_recursoGlosaRecebimento }

  I341_XMLCt_recursoGlosaRecebimento = interface(IXMLNode)
    ['{26B405B2-8ABB-4EB2-BE0C-9BD197B33414}']
    { Property Accessors }
    function Get_NrProtocoloRecursoGlosa: WideString;
    function Get_DataEnvioRecurso: WideString;
    function Get_DataRecebimentoRecurso: WideString;
    function Get_NumeroLote: WideString;
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NrProtocoloRecursado: WideString;
    function Get_RecursoProtocolo: I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo;
    function Get_QtGuiasRecurso: Integer;
    function Get_GuiasRecurso: I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341;
    function Get_Observacao: WideString;
    function Get_ValorTotalRecursado: WideString;
    procedure Set_NrProtocoloRecursoGlosa(Value: WideString);
    procedure Set_DataEnvioRecurso(Value: WideString);
    procedure Set_DataRecebimentoRecurso(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NrProtocoloRecursado(Value: WideString);
    procedure Set_QtGuiasRecurso(Value: Integer);
    procedure Set_Observacao(Value: WideString);
    procedure Set_ValorTotalRecursado(Value: WideString);
    { Methods & Properties }
    property NrProtocoloRecursoGlosa: WideString read Get_NrProtocoloRecursoGlosa write Set_NrProtocoloRecursoGlosa;
    property DataEnvioRecurso: WideString read Get_DataEnvioRecurso write Set_DataEnvioRecurso;
    property DataRecebimentoRecurso: WideString read Get_DataRecebimentoRecurso write Set_DataRecebimentoRecurso;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property NrProtocoloRecursado: WideString read Get_NrProtocoloRecursado write Set_NrProtocoloRecursado;
    property RecursoProtocolo: I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo read Get_RecursoProtocolo;
    property QtGuiasRecurso: Integer read Get_QtGuiasRecurso write Set_QtGuiasRecurso;
    property GuiasRecurso: I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341 read Get_GuiasRecurso;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property ValorTotalRecursado: WideString read Get_ValorTotalRecursado write Set_ValorTotalRecursado;
  end;

{ I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo }

  I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo = interface(IXMLNode)
    ['{FF0F1869-B86C-4E97-8605-D4D6EE2D2F7A}']
    { Property Accessors }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
    { Methods & Properties }
    property CodigoGlosaProtocolo: WideString read Get_CodigoGlosaProtocolo write Set_CodigoGlosaProtocolo;
    property JustificativaProtocolo: WideString read Get_JustificativaProtocolo write Set_JustificativaProtocolo;
  end;

{ I341_XMLCt_recursoGlosaRecebimento_guiasRecurso }

  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso = interface(IXMLNode)
    ['{A96540E4-2C67-4D70-81CF-CCB7A33AE843}']
    { Property Accessors }
    function Get_NumeroGuiaOrigem: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_OpcaoRecursoGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia;
    procedure Set_NumeroGuiaOrigem(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaOrigem: WideString read Get_NumeroGuiaOrigem write Set_NumeroGuiaOrigem;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Senha: WideString read Get_Senha write Set_Senha;
    property OpcaoRecursoGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia read Get_OpcaoRecursoGuia;
  end;

{ I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341 }

  I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341 = interface(IXMLNodeCollection)
    ['{8E3F23ED-1FD9-4C4F-BBCA-59E0519FF0D9}']
    { Methods & Properties }
    function Add: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
    function Insert(const Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;

    function Get_Item(Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
    property Items[Index: Integer]: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso read Get_Item; default;
  end;

{ I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia }

  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia = interface(IXMLNode)
    ['{C16A52CD-B364-443C-8FBC-AFEEBA6CF811}']
    { Property Accessors }
    function Get_RecursoGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341;
    function Get_ItensGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341;
    { Methods & Properties }
    property RecursoGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341 read Get_RecursoGuia;
    property ItensGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341 read Get_ItensGuia;
  end;

{ I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia }

  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia = interface(IXMLNode)
    ['{375A0D7D-E0B2-42DC-B2A7-918600356109}']
    { Property Accessors }
    function Get_CodGlosaGuia: WideString;
    function Get_JustificativaGuia: WideString;
    procedure Set_CodGlosaGuia(Value: WideString);
    procedure Set_JustificativaGuia(Value: WideString);
    { Methods & Properties }
    property CodGlosaGuia: WideString read Get_CodGlosaGuia write Set_CodGlosaGuia;
    property JustificativaGuia: WideString read Get_JustificativaGuia write Set_JustificativaGuia;
  end;

{ I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341 }

  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341 = interface(IXMLNodeCollection)
    ['{2B7A4C60-8D7E-4226-B5AC-769FAB66DF24}']
    { Methods & Properties }
    function Add: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
    property Items[Index: Integer]: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia read Get_Item; default;
  end;

{ I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia }

  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia = interface(IXMLNode)
    ['{77F6F365-E394-4D2C-8145-163A73EECA15}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_DataInicio: WideString;
    function Get_DataFim: WideString;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_CodGlosaItem: WideString;
    function Get_ValorRecursado: WideString;
    function Get_JustificativaItem: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataInicio(Value: WideString);
    procedure Set_DataFim(Value: WideString);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_CodGlosaItem(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
    procedure Set_JustificativaItem(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property DataInicio: WideString read Get_DataInicio write Set_DataInicio;
    property DataFim: WideString read Get_DataFim write Set_DataFim;
    property ProcRecurso: I341_XMLCt_procedimentoDados read Get_ProcRecurso;
    property DenteRegiao: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao read Get_DenteRegiao;
    property DenteFace: WideString read Get_DenteFace write Set_DenteFace;
    property CodGlosaItem: WideString read Get_CodGlosaItem write Set_CodGlosaItem;
    property ValorRecursado: WideString read Get_ValorRecursado write Set_ValorRecursado;
    property JustificativaItem: WideString read Get_JustificativaItem write Set_JustificativaItem;
  end;

{ I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341 }

  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341 = interface(IXMLNodeCollection)
    ['{DF6D3356-DD1C-435A-9F4A-27E3D5F127A1}']
    { Methods & Properties }
    function Add: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
    function Insert(const Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;

    function Get_Item(Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
    property Items[Index: Integer]: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia read Get_Item; default;
  end;

{ I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao }

  I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao = interface(IXMLNode)
    ['{2F3E0D83-A569-4C55-83F9-4390A0BC3F79}']
    { Property Accessors }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
    { Methods & Properties }
    property CodDente: WideString read Get_CodDente write Set_CodDente;
    property CodRegiao: WideString read Get_CodRegiao write Set_CodRegiao;
  end;

{ I341_XMLCt_demonstrativoRetorno }

  I341_XMLCt_demonstrativoRetorno = interface(IXMLNode)
    ['{9FA0626A-8988-455A-BA87-0ADBA7EF3D47}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_DemonstrativoAnaliseConta: I341_XMLCtm_demonstrativoAnaliseContaList341;
    function Get_DemonstrativoPagamento: I341_XMLCtm_demonstrativoPagamento;
    function Get_DemonstrativoPagamentoOdonto: I341_XMLCto_demonstrativoOdontologia;
    function Get_SituacaoDemonstrativoRetorno: I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property DemonstrativoAnaliseConta: I341_XMLCtm_demonstrativoAnaliseContaList341 read Get_DemonstrativoAnaliseConta;
    property DemonstrativoPagamento: I341_XMLCtm_demonstrativoPagamento read Get_DemonstrativoPagamento;
    property DemonstrativoPagamentoOdonto: I341_XMLCto_demonstrativoOdontologia read Get_DemonstrativoPagamentoOdonto;
    property SituacaoDemonstrativoRetorno: I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno read Get_SituacaoDemonstrativoRetorno;
  end;

{ I341_XMLCtm_demonstrativoAnaliseConta }

  I341_XMLCtm_demonstrativoAnaliseConta = interface(IXMLNode)
    ['{AE758BA1-B4A1-47F0-9E06-0BF6C1BFE314}']
    { Property Accessors }
    function Get_CabecalhoDemonstrativo: I341_XMLCt_demonstrativoCabecalho;
    function Get_DadosPrestador: I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador;
    function Get_DadosConta: I341_XMLCtm_demonstrativoAnaliseConta_dadosConta;
    function Get_ValorInformadoGeral: WideString;
    function Get_ValorProcessadoGeral: WideString;
    function Get_ValorLiberadoGeral: WideString;
    function Get_ValorGlosaGeral: WideString;
    procedure Set_ValorInformadoGeral(Value: WideString);
    procedure Set_ValorProcessadoGeral(Value: WideString);
    procedure Set_ValorLiberadoGeral(Value: WideString);
    procedure Set_ValorGlosaGeral(Value: WideString);
    { Methods & Properties }
    property CabecalhoDemonstrativo: I341_XMLCt_demonstrativoCabecalho read Get_CabecalhoDemonstrativo;
    property DadosPrestador: I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador read Get_DadosPrestador;
    property DadosConta: I341_XMLCtm_demonstrativoAnaliseConta_dadosConta read Get_DadosConta;
    property ValorInformadoGeral: WideString read Get_ValorInformadoGeral write Set_ValorInformadoGeral;
    property ValorProcessadoGeral: WideString read Get_ValorProcessadoGeral write Set_ValorProcessadoGeral;
    property ValorLiberadoGeral: WideString read Get_ValorLiberadoGeral write Set_ValorLiberadoGeral;
    property ValorGlosaGeral: WideString read Get_ValorGlosaGeral write Set_ValorGlosaGeral;
  end;

{ I341_XMLCtm_demonstrativoAnaliseContaList341 }

  I341_XMLCtm_demonstrativoAnaliseContaList341 = interface(IXMLNodeCollection)
    ['{194E9463-7BC8-4BD0-AC91-E767862D3EF2}']
    { Methods & Properties }
    function Add: I341_XMLCtm_demonstrativoAnaliseConta;
    function Insert(const Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta;

    function Get_Item(Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta;
    property Items[Index: Integer]: I341_XMLCtm_demonstrativoAnaliseConta read Get_Item; default;
  end;

{ I341_XMLCt_demonstrativoCabecalho }

  I341_XMLCt_demonstrativoCabecalho = interface(IXMLNode)
    ['{AAA95C8A-E31B-46AB-B371-BD98EEE81202}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroDemonstrativo: WideString;
    function Get_NomeOperadora: WideString;
    function Get_NumeroCNPJ: WideString;
    function Get_DataEmissao: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroDemonstrativo(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_NumeroCNPJ(Value: WideString);
    procedure Set_DataEmissao(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroDemonstrativo: WideString read Get_NumeroDemonstrativo write Set_NumeroDemonstrativo;
    property NomeOperadora: WideString read Get_NomeOperadora write Set_NomeOperadora;
    property NumeroCNPJ: WideString read Get_NumeroCNPJ write Set_NumeroCNPJ;
    property DataEmissao: WideString read Get_DataEmissao write Set_DataEmissao;
  end;

{ I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador }

  I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador = interface(IXMLNode)
    ['{EC964BAD-C87E-4D2C-9312-C7A83FADDBED}']
    { Property Accessors }
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
    { Methods & Properties }
    property DadosContratado: I341_XMLCt_contratadoDados read Get_DadosContratado;
    property CNES: WideString read Get_CNES write Set_CNES;
  end;

{ I341_XMLCtm_demonstrativoAnaliseConta_dadosConta }

  I341_XMLCtm_demonstrativoAnaliseConta_dadosConta = interface(IXMLNodeCollection)
    ['{5B13E814-4685-4DE0-B45A-309C80F0D9C5}']
    { Property Accessors }
    function Get_DadosProtocolo(Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
    { Methods & Properties }
    function Add: I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
    function Insert(const Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
    property DadosProtocolo[Index: Integer]: I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo read Get_DadosProtocolo; default;
  end;

{ I341_XMLCt_contaMedicaResumo }

  I341_XMLCt_contaMedicaResumo = interface(IXMLNode)
    ['{742B2341-0098-4FA1-822D-7ECF322D2723}']
    { Property Accessors }
    function Get_NumeroLotePrestador: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_DataProtocolo: WideString;
    function Get_GlosaProtocolo: I341_XMLCt_motivoGlosa;
    function Get_SituacaoProtocolo: WideString;
    function Get_RelacaoGuias: I341_XMLCt_contaMedicaResumo_relacaoGuiasList341;
    function Get_ValorInformadoProtocolo: WideString;
    function Get_ValorProcessadoProtocolo: WideString;
    function Get_ValorLiberadoProtocolo: WideString;
    function Get_ValorGlosaProtocolo: WideString;
    procedure Set_NumeroLotePrestador(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_DataProtocolo(Value: WideString);
    procedure Set_SituacaoProtocolo(Value: WideString);
    procedure Set_ValorInformadoProtocolo(Value: WideString);
    procedure Set_ValorProcessadoProtocolo(Value: WideString);
    procedure Set_ValorLiberadoProtocolo(Value: WideString);
    procedure Set_ValorGlosaProtocolo(Value: WideString);
    { Methods & Properties }
    property NumeroLotePrestador: WideString read Get_NumeroLotePrestador write Set_NumeroLotePrestador;
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property DataProtocolo: WideString read Get_DataProtocolo write Set_DataProtocolo;
    property GlosaProtocolo: I341_XMLCt_motivoGlosa read Get_GlosaProtocolo;
    property SituacaoProtocolo: WideString read Get_SituacaoProtocolo write Set_SituacaoProtocolo;
    property RelacaoGuias: I341_XMLCt_contaMedicaResumo_relacaoGuiasList341 read Get_RelacaoGuias;
    property ValorInformadoProtocolo: WideString read Get_ValorInformadoProtocolo write Set_ValorInformadoProtocolo;
    property ValorProcessadoProtocolo: WideString read Get_ValorProcessadoProtocolo write Set_ValorProcessadoProtocolo;
    property ValorLiberadoProtocolo: WideString read Get_ValorLiberadoProtocolo write Set_ValorLiberadoProtocolo;
    property ValorGlosaProtocolo: WideString read Get_ValorGlosaProtocolo write Set_ValorGlosaProtocolo;
  end;

{ I341_XMLCt_contaMedicaResumo_relacaoGuias }

  I341_XMLCt_contaMedicaResumo_relacaoGuias = interface(IXMLNode)
    ['{03420993-A397-4317-8E78-CDE3AD18BA19}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_DataInicioFat: WideString;
    function Get_HoraInicioFat: WideString;
    function Get_DataFimFat: WideString;
    function Get_HoraFimFat: WideString;
    function Get_MotivoGlosaGuia: I341_XMLCt_motivoGlosaList341;
    function Get_SituacaoGuia: WideString;
    function Get_DetalhesGuia: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341;
    function Get_ValorInformadoGuia: WideString;
    function Get_ValorProcessadoGuia: WideString;
    function Get_ValorLiberadoGuia: WideString;
    function Get_ValorGlosaGuia: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_DataInicioFat(Value: WideString);
    procedure Set_HoraInicioFat(Value: WideString);
    procedure Set_DataFimFat(Value: WideString);
    procedure Set_HoraFimFat(Value: WideString);
    procedure Set_SituacaoGuia(Value: WideString);
    procedure Set_ValorInformadoGuia(Value: WideString);
    procedure Set_ValorProcessadoGuia(Value: WideString);
    procedure Set_ValorLiberadoGuia(Value: WideString);
    procedure Set_ValorGlosaGuia(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Senha: WideString read Get_Senha write Set_Senha;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property DataInicioFat: WideString read Get_DataInicioFat write Set_DataInicioFat;
    property HoraInicioFat: WideString read Get_HoraInicioFat write Set_HoraInicioFat;
    property DataFimFat: WideString read Get_DataFimFat write Set_DataFimFat;
    property HoraFimFat: WideString read Get_HoraFimFat write Set_HoraFimFat;
    property MotivoGlosaGuia: I341_XMLCt_motivoGlosaList341 read Get_MotivoGlosaGuia;
    property SituacaoGuia: WideString read Get_SituacaoGuia write Set_SituacaoGuia;
    property DetalhesGuia: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341 read Get_DetalhesGuia;
    property ValorInformadoGuia: WideString read Get_ValorInformadoGuia write Set_ValorInformadoGuia;
    property ValorProcessadoGuia: WideString read Get_ValorProcessadoGuia write Set_ValorProcessadoGuia;
    property ValorLiberadoGuia: WideString read Get_ValorLiberadoGuia write Set_ValorLiberadoGuia;
    property ValorGlosaGuia: WideString read Get_ValorGlosaGuia write Set_ValorGlosaGuia;
  end;

{ I341_XMLCt_contaMedicaResumo_relacaoGuiasList341 }

  I341_XMLCt_contaMedicaResumo_relacaoGuiasList341 = interface(IXMLNodeCollection)
    ['{718FCEE9-7D07-45CE-B945-AF265DB0C80A}']
    { Methods & Properties }
    function Add: I341_XMLCt_contaMedicaResumo_relacaoGuias;
    function Insert(const Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias;

    function Get_Item(Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias;
    property Items[Index: Integer]: I341_XMLCt_contaMedicaResumo_relacaoGuias read Get_Item; default;
  end;

{ I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia }

  I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia = interface(IXMLNode)
    ['{CE7A7573-5943-47CD-9226-ACDEB9259891}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_DataRealizacao: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_GrauParticipacao: WideString;
    function Get_ValorInformado: WideString;
    function Get_QtdExecutada: WideString;
    function Get_ValorProcessado: WideString;
    function Get_ValorLiberado: WideString;
    function Get_RelacaoGlosa: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_GrauParticipacao(Value: WideString);
    procedure Set_ValorInformado(Value: WideString);
    procedure Set_QtdExecutada(Value: WideString);
    procedure Set_ValorProcessado(Value: WideString);
    procedure Set_ValorLiberado(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property DataRealizacao: WideString read Get_DataRealizacao write Set_DataRealizacao;
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property GrauParticipacao: WideString read Get_GrauParticipacao write Set_GrauParticipacao;
    property ValorInformado: WideString read Get_ValorInformado write Set_ValorInformado;
    property QtdExecutada: WideString read Get_QtdExecutada write Set_QtdExecutada;
    property ValorProcessado: WideString read Get_ValorProcessado write Set_ValorProcessado;
    property ValorLiberado: WideString read Get_ValorLiberado write Set_ValorLiberado;
    property RelacaoGlosa: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341 read Get_RelacaoGlosa;
  end;

{ I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341 }

  I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341 = interface(IXMLNodeCollection)
    ['{7A2B0719-A702-431B-8F39-DDC806960A20}']
    { Methods & Properties }
    function Add: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
    function Insert(const Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;

    function Get_Item(Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
    property Items[Index: Integer]: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia read Get_Item; default;
  end;

{ I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa }

  I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa = interface(IXMLNode)
    ['{9FFB4EC0-718C-467F-8780-3FEE79A8BC46}']
    { Property Accessors }
    function Get_ValorGlosa: WideString;
    function Get_TipoGlosa: WideString;
    procedure Set_ValorGlosa(Value: WideString);
    procedure Set_TipoGlosa(Value: WideString);
    { Methods & Properties }
    property ValorGlosa: WideString read Get_ValorGlosa write Set_ValorGlosa;
    property TipoGlosa: WideString read Get_TipoGlosa write Set_TipoGlosa;
  end;

{ I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341 }

  I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341 = interface(IXMLNodeCollection)
    ['{8E5D804F-05CD-4D14-B349-47731640EDFE}']
    { Methods & Properties }
    function Add: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;

    function Get_Item(Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
    property Items[Index: Integer]: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa read Get_Item; default;
  end;

{ I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo }

  I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo = interface(I341_XMLCt_contaMedicaResumo)
    ['{8D1C13F5-952A-485A-AF67-DDD39CAD86F3}']
  end;

{ I341_XMLCtm_demonstrativoPagamento }

  I341_XMLCtm_demonstrativoPagamento = interface(IXMLNode)
    ['{723C79EC-47F2-4A21-A81D-C3E2B8C6A677}']
    { Property Accessors }
    function Get_CabecalhoDemonstrativo: I341_XMLCt_demonstrativoCabecalho;
    function Get_DadosContratado: I341_XMLCtm_demonstrativoPagamento_dadosContratado;
    function Get_Pagamentos: I341_XMLCtm_demonstrativoPagamento_pagamentos;
    function Get_TotaisDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo;
    function Get_Observacao: WideString;
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property CabecalhoDemonstrativo: I341_XMLCt_demonstrativoCabecalho read Get_CabecalhoDemonstrativo;
    property DadosContratado: I341_XMLCtm_demonstrativoPagamento_dadosContratado read Get_DadosContratado;
    property Pagamentos: I341_XMLCtm_demonstrativoPagamento_pagamentos read Get_Pagamentos;
    property TotaisDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo read Get_TotaisDemonstrativo;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
  end;

{ I341_XMLCtm_demonstrativoPagamento_dadosContratado }

  I341_XMLCtm_demonstrativoPagamento_dadosContratado = interface(IXMLNode)
    ['{5764F88A-5467-4611-B7E4-4928BEE143E0}']
    { Property Accessors }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
    { Methods & Properties }
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property CNES: WideString read Get_CNES write Set_CNES;
  end;

{ I341_XMLCtm_demonstrativoPagamento_pagamentos }

  I341_XMLCtm_demonstrativoPagamento_pagamentos = interface(IXMLNodeCollection)
    ['{08F4FE1D-331D-4043-84F5-4C7C019E2E1B}']
    { Property Accessors }
    function Get_PagamentosPorData(Index: Integer): I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
    { Methods & Properties }
    function Add: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
    function Insert(const Index: Integer): I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
    property PagamentosPorData[Index: Integer]: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData read Get_PagamentosPorData; default;
  end;

{ I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData }

  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData = interface(IXMLNode)
    ['{58D5246C-27DF-4B2E-BFC0-B0DE1F1E5F07}']
    { Property Accessors }
    function Get_DadosPagamento: I341_XMLCt_pagamentoDados;
    function Get_DadosResumo: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo;
    function Get_TotaisBrutosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData;
    function Get_DebitosCreditosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData;
    function Get_TotaisLiquidosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData;
    { Methods & Properties }
    property DadosPagamento: I341_XMLCt_pagamentoDados read Get_DadosPagamento;
    property DadosResumo: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo read Get_DadosResumo;
    property TotaisBrutosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData read Get_TotaisBrutosPorData;
    property DebitosCreditosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData read Get_DebitosCreditosPorData;
    property TotaisLiquidosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData read Get_TotaisLiquidosPorData;
  end;

{ I341_XMLCt_pagamentoDados }

  I341_XMLCt_pagamentoDados = interface(IXMLNode)
    ['{7E0FE6E7-9B70-4FE6-B8C6-022CB0C176F3}']
    { Property Accessors }
    function Get_DataPagamento: WideString;
    function Get_FormaPagamento: WideString;
    function Get_Banco: WideString;
    function Get_Agencia: WideString;
    function Get_NrContaCheque: WideString;
    procedure Set_DataPagamento(Value: WideString);
    procedure Set_FormaPagamento(Value: WideString);
    procedure Set_Banco(Value: WideString);
    procedure Set_Agencia(Value: WideString);
    procedure Set_NrContaCheque(Value: WideString);
    { Methods & Properties }
    property DataPagamento: WideString read Get_DataPagamento write Set_DataPagamento;
    property FormaPagamento: WideString read Get_FormaPagamento write Set_FormaPagamento;
    property Banco: WideString read Get_Banco write Set_Banco;
    property Agencia: WideString read Get_Agencia write Set_Agencia;
    property NrContaCheque: WideString read Get_NrContaCheque write Set_NrContaCheque;
  end;

{ I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo }

  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo = interface(IXMLNodeCollection)
    ['{5E311F7B-94DC-47C6-ABAF-A7CECFEB1C83}']
    { Property Accessors }
    function Get_RelacaoProtocolos(Index: Integer): I341_XMLCt_dadosResumoDemonstrativo;
    { Methods & Properties }
    function Add: I341_XMLCt_dadosResumoDemonstrativo;
    function Insert(const Index: Integer): I341_XMLCt_dadosResumoDemonstrativo;
    property RelacaoProtocolos[Index: Integer]: I341_XMLCt_dadosResumoDemonstrativo read Get_RelacaoProtocolos; default;
  end;

{ I341_XMLCt_dadosResumoDemonstrativo }

  I341_XMLCt_dadosResumoDemonstrativo = interface(IXMLNode)
    ['{5ED958D0-E278-4BB0-A9A2-D676F02E977F}']
    { Property Accessors }
    function Get_DataProtocolo: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_NumeroLote: WideString;
    function Get_ValorInformado: WideString;
    function Get_ValorProcessado: WideString;
    function Get_ValorLiberado: WideString;
    function Get_ValorGlosa: WideString;
    procedure Set_DataProtocolo(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_ValorInformado(Value: WideString);
    procedure Set_ValorProcessado(Value: WideString);
    procedure Set_ValorLiberado(Value: WideString);
    procedure Set_ValorGlosa(Value: WideString);
    { Methods & Properties }
    property DataProtocolo: WideString read Get_DataProtocolo write Set_DataProtocolo;
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property ValorInformado: WideString read Get_ValorInformado write Set_ValorInformado;
    property ValorProcessado: WideString read Get_ValorProcessado write Set_ValorProcessado;
    property ValorLiberado: WideString read Get_ValorLiberado write Set_ValorLiberado;
    property ValorGlosa: WideString read Get_ValorGlosa write Set_ValorGlosa;
  end;

{ I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData }

  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData = interface(IXMLNode)
    ['{6AE037B0-95E5-4BBB-8542-A913ACBEFBE2}']
    { Property Accessors }
    function Get_TotalInformadoPorData: WideString;
    function Get_TotalProcessadoPorData: WideString;
    function Get_TotaLiberadoPorData: WideString;
    function Get_TotalGlosaPorData: WideString;
    procedure Set_TotalInformadoPorData(Value: WideString);
    procedure Set_TotalProcessadoPorData(Value: WideString);
    procedure Set_TotaLiberadoPorData(Value: WideString);
    procedure Set_TotalGlosaPorData(Value: WideString);
    { Methods & Properties }
    property TotalInformadoPorData: WideString read Get_TotalInformadoPorData write Set_TotalInformadoPorData;
    property TotalProcessadoPorData: WideString read Get_TotalProcessadoPorData write Set_TotalProcessadoPorData;
    property TotaLiberadoPorData: WideString read Get_TotaLiberadoPorData write Set_TotaLiberadoPorData;
    property TotalGlosaPorData: WideString read Get_TotalGlosaPorData write Set_TotalGlosaPorData;
  end;

{ I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData }

  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData = interface(IXMLNodeCollection)
    ['{ED02BBF5-96CA-46FF-A1C2-3E994AE3808B}']
    { Property Accessors }
    function Get_DebitosCreditos(Index: Integer): I341_XMLCt_descontos;
    { Methods & Properties }
    function Add: I341_XMLCt_descontos;
    function Insert(const Index: Integer): I341_XMLCt_descontos;
    property DebitosCreditos[Index: Integer]: I341_XMLCt_descontos read Get_DebitosCreditos; default;
  end;

{ I341_XMLCt_descontos }

  I341_XMLCt_descontos = interface(IXMLNode)
    ['{05AB5AD1-11D7-4FE0-B528-5F052C34A7F6}']
    { Property Accessors }
    function Get_Indicador: WideString;
    function Get_TipoDebitoCredito: WideString;
    function Get_DescricaoDbCr: WideString;
    function Get_ValorDbCr: WideString;
    procedure Set_Indicador(Value: WideString);
    procedure Set_TipoDebitoCredito(Value: WideString);
    procedure Set_DescricaoDbCr(Value: WideString);
    procedure Set_ValorDbCr(Value: WideString);
    { Methods & Properties }
    property Indicador: WideString read Get_Indicador write Set_Indicador;
    property TipoDebitoCredito: WideString read Get_TipoDebitoCredito write Set_TipoDebitoCredito;
    property DescricaoDbCr: WideString read Get_DescricaoDbCr write Set_DescricaoDbCr;
    property ValorDbCr: WideString read Get_ValorDbCr write Set_ValorDbCr;
  end;

{ I341_XMLCt_descontosList341 }

  I341_XMLCt_descontosList341 = interface(IXMLNodeCollection)
    ['{84D93258-7800-476C-A7C5-EE92F42AEE2E}']
    { Methods & Properties }
    function Add: I341_XMLCt_descontos;
    function Insert(const Index: Integer): I341_XMLCt_descontos;

    function Get_Item(Index: Integer): I341_XMLCt_descontos;
    property Items[Index: Integer]: I341_XMLCt_descontos read Get_Item; default;
  end;

{ I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData }

  I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData = interface(IXMLNode)
    ['{283AAB4C-677F-4257-BCCA-C55A5FBF17CF}']
    { Property Accessors }
    function Get_TotalDebitosPorData: WideString;
    function Get_TotalCreditosPorData: WideString;
    function Get_LiquidoPorData: WideString;
    procedure Set_TotalDebitosPorData(Value: WideString);
    procedure Set_TotalCreditosPorData(Value: WideString);
    procedure Set_LiquidoPorData(Value: WideString);
    { Methods & Properties }
    property TotalDebitosPorData: WideString read Get_TotalDebitosPorData write Set_TotalDebitosPorData;
    property TotalCreditosPorData: WideString read Get_TotalCreditosPorData write Set_TotalCreditosPorData;
    property LiquidoPorData: WideString read Get_LiquidoPorData write Set_LiquidoPorData;
  end;

{ I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo }

  I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo = interface(IXMLNode)
    ['{59BCF410-6FAC-469D-870F-9A7805F806A2}']
    { Property Accessors }
    function Get_TotaisBrutosDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo;
    function Get_DebitosCreditosDemonstrativo: I341_XMLCt_descontosList341;
    function Get_TotaisLiquidosDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo;
    { Methods & Properties }
    property TotaisBrutosDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo read Get_TotaisBrutosDemonstrativo;
    property DebitosCreditosDemonstrativo: I341_XMLCt_descontosList341 read Get_DebitosCreditosDemonstrativo;
    property TotaisLiquidosDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo read Get_TotaisLiquidosDemonstrativo;
  end;

{ I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo }

  I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo = interface(IXMLNode)
    ['{6A68535D-76FB-47E6-9264-C77E7FC6ACF4}']
    { Property Accessors }
    function Get_ValorInformadoBruto: WideString;
    function Get_ValorProcessadoBruto: WideString;
    function Get_ValorLiberadoBruto: WideString;
    function Get_ValorGlosaBruto: WideString;
    procedure Set_ValorInformadoBruto(Value: WideString);
    procedure Set_ValorProcessadoBruto(Value: WideString);
    procedure Set_ValorLiberadoBruto(Value: WideString);
    procedure Set_ValorGlosaBruto(Value: WideString);
    { Methods & Properties }
    property ValorInformadoBruto: WideString read Get_ValorInformadoBruto write Set_ValorInformadoBruto;
    property ValorProcessadoBruto: WideString read Get_ValorProcessadoBruto write Set_ValorProcessadoBruto;
    property ValorLiberadoBruto: WideString read Get_ValorLiberadoBruto write Set_ValorLiberadoBruto;
    property ValorGlosaBruto: WideString read Get_ValorGlosaBruto write Set_ValorGlosaBruto;
  end;

{ I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo }

  I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo = interface(IXMLNode)
    ['{BF121390-039B-4B48-8F72-E1CD8629ABD6}']
    { Property Accessors }
    function Get_TotalDebitosDemonstrativo: WideString;
    function Get_TotalCreditosdemonstrativo: WideString;
    function Get_ValorLiberadoDemonstrativo: WideString;
    procedure Set_TotalDebitosDemonstrativo(Value: WideString);
    procedure Set_TotalCreditosdemonstrativo(Value: WideString);
    procedure Set_ValorLiberadoDemonstrativo(Value: WideString);
    { Methods & Properties }
    property TotalDebitosDemonstrativo: WideString read Get_TotalDebitosDemonstrativo write Set_TotalDebitosDemonstrativo;
    property TotalCreditosdemonstrativo: WideString read Get_TotalCreditosdemonstrativo write Set_TotalCreditosdemonstrativo;
    property ValorLiberadoDemonstrativo: WideString read Get_ValorLiberadoDemonstrativo write Set_ValorLiberadoDemonstrativo;
  end;

{ I341_XMLCto_demonstrativoOdontologia }

  I341_XMLCto_demonstrativoOdontologia = interface(IXMLNode)
    ['{92D6761F-4028-4146-95D9-8EAF7E0B9A70}']
    { Property Accessors }
    function Get_CabecalhoDemonstrativoOdonto: I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto;
    function Get_DadosPrestador: I341_XMLCto_demonstrativoOdontologia_dadosPrestador;
    function Get_DadosPagamentoPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341;
    function Get_TotaisBrutoDemonstrativo: I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo;
    function Get_DebCredDemonstrativo: I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo;
    function Get_TotalDebitosDemonstativo: WideString;
    function Get_TotalCreditosDemonstrativo: WideString;
    function Get_ValorRecebidoDemonstrativo: WideString;
    function Get_Observacao: WideString;
    procedure Set_TotalDebitosDemonstativo(Value: WideString);
    procedure Set_TotalCreditosDemonstrativo(Value: WideString);
    procedure Set_ValorRecebidoDemonstrativo(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property CabecalhoDemonstrativoOdonto: I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto read Get_CabecalhoDemonstrativoOdonto;
    property DadosPrestador: I341_XMLCto_demonstrativoOdontologia_dadosPrestador read Get_DadosPrestador;
    property DadosPagamentoPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341 read Get_DadosPagamentoPorData;
    property TotaisBrutoDemonstrativo: I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo read Get_TotaisBrutoDemonstrativo;
    property DebCredDemonstrativo: I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo read Get_DebCredDemonstrativo;
    property TotalDebitosDemonstativo: WideString read Get_TotalDebitosDemonstativo write Set_TotalDebitosDemonstativo;
    property TotalCreditosDemonstrativo: WideString read Get_TotalCreditosDemonstrativo write Set_TotalCreditosDemonstrativo;
    property ValorRecebidoDemonstrativo: WideString read Get_ValorRecebidoDemonstrativo write Set_ValorRecebidoDemonstrativo;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
  end;

{ I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto }

  I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto = interface(IXMLNode)
    ['{6B9A1477-C9F5-4A74-B002-76F462AF1E83}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroDemonstrativo: WideString;
    function Get_NomeOperadora: WideString;
    function Get_CnpjOper: WideString;
    function Get_PeriodoProc: I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroDemonstrativo(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_CnpjOper(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroDemonstrativo: WideString read Get_NumeroDemonstrativo write Set_NumeroDemonstrativo;
    property NomeOperadora: WideString read Get_NomeOperadora write Set_NomeOperadora;
    property CnpjOper: WideString read Get_CnpjOper write Set_CnpjOper;
    property PeriodoProc: I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc read Get_PeriodoProc;
  end;

{ I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc }

  I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc = interface(IXMLNode)
    ['{6E946573-E308-4F49-AE15-33F16BFA9A0D}']
    { Property Accessors }
    function Get_Datainicio: WideString;
    function Get_Datafim: WideString;
    procedure Set_Datainicio(Value: WideString);
    procedure Set_Datafim(Value: WideString);
    { Methods & Properties }
    property Datainicio: WideString read Get_Datainicio write Set_Datainicio;
    property Datafim: WideString read Get_Datafim write Set_Datafim;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPrestador }

  I341_XMLCto_demonstrativoOdontologia_dadosPrestador = interface(IXMLNode)
    ['{6E21B807-DD29-4D6C-A175-73BC4A156BB2}']
    { Property Accessors }
    function Get_CodigoPrestador: WideString;
    function Get_NomePrestador: WideString;
    function Get_CpfCNPJContratado: I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado;
    procedure Set_CodigoPrestador(Value: WideString);
    procedure Set_NomePrestador(Value: WideString);
    { Methods & Properties }
    property CodigoPrestador: WideString read Get_CodigoPrestador write Set_CodigoPrestador;
    property NomePrestador: WideString read Get_NomePrestador write Set_NomePrestador;
    property CpfCNPJContratado: I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado read Get_CpfCNPJContratado;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado }

  I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado = interface(IXMLNode)
    ['{7C8B35A9-C9D4-4F4D-BD6A-E36266072179}']
    { Property Accessors }
    function Get_CnpjPrestador: WideString;
    function Get_CpfContratado: WideString;
    procedure Set_CnpjPrestador(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
    { Methods & Properties }
    property CnpjPrestador: WideString read Get_CnpjPrestador write Set_CnpjPrestador;
    property CpfContratado: WideString read Get_CpfContratado write Set_CpfContratado;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData = interface(IXMLNode)
    ['{3D6A7FE8-7803-46A6-AE0E-55E8B8841A4A}']
    { Property Accessors }
    function Get_DadosPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento;
    function Get_Protocolos: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341;
    function Get_TotaisPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData;
    function Get_DebCredPorDataPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento;
    function Get_TotalLiquidoPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData;
    { Methods & Properties }
    property DadosPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento read Get_DadosPagamento;
    property Protocolos: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341 read Get_Protocolos;
    property TotaisPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData read Get_TotaisPorData;
    property DebCredPorDataPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento read Get_DebCredPorDataPagamento;
    property TotalLiquidoPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData read Get_TotalLiquidoPorData;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341 }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341 = interface(IXMLNodeCollection)
    ['{316347B2-F5E4-4BEB-9D69-36E23D3C66CB}']
    { Methods & Properties }
    function Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
    function Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;

    function Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
    property Items[Index: Integer]: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData read Get_Item; default;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento = interface(IXMLNode)
    ['{07EB21DE-2A99-409B-91EA-721724CBC70D}']
    { Property Accessors }
    function Get_DataPagamento: WideString;
    function Get_Banco: WideString;
    function Get_Agencia: WideString;
    function Get_Conta: WideString;
    procedure Set_DataPagamento(Value: WideString);
    procedure Set_Banco(Value: WideString);
    procedure Set_Agencia(Value: WideString);
    procedure Set_Conta(Value: WideString);
    { Methods & Properties }
    property DataPagamento: WideString read Get_DataPagamento write Set_DataPagamento;
    property Banco: WideString read Get_Banco write Set_Banco;
    property Agencia: WideString read Get_Agencia write Set_Agencia;
    property Conta: WideString read Get_Conta write Set_Conta;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos = interface(IXMLNode)
    ['{DBC3C980-394E-4B74-91F2-A4B30235E9A3}']
    { Property Accessors }
    function Get_NumeroLote: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_DadosPagamentoGuia: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341;
    function Get_TotaisPorProtocolo: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo;
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    { Methods & Properties }
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property DadosPagamentoGuia: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341 read Get_DadosPagamentoGuia;
    property TotaisPorProtocolo: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo read Get_TotaisPorProtocolo;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341 }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341 = interface(IXMLNodeCollection)
    ['{4F6C593D-2675-4772-8D9C-A06E88129ED1}']
    { Methods & Properties }
    function Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
    function Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;

    function Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
    property Items[Index: Integer]: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos read Get_Item; default;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia = interface(IXMLNode)
    ['{ADD36211-B264-4870-9B59-F4B54E22283B}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Recurso: WideString;
    function Get_NomeExecutante: WideString;
    function Get_CarteiraBeneficiario: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_DadosPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341;
    function Get_ObservacaoGuia: WideString;
    function Get_ValorTotalInformadoGuia: WideString;
    function Get_ValorTotalProcessadoGuia: WideString;
    function Get_ValorTotalGlosaGuia: WideString;
    function Get_ValorTotalFranquiaGuia: WideString;
    function Get_ValorTotalLiberadoGuia: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Recurso(Value: WideString);
    procedure Set_NomeExecutante(Value: WideString);
    procedure Set_CarteiraBeneficiario(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_ObservacaoGuia(Value: WideString);
    procedure Set_ValorTotalInformadoGuia(Value: WideString);
    procedure Set_ValorTotalProcessadoGuia(Value: WideString);
    procedure Set_ValorTotalGlosaGuia(Value: WideString);
    procedure Set_ValorTotalFranquiaGuia(Value: WideString);
    procedure Set_ValorTotalLiberadoGuia(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Recurso: WideString read Get_Recurso write Set_Recurso;
    property NomeExecutante: WideString read Get_NomeExecutante write Set_NomeExecutante;
    property CarteiraBeneficiario: WideString read Get_CarteiraBeneficiario write Set_CarteiraBeneficiario;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property DadosPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341 read Get_DadosPagamento;
    property ObservacaoGuia: WideString read Get_ObservacaoGuia write Set_ObservacaoGuia;
    property ValorTotalInformadoGuia: WideString read Get_ValorTotalInformadoGuia write Set_ValorTotalInformadoGuia;
    property ValorTotalProcessadoGuia: WideString read Get_ValorTotalProcessadoGuia write Set_ValorTotalProcessadoGuia;
    property ValorTotalGlosaGuia: WideString read Get_ValorTotalGlosaGuia write Set_ValorTotalGlosaGuia;
    property ValorTotalFranquiaGuia: WideString read Get_ValorTotalFranquiaGuia write Set_ValorTotalFranquiaGuia;
    property ValorTotalLiberadoGuia: WideString read Get_ValorTotalLiberadoGuia write Set_ValorTotalLiberadoGuia;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341 }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341 = interface(IXMLNodeCollection)
    ['{5B203F2A-D540-4868-A19E-8A899C5A8D33}']
    { Methods & Properties }
    function Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
    function Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;

    function Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
    property Items[Index: Integer]: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia read Get_Item; default;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento = interface(IXMLNode)
    ['{7AB36BFB-BF1C-4B6B-999E-496DA146FCF5}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_DataRealizacao: WideString;
    function Get_QtdProc: Integer;
    function Get_ValorInformado: WideString;
    function Get_ValorProcessado: WideString;
    function Get_ValorGlosaEstorno: WideString;
    function Get_ValorFranquia: WideString;
    function Get_ValorLiberado: WideString;
    function Get_CodigosGlosa: I341_XMLDm_tipoGlosaList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_ValorInformado(Value: WideString);
    procedure Set_ValorProcessado(Value: WideString);
    procedure Set_ValorGlosaEstorno(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_ValorLiberado(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property DenteRegiao: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao read Get_DenteRegiao;
    property DenteFace: WideString read Get_DenteFace write Set_DenteFace;
    property DataRealizacao: WideString read Get_DataRealizacao write Set_DataRealizacao;
    property QtdProc: Integer read Get_QtdProc write Set_QtdProc;
    property ValorInformado: WideString read Get_ValorInformado write Set_ValorInformado;
    property ValorProcessado: WideString read Get_ValorProcessado write Set_ValorProcessado;
    property ValorGlosaEstorno: WideString read Get_ValorGlosaEstorno write Set_ValorGlosaEstorno;
    property ValorFranquia: WideString read Get_ValorFranquia write Set_ValorFranquia;
    property ValorLiberado: WideString read Get_ValorLiberado write Set_ValorLiberado;
    property CodigosGlosa: I341_XMLDm_tipoGlosaList341 read Get_CodigosGlosa;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341 }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341 = interface(IXMLNodeCollection)
    ['{7FB30EC3-2F4F-4C3D-A552-CC2CB14995FA}']
    { Methods & Properties }
    function Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
    function Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;

    function Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
    property Items[Index: Integer]: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento read Get_Item; default;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao = interface(IXMLNode)
    ['{A404EC90-0C47-4DD2-BAE3-D3EA08B6C798}']
    { Property Accessors }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
    { Methods & Properties }
    property CodDente: WideString read Get_CodDente write Set_CodDente;
    property CodRegiao: WideString read Get_CodRegiao write Set_CodRegiao;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo = interface(IXMLNode)
    ['{2C1F7696-414C-4BDB-A8D1-D616ACB41751}']
    { Property Accessors }
    function Get_ValorTotalInformadoPorProtocolo: WideString;
    function Get_ValorTotalProcessadoPorProtocolo: WideString;
    function Get_ValorTotalGlosaPorProtocolo: WideString;
    function Get_ValorTotalFranquiaPorProtocolo: WideString;
    function Get_ValorTotalLiberadoPorProtocolo: WideString;
    procedure Set_ValorTotalInformadoPorProtocolo(Value: WideString);
    procedure Set_ValorTotalProcessadoPorProtocolo(Value: WideString);
    procedure Set_ValorTotalGlosaPorProtocolo(Value: WideString);
    procedure Set_ValorTotalFranquiaPorProtocolo(Value: WideString);
    procedure Set_ValorTotalLiberadoPorProtocolo(Value: WideString);
    { Methods & Properties }
    property ValorTotalInformadoPorProtocolo: WideString read Get_ValorTotalInformadoPorProtocolo write Set_ValorTotalInformadoPorProtocolo;
    property ValorTotalProcessadoPorProtocolo: WideString read Get_ValorTotalProcessadoPorProtocolo write Set_ValorTotalProcessadoPorProtocolo;
    property ValorTotalGlosaPorProtocolo: WideString read Get_ValorTotalGlosaPorProtocolo write Set_ValorTotalGlosaPorProtocolo;
    property ValorTotalFranquiaPorProtocolo: WideString read Get_ValorTotalFranquiaPorProtocolo write Set_ValorTotalFranquiaPorProtocolo;
    property ValorTotalLiberadoPorProtocolo: WideString read Get_ValorTotalLiberadoPorProtocolo write Set_ValorTotalLiberadoPorProtocolo;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData = interface(IXMLNode)
    ['{AE9ACC12-E597-4095-839F-6A1A799E3345}']
    { Property Accessors }
    function Get_ValorBrutonformadoPorData: WideString;
    function Get_ValorBrutoProcessadoPorData: WideString;
    function Get_ValorBrutoGlosaPorData: WideString;
    function Get_ValorBrutoFranquiaPorData: WideString;
    function Get_ValorBrutoLiberadoPorData: WideString;
    procedure Set_ValorBrutonformadoPorData(Value: WideString);
    procedure Set_ValorBrutoProcessadoPorData(Value: WideString);
    procedure Set_ValorBrutoGlosaPorData(Value: WideString);
    procedure Set_ValorBrutoFranquiaPorData(Value: WideString);
    procedure Set_ValorBrutoLiberadoPorData(Value: WideString);
    { Methods & Properties }
    property ValorBrutonformadoPorData: WideString read Get_ValorBrutonformadoPorData write Set_ValorBrutonformadoPorData;
    property ValorBrutoProcessadoPorData: WideString read Get_ValorBrutoProcessadoPorData write Set_ValorBrutoProcessadoPorData;
    property ValorBrutoGlosaPorData: WideString read Get_ValorBrutoGlosaPorData write Set_ValorBrutoGlosaPorData;
    property ValorBrutoFranquiaPorData: WideString read Get_ValorBrutoFranquiaPorData write Set_ValorBrutoFranquiaPorData;
    property ValorBrutoLiberadoPorData: WideString read Get_ValorBrutoLiberadoPorData write Set_ValorBrutoLiberadoPorData;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento = interface(IXMLNodeCollection)
    ['{18133052-F6DE-4877-A396-04F96F53146B}']
    { Property Accessors }
    function Get_Descontos(Index: Integer): I341_XMLCt_descontos;
    { Methods & Properties }
    function Add: I341_XMLCt_descontos;
    function Insert(const Index: Integer): I341_XMLCt_descontos;
    property Descontos[Index: Integer]: I341_XMLCt_descontos read Get_Descontos; default;
  end;

{ I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData }

  I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData = interface(IXMLNode)
    ['{6DA7695A-06E7-4C22-BFE0-E074AC121EAD}']
    { Property Accessors }
    function Get_ValorTotalDebitosPorData: WideString;
    function Get_ValorTotalCreditosPorData: WideString;
    function Get_ValorFinalAReceberPorData: WideString;
    procedure Set_ValorTotalDebitosPorData(Value: WideString);
    procedure Set_ValorTotalCreditosPorData(Value: WideString);
    procedure Set_ValorFinalAReceberPorData(Value: WideString);
    { Methods & Properties }
    property ValorTotalDebitosPorData: WideString read Get_ValorTotalDebitosPorData write Set_ValorTotalDebitosPorData;
    property ValorTotalCreditosPorData: WideString read Get_ValorTotalCreditosPorData write Set_ValorTotalCreditosPorData;
    property ValorFinalAReceberPorData: WideString read Get_ValorFinalAReceberPorData write Set_ValorFinalAReceberPorData;
  end;

{ I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo }

  I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo = interface(IXMLNode)
    ['{E3EA70B4-C419-4DB8-BE34-59E5BA203644}']
    { Property Accessors }
    function Get_ValorInformadoPorDemonstrativoData: WideString;
    function Get_ValorlProcessadoPorDemonstrativo: WideString;
    function Get_ValorlGlosaPorDemonstrativo: WideString;
    function Get_ValoFranquiaPorDemonstrativo: WideString;
    function Get_ValorLiberadoPorDemonstrativo: WideString;
    procedure Set_ValorInformadoPorDemonstrativoData(Value: WideString);
    procedure Set_ValorlProcessadoPorDemonstrativo(Value: WideString);
    procedure Set_ValorlGlosaPorDemonstrativo(Value: WideString);
    procedure Set_ValoFranquiaPorDemonstrativo(Value: WideString);
    procedure Set_ValorLiberadoPorDemonstrativo(Value: WideString);
    { Methods & Properties }
    property ValorInformadoPorDemonstrativoData: WideString read Get_ValorInformadoPorDemonstrativoData write Set_ValorInformadoPorDemonstrativoData;
    property ValorlProcessadoPorDemonstrativo: WideString read Get_ValorlProcessadoPorDemonstrativo write Set_ValorlProcessadoPorDemonstrativo;
    property ValorlGlosaPorDemonstrativo: WideString read Get_ValorlGlosaPorDemonstrativo write Set_ValorlGlosaPorDemonstrativo;
    property ValoFranquiaPorDemonstrativo: WideString read Get_ValoFranquiaPorDemonstrativo write Set_ValoFranquiaPorDemonstrativo;
    property ValorLiberadoPorDemonstrativo: WideString read Get_ValorLiberadoPorDemonstrativo write Set_ValorLiberadoPorDemonstrativo;
  end;

{ I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo }

  I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo = interface(IXMLNodeCollection)
    ['{8C025F65-0966-4B65-8B61-CBBF8D7382A9}']
    { Property Accessors }
    function Get_Descontos(Index: Integer): I341_XMLCt_descontos;
    { Methods & Properties }
    function Add: I341_XMLCt_descontos;
    function Insert(const Index: Integer): I341_XMLCt_descontos;
    property Descontos[Index: Integer]: I341_XMLCt_descontos read Get_Descontos; default;
  end;

{ I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno }

  I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno = interface(IXMLNode)
    ['{7968F474-673C-4CFE-8C6A-4B4F362C6E3C}']
    { Property Accessors }
    function Get_IdentificacaoOperadora: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroProtocolo: WideString;
    function Get_ProtocoloSolicitacaoDemonstrativo: WideString;
    function Get_TipoDemonstrativo: WideString;
    function Get_DataSituacaoDemonstrativo: WideString;
    function Get_SituacaoDemonstrativo: WideString;
    procedure Set_IdentificacaoOperadora(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_ProtocoloSolicitacaoDemonstrativo(Value: WideString);
    procedure Set_TipoDemonstrativo(Value: WideString);
    procedure Set_DataSituacaoDemonstrativo(Value: WideString);
    procedure Set_SituacaoDemonstrativo(Value: WideString);
    { Methods & Properties }
    property IdentificacaoOperadora: WideString read Get_IdentificacaoOperadora write Set_IdentificacaoOperadora;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property ProtocoloSolicitacaoDemonstrativo: WideString read Get_ProtocoloSolicitacaoDemonstrativo write Set_ProtocoloSolicitacaoDemonstrativo;
    property TipoDemonstrativo: WideString read Get_TipoDemonstrativo write Set_TipoDemonstrativo;
    property DataSituacaoDemonstrativo: WideString read Get_DataSituacaoDemonstrativo write Set_DataSituacaoDemonstrativo;
    property SituacaoDemonstrativo: WideString read Get_SituacaoDemonstrativo write Set_SituacaoDemonstrativo;
  end;

{ I341_XMLCt_situacaoProtocolo }

  I341_XMLCt_situacaoProtocolo = interface(IXMLNode)
    ['{6F67D026-8011-4FD6-8D76-AFC8060D1EEF}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_SituacaoDoProtocolo: I341_XMLCt_protocoloStatus;
    function Get_SituacaoProtocoloAnexo: I341_XMLCt_protocoloAnexoStatus;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property SituacaoDoProtocolo: I341_XMLCt_protocoloStatus read Get_SituacaoDoProtocolo;
    property SituacaoProtocoloAnexo: I341_XMLCt_protocoloAnexoStatus read Get_SituacaoProtocoloAnexo;
  end;

{ I341_XMLCt_protocoloStatus }

  I341_XMLCt_protocoloStatus = interface(IXMLNode)
    ['{5B71AF58-600D-437F-A859-D2532D7C4062}']
    { Property Accessors }
    function Get_IdentificacaoOperadora: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_Lote: I341_XMLCt_protocoloStatus_lote;
    procedure Set_IdentificacaoOperadora(Value: WideString);
    { Methods & Properties }
    property IdentificacaoOperadora: WideString read Get_IdentificacaoOperadora write Set_IdentificacaoOperadora;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property Lote: I341_XMLCt_protocoloStatus_lote read Get_Lote;
  end;

{ I341_XMLCt_protocoloStatus_lote }

  I341_XMLCt_protocoloStatus_lote = interface(IXMLNode)
    ['{C78B168A-D1FC-47AD-B3D6-12FA40C232CC}']
    { Property Accessors }
    function Get_DetalheLote: I341_XMLCt_loteStatus;
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    property DetalheLote: I341_XMLCt_loteStatus read Get_DetalheLote;
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
  end;

{ I341_XMLCt_loteStatus }

  I341_XMLCt_loteStatus = interface(IXMLNode)
    ['{A34B7A14-08F5-47D0-8615-DF513C9355F4}']
    { Property Accessors }
    function Get_StatusProtocolo: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_ValorTotalLote: I341_XMLCt_valorTotal;
    function Get_GuiasTISS: I341_XMLCt_loteStatus_guiasTISS;
    procedure Set_StatusProtocolo(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
    { Methods & Properties }
    property StatusProtocolo: WideString read Get_StatusProtocolo write Set_StatusProtocolo;
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property DataEnvioLote: WideString read Get_DataEnvioLote write Set_DataEnvioLote;
    property ValorTotalLote: I341_XMLCt_valorTotal read Get_ValorTotalLote;
    property GuiasTISS: I341_XMLCt_loteStatus_guiasTISS read Get_GuiasTISS;
  end;

{ I341_XMLCt_loteStatus_guiasTISS }

  I341_XMLCt_loteStatus_guiasTISS = interface(IXMLNode)
    ['{FDC9EE88-6648-4728-89AE-725F91951E0D}']
    { Property Accessors }
    function Get_GuiasMedicas: I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341;
    function Get_GuiasOdonto: I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341;
    { Methods & Properties }
    property GuiasMedicas: I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341 read Get_GuiasMedicas;
    property GuiasOdonto: I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341 read Get_GuiasOdonto;
  end;

{ I341_XMLCt_loteStatus_guiasTISS_guiasMedicas }

  I341_XMLCt_loteStatus_guiasTISS_guiasMedicas = interface(IXMLNode)
    ['{1236F705-F7D1-485C-AC8B-1656A2F3E7A4}']
    { Property Accessors }
    function Get_Guias: I341_XMLCt_guiaDados;
    { Methods & Properties }
    property Guias: I341_XMLCt_guiaDados read Get_Guias;
  end;

{ I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341 }

  I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341 = interface(IXMLNodeCollection)
    ['{358683FF-E405-4A6E-92F9-CE17B7DEE923}']
    { Methods & Properties }
    function Add: I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
    function Insert(const Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;

    function Get_Item(Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
    property Items[Index: Integer]: I341_XMLCt_loteStatus_guiasTISS_guiasMedicas read Get_Item; default;
  end;

{ I341_XMLCt_loteStatus_guiasTISS_guiasOdonto }

  I341_XMLCt_loteStatus_guiasTISS_guiasOdonto = interface(IXMLNode)
    ['{A018E5D3-6E79-405C-B162-44C2F48E9432}']
    { Property Accessors }
    function Get_Guias: I341_XMLCt_guiaDadosOdonto;
    { Methods & Properties }
    property Guias: I341_XMLCt_guiaDadosOdonto read Get_Guias;
  end;

{ I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341 }

  I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341 = interface(IXMLNodeCollection)
    ['{775003FE-9FB8-4C13-AB5D-540A186A115F}']
    { Methods & Properties }
    function Add: I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
    function Insert(const Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;

    function Get_Item(Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
    property Items[Index: Integer]: I341_XMLCt_loteStatus_guiasTISS_guiasOdonto read Get_Item; default;
  end;

{ I341_XMLCt_protocoloAnexoStatus }

  I341_XMLCt_protocoloAnexoStatus = interface(IXMLNode)
    ['{D7427270-1BD7-4AC8-9993-F272AC6B0E61}']
    { Property Accessors }
    function Get_IdentificacaoOperadora: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_LoteAnexo: I341_XMLCt_protocoloAnexoStatus_loteAnexo;
    procedure Set_IdentificacaoOperadora(Value: WideString);
    { Methods & Properties }
    property IdentificacaoOperadora: WideString read Get_IdentificacaoOperadora write Set_IdentificacaoOperadora;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property LoteAnexo: I341_XMLCt_protocoloAnexoStatus_loteAnexo read Get_LoteAnexo;
  end;

{ I341_XMLCt_protocoloAnexoStatus_loteAnexo }

  I341_XMLCt_protocoloAnexoStatus_loteAnexo = interface(IXMLNode)
    ['{36BEE5F2-50B0-41DC-BE05-DD9875466467}']
    { Property Accessors }
    function Get_DetalheLoteAnexo: I341_XMLCt_loteAnexoStatus;
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    property DetalheLoteAnexo: I341_XMLCt_loteAnexoStatus read Get_DetalheLoteAnexo;
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
  end;

{ I341_XMLCt_loteAnexoStatus }

  I341_XMLCt_loteAnexoStatus = interface(IXMLNode)
    ['{13FAAB26-72EB-4A5D-B9A1-4048E9C2FD55}']
    { Property Accessors }
    function Get_StatusProtocolo: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_AnexosClinicos: I341_XMLCt_loteAnexoStatus_anexosClinicos;
    procedure Set_StatusProtocolo(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
    { Methods & Properties }
    property StatusProtocolo: WideString read Get_StatusProtocolo write Set_StatusProtocolo;
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property DataEnvioLote: WideString read Get_DataEnvioLote write Set_DataEnvioLote;
    property AnexosClinicos: I341_XMLCt_loteAnexoStatus_anexosClinicos read Get_AnexosClinicos;
  end;

{ I341_XMLCt_loteAnexoStatus_anexosClinicos }

  I341_XMLCt_loteAnexoStatus_anexosClinicos = interface(IXMLNode)
    ['{CE3CAD30-17CF-4430-9376-0FF33019069A}']
    { Property Accessors }
    function Get_AnexoOPME: I341_XMLCtm_autorizacaoOPME;
    function Get_AnexoQuimio: I341_XMLCtm_autorizacaoQuimio;
    function Get_AnexoRadio: I341_XMLCtm_autorizacaoRadio;
    { Methods & Properties }
    property AnexoOPME: I341_XMLCtm_autorizacaoOPME read Get_AnexoOPME;
    property AnexoQuimio: I341_XMLCtm_autorizacaoQuimio read Get_AnexoQuimio;
    property AnexoRadio: I341_XMLCtm_autorizacaoRadio read Get_AnexoRadio;
  end;

{ I341_XMLCt_situacaoAutorizacao }

  I341_XMLCt_situacaoAutorizacao = interface(IXMLNode)
    ['{E86CA4C2-7BD0-40BD-BF1D-B68B9C9477C0}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_AutorizacaoInternacao: I341_XMLCtm_autorizacaoInternacao;
    function Get_AutorizacaoServico: I341_XMLCtm_autorizacaoServico;
    function Get_AutorizacaoProrrogacao: I341_XMLCtm_autorizacaoProrrogacao;
    function Get_AutorizacaoServicoOdonto: I341_XMLCto_autorizacaoServico;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property AutorizacaoInternacao: I341_XMLCtm_autorizacaoInternacao read Get_AutorizacaoInternacao;
    property AutorizacaoServico: I341_XMLCtm_autorizacaoServico read Get_AutorizacaoServico;
    property AutorizacaoProrrogacao: I341_XMLCtm_autorizacaoProrrogacao read Get_AutorizacaoProrrogacao;
    property AutorizacaoServicoOdonto: I341_XMLCto_autorizacaoServico read Get_AutorizacaoServicoOdonto;
  end;

{ I341_XMLCtm_autorizacaoInternacao }

  I341_XMLCtm_autorizacaoInternacao = interface(IXMLNode)
    ['{C38B88C1-3C97-4AB2-85EB-69CBA5B06F3C}']
    { Property Accessors }
    function Get_AutorizacaoDosServicos: I341_XMLCtm_autorizacaoServico;
    function Get_DataProvavelAdmissao: WideString;
    function Get_QtdDiariasAutorizadas: Integer;
    function Get_TipoAcomodacaoAutorizada: WideString;
    procedure Set_DataProvavelAdmissao(Value: WideString);
    procedure Set_QtdDiariasAutorizadas(Value: Integer);
    procedure Set_TipoAcomodacaoAutorizada(Value: WideString);
    { Methods & Properties }
    property AutorizacaoDosServicos: I341_XMLCtm_autorizacaoServico read Get_AutorizacaoDosServicos;
    property DataProvavelAdmissao: WideString read Get_DataProvavelAdmissao write Set_DataProvavelAdmissao;
    property QtdDiariasAutorizadas: Integer read Get_QtdDiariasAutorizadas write Set_QtdDiariasAutorizadas;
    property TipoAcomodacaoAutorizada: WideString read Get_TipoAcomodacaoAutorizada write Set_TipoAcomodacaoAutorizada;
  end;

{ I341_XMLCtm_autorizacaoServico }

  I341_XMLCtm_autorizacaoServico = interface(IXMLNode)
    ['{83E9EADD-4B76-467A-8917-3703583D0C35}']
    { Property Accessors }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_TipoEtapaAutorizacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_PrestadorAutorizado: I341_XMLCtm_autorizacaoServico_prestadorAutorizado;
    function Get_StatusSolicitacao: WideString;
    function Get_MotivosNegativa: I341_XMLCtm_autorizacaoServico_motivosNegativa;
    function Get_ServicosAutorizados: I341_XMLCtm_autorizacaoServico_servicosAutorizados;
    function Get_Observacao: WideString;
    function Get_AutorizacaoQuimio: I341_XMLCtm_autorizacaoQuimio;
    function Get_AutorizacaoRadio: I341_XMLCtm_autorizacaoRadio;
    procedure Set_TipoEtapaAutorizacao(Value: WideString);
    procedure Set_StatusSolicitacao(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property DadosAutorizacao: I341_XMLCt_autorizacaoDados read Get_DadosAutorizacao;
    property TipoEtapaAutorizacao: WideString read Get_TipoEtapaAutorizacao write Set_TipoEtapaAutorizacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property PrestadorAutorizado: I341_XMLCtm_autorizacaoServico_prestadorAutorizado read Get_PrestadorAutorizado;
    property StatusSolicitacao: WideString read Get_StatusSolicitacao write Set_StatusSolicitacao;
    property MotivosNegativa: I341_XMLCtm_autorizacaoServico_motivosNegativa read Get_MotivosNegativa;
    property ServicosAutorizados: I341_XMLCtm_autorizacaoServico_servicosAutorizados read Get_ServicosAutorizados;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property AutorizacaoQuimio: I341_XMLCtm_autorizacaoQuimio read Get_AutorizacaoQuimio;
    property AutorizacaoRadio: I341_XMLCtm_autorizacaoRadio read Get_AutorizacaoRadio;
  end;

{ I341_XMLCtm_autorizacaoServico_prestadorAutorizado }

  I341_XMLCtm_autorizacaoServico_prestadorAutorizado = interface(IXMLNode)
    ['{51ABA33F-A3A1-4486-ACD1-F90BD99540A7}']
    { Property Accessors }
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
    function Get_CnesContratado: WideString;
    procedure Set_CnesContratado(Value: WideString);
    { Methods & Properties }
    property DadosContratado: I341_XMLCt_contratadoDados read Get_DadosContratado;
    property CnesContratado: WideString read Get_CnesContratado write Set_CnesContratado;
  end;

{ I341_XMLCtm_autorizacaoServico_motivosNegativa }

  I341_XMLCtm_autorizacaoServico_motivosNegativa = interface(IXMLNodeCollection)
    ['{9DA8300F-0817-4E46-B481-7738A30ECDEF}']
    { Property Accessors }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoNegativa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoNegativa; default;
  end;

{ I341_XMLCtm_autorizacaoServico_servicosAutorizados }

  I341_XMLCtm_autorizacaoServico_servicosAutorizados = interface(IXMLNodeCollection)
    ['{5B8D3EB8-FF95-4E22-B0CB-AB1C95F50A1A}']
    { Property Accessors }
    function Get_ServicoAutorizado(Index: Integer): I341_XMLCt_procedimentoAutorizado;
    { Methods & Properties }
    function Add: I341_XMLCt_procedimentoAutorizado;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoAutorizado;
    property ServicoAutorizado[Index: Integer]: I341_XMLCt_procedimentoAutorizado read Get_ServicoAutorizado; default;
  end;

{ I341_XMLCtm_autorizacaoProrrogacao }

  I341_XMLCtm_autorizacaoProrrogacao = interface(IXMLNode)
    ['{6A918000-6903-45D8-B95C-A79E8DE480F3}']
    { Property Accessors }
    function Get_AutorizacaoDosServicos: I341_XMLCtm_autorizacaoServico;
    function Get_DiariasAutorizadas: Integer;
    function Get_AcomodacaoAutorizada: WideString;
    function Get_JustificativaOperadora: WideString;
    procedure Set_DiariasAutorizadas(Value: Integer);
    procedure Set_AcomodacaoAutorizada(Value: WideString);
    procedure Set_JustificativaOperadora(Value: WideString);
    { Methods & Properties }
    property AutorizacaoDosServicos: I341_XMLCtm_autorizacaoServico read Get_AutorizacaoDosServicos;
    property DiariasAutorizadas: Integer read Get_DiariasAutorizadas write Set_DiariasAutorizadas;
    property AcomodacaoAutorizada: WideString read Get_AcomodacaoAutorizada write Set_AcomodacaoAutorizada;
    property JustificativaOperadora: WideString read Get_JustificativaOperadora write Set_JustificativaOperadora;
  end;

{ I341_XMLCto_autorizacaoServico }

  I341_XMLCto_autorizacaoServico = interface(IXMLNode)
    ['{AD61AC94-2D0B-4239-9B16-B28C08B3A04F}']
    { Property Accessors }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_StatusSolicitacao: WideString;
    function Get_PrestadorAutorizado: I341_XMLCt_contratadoDados;
    function Get_ProcedimentosAutorizados: I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341;
    function Get_MotivosNegativa: I341_XMLCto_autorizacaoServico_motivosNegativa;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    procedure Set_StatusSolicitacao(Value: WideString);
    { Methods & Properties }
    property DadosAutorizacao: I341_XMLCt_autorizacaoDados read Get_DadosAutorizacao;
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property NumeroCNS: WideString read Get_NumeroCNS write Set_NumeroCNS;
    property TipoIdent: WideString read Get_TipoIdent write Set_TipoIdent;
    property IdentificadorBeneficiario: WideString read Get_IdentificadorBeneficiario write Set_IdentificadorBeneficiario;
    property TemplateBiometrico: WideString read Get_TemplateBiometrico write Set_TemplateBiometrico;
    property StatusSolicitacao: WideString read Get_StatusSolicitacao write Set_StatusSolicitacao;
    property PrestadorAutorizado: I341_XMLCt_contratadoDados read Get_PrestadorAutorizado;
    property ProcedimentosAutorizados: I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341 read Get_ProcedimentosAutorizados;
    property MotivosNegativa: I341_XMLCto_autorizacaoServico_motivosNegativa read Get_MotivosNegativa;
  end;

{ I341_XMLCto_autorizacaoServico_procedimentosAutorizados }

  I341_XMLCto_autorizacaoServico_procedimentosAutorizados = interface(IXMLNode)
    ['{DF1DD24B-CD2A-4E76-A123-9C627309009C}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_ProcSolic: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_QtdProc: Integer;
    function Get_QtdUS: WideString;
    function Get_ValorProc: WideString;
    function Get_ValorFranquia: WideString;
    function Get_Aut: WideString;
    function Get_MotivosNegativa: I341_XMLCt_motivoGlosaList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_QtdUS(Value: WideString);
    procedure Set_ValorProc(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_Aut(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property ProcSolic: I341_XMLCt_procedimentoDados read Get_ProcSolic;
    property DenteRegiao: I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao read Get_DenteRegiao;
    property DenteFace: WideString read Get_DenteFace write Set_DenteFace;
    property QtdProc: Integer read Get_QtdProc write Set_QtdProc;
    property QtdUS: WideString read Get_QtdUS write Set_QtdUS;
    property ValorProc: WideString read Get_ValorProc write Set_ValorProc;
    property ValorFranquia: WideString read Get_ValorFranquia write Set_ValorFranquia;
    property Aut: WideString read Get_Aut write Set_Aut;
    property MotivosNegativa: I341_XMLCt_motivoGlosaList341 read Get_MotivosNegativa;
  end;

{ I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341 }

  I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341 = interface(IXMLNodeCollection)
    ['{972B38F0-AE3F-4392-81A4-D217A122CC8B}']
    { Methods & Properties }
    function Add: I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
    function Insert(const Index: Integer): I341_XMLCto_autorizacaoServico_procedimentosAutorizados;

    function Get_Item(Index: Integer): I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
    property Items[Index: Integer]: I341_XMLCto_autorizacaoServico_procedimentosAutorizados read Get_Item; default;
  end;

{ I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao }

  I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao = interface(IXMLNode)
    ['{108A036F-DDE9-4B40-8439-7E18497B1C5A}']
    { Property Accessors }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
    { Methods & Properties }
    property CodDente: WideString read Get_CodDente write Set_CodDente;
    property CodRegiao: WideString read Get_CodRegiao write Set_CodRegiao;
  end;

{ I341_XMLCto_autorizacaoServico_motivosNegativa }

  I341_XMLCto_autorizacaoServico_motivosNegativa = interface(IXMLNodeCollection)
    ['{41F7D813-EC9A-4B20-96D8-F8B2352972A9}']
    { Property Accessors }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoNegativa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoNegativa; default;
  end;

{ I341_XMLOperadoraPrestador_respostaElegibilidade }

  I341_XMLOperadoraPrestador_respostaElegibilidade = interface(IXMLNode)
    ['{6C3865FA-C1FC-4C2A-A0E6-0B178C8EA0EC}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ReciboElegibilidade: I341_XMLCt_elegibilidadeRecibo;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property ReciboElegibilidade: I341_XMLCt_elegibilidadeRecibo read Get_ReciboElegibilidade;
  end;

{ I341_XMLCt_elegibilidadeRecibo }

  I341_XMLCt_elegibilidadeRecibo = interface(IXMLNode)
    ['{2EB45CF2-7D9F-48D0-8A37-689D8636529F}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_ValidadeCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_RespostaSolicitacao: WideString;
    function Get_MotivosNegativa: I341_XMLCt_elegibilidadeRecibo_motivosNegativa;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_ValidadeCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    procedure Set_RespostaSolicitacao(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
    property ValidadeCarteira: WideString read Get_ValidadeCarteira write Set_ValidadeCarteira;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property NumeroCNS: WideString read Get_NumeroCNS write Set_NumeroCNS;
    property TipoIdent: WideString read Get_TipoIdent write Set_TipoIdent;
    property IdentificadorBeneficiario: WideString read Get_IdentificadorBeneficiario write Set_IdentificadorBeneficiario;
    property TemplateBiometrico: WideString read Get_TemplateBiometrico write Set_TemplateBiometrico;
    property RespostaSolicitacao: WideString read Get_RespostaSolicitacao write Set_RespostaSolicitacao;
    property MotivosNegativa: I341_XMLCt_elegibilidadeRecibo_motivosNegativa read Get_MotivosNegativa;
  end;

{ I341_XMLCt_elegibilidadeRecibo_motivosNegativa }

  I341_XMLCt_elegibilidadeRecibo_motivosNegativa = interface(IXMLNodeCollection)
    ['{4C277322-2D74-4019-9D0E-F10BF784A10C}']
    { Property Accessors }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
    property MotivoNegativa[Index: Integer]: I341_XMLCt_motivoGlosa read Get_MotivoNegativa; default;
  end;

{ I341_XMLCt_reciboCancelaGuia }

  I341_XMLCt_reciboCancelaGuia = interface(IXMLNode)
    ['{7BB03254-E8A5-4454-9C82-BE62303A02BE}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ReciboCancelaGuia: I341_XMLCt_guiaCancelamentoRecibo;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property ReciboCancelaGuia: I341_XMLCt_guiaCancelamentoRecibo read Get_ReciboCancelaGuia;
  end;

{ I341_XMLCt_guiaCancelamentoRecibo }

  I341_XMLCt_guiaCancelamentoRecibo = interface(IXMLNode)
    ['{B88BFDC9-0BFC-4DAB-9E8F-0A91ADDDC12B}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_GuiasCanceladas: I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas;
    procedure Set_RegistroANS(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property GuiasCanceladas: I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas read Get_GuiasCanceladas;
  end;

{ I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas }

  I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas = interface(IXMLNodeCollection)
    ['{7FBF8666-A270-4750-81AD-D2AB1AC641A8}']
    { Property Accessors }
    function Get_DadosGuia(Index: Integer): I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
    { Methods & Properties }
    function Add: I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
    function Insert(const Index: Integer): I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
    property DadosGuia[Index: Integer]: I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia read Get_DadosGuia; default;
  end;

{ I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia }

  I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia = interface(IXMLNode)
    ['{D5121785-1EC1-445C-8A8C-EBB437581AC0}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_TipoGuia: WideString;
    function Get_StatusCancelamento: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_TipoGuia(Value: WideString);
    procedure Set_StatusCancelamento(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property TipoGuia: WideString read Get_TipoGuia write Set_TipoGuia;
    property StatusCancelamento: WideString read Get_StatusCancelamento write Set_StatusCancelamento;
  end;

{ I341_XMLCt_reciboComunicacao }

  I341_XMLCt_reciboComunicacao = interface(IXMLNode)
    ['{A2798F7B-0074-4FDB-8288-A28C2FE93D17}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ReciboComunicacao: I341_XMLCtm_beneficiarioComunicacaoRecibo;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property ReciboComunicacao: I341_XMLCtm_beneficiarioComunicacaoRecibo read Get_ReciboComunicacao;
  end;

{ I341_XMLCtm_beneficiarioComunicacaoRecibo }

  I341_XMLCtm_beneficiarioComunicacaoRecibo = interface(IXMLNode)
    ['{6D6970E2-F253-45A0-AF4B-3064743FC795}']
    { Property Accessors }
    function Get_StatusComunicacao: WideString;
    function Get_BeneficiarioComunicacao: I341_XMLCtm_beneficiarioComunicacao;
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    procedure Set_StatusComunicacao(Value: WideString);
    { Methods & Properties }
    property StatusComunicacao: WideString read Get_StatusComunicacao write Set_StatusComunicacao;
    property BeneficiarioComunicacao: I341_XMLCtm_beneficiarioComunicacao read Get_BeneficiarioComunicacao;
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
  end;

{ I341_XMLCtm_beneficiarioComunicacao }

  I341_XMLCtm_beneficiarioComunicacao = interface(IXMLNode)
    ['{AD5CC1DC-A9F1-4C9B-BF4B-24667EA7C8F8}']
    { Property Accessors }
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DataEvento: WideString;
    function Get_TipoEvento: WideString;
    function Get_DadosInternacao: I341_XMLCtm_beneficiarioComunicacao_dadosInternacao;
    procedure Set_DataEvento(Value: WideString);
    procedure Set_TipoEvento(Value: WideString);
    { Methods & Properties }
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property DataEvento: WideString read Get_DataEvento write Set_DataEvento;
    property TipoEvento: WideString read Get_TipoEvento write Set_TipoEvento;
    property DadosInternacao: I341_XMLCtm_beneficiarioComunicacao_dadosInternacao read Get_DadosInternacao;
  end;

{ I341_XMLCtm_beneficiarioComunicacao_dadosInternacao }

  I341_XMLCtm_beneficiarioComunicacao_dadosInternacao = interface(IXMLNode)
    ['{DE635BCF-1A8F-48D7-8CC5-C0BA26AF136E}']
    { Property Accessors }
    function Get_MotivoEncerramento: WideString;
    function Get_TipoInternacao: WideString;
    procedure Set_MotivoEncerramento(Value: WideString);
    procedure Set_TipoInternacao(Value: WideString);
    { Methods & Properties }
    property MotivoEncerramento: WideString read Get_MotivoEncerramento write Set_MotivoEncerramento;
    property TipoInternacao: WideString read Get_TipoInternacao write Set_TipoInternacao;
  end;

{ I341_XMLCt_respostaGlosa }

  I341_XMLCt_respostaGlosa = interface(IXMLNode)
    ['{8A362E64-121D-402A-9FC7-B167CC522B2D}']
    { Property Accessors }
    function Get_ReciboGlosa: I341_XMLCt_glosaRecibo;
    function Get_ReciboGlosaOdonto: I341_XMLCt_glosaReciboOdonto;
    function Get_ReciboGlosaStatus: I341_XMLCt_respostaGlosa_reciboGlosaStatus;
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    { Methods & Properties }
    property ReciboGlosa: I341_XMLCt_glosaRecibo read Get_ReciboGlosa;
    property ReciboGlosaOdonto: I341_XMLCt_glosaReciboOdonto read Get_ReciboGlosaOdonto;
    property ReciboGlosaStatus: I341_XMLCt_respostaGlosa_reciboGlosaStatus read Get_ReciboGlosaStatus;
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
  end;

{ I341_XMLCt_glosaRecibo }

  I341_XMLCt_glosaRecibo = interface(IXMLNode)
    ['{F5AD8D8F-F5CB-4F40-89CA-A78301C330D3}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaRecGlosaPrestador: WideString;
    function Get_NumeroGuiaRecGlosaOperadora: WideString;
    function Get_NomeOperadora: WideString;
    function Get_ObjetoRecurso: WideString;
    function Get_DadosContratado: I341_XMLCt_glosaRecibo_dadosContratado;
    function Get_NumeroLote: Integer;
    function Get_NumeroProtocolo: Integer;
    function Get_OpcaoRecurso: I341_XMLCt_glosaRecibo_opcaoRecurso;
    function Get_DataRecurso: WideString;
    function Get_ValorTotalRecursado: WideString;
    function Get_ValorTotalAcatado: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_ObjetoRecurso(Value: WideString);
    procedure Set_NumeroLote(Value: Integer);
    procedure Set_NumeroProtocolo(Value: Integer);
    procedure Set_DataRecurso(Value: WideString);
    procedure Set_ValorTotalRecursado(Value: WideString);
    procedure Set_ValorTotalAcatado(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaRecGlosaPrestador: WideString read Get_NumeroGuiaRecGlosaPrestador write Set_NumeroGuiaRecGlosaPrestador;
    property NumeroGuiaRecGlosaOperadora: WideString read Get_NumeroGuiaRecGlosaOperadora write Set_NumeroGuiaRecGlosaOperadora;
    property NomeOperadora: WideString read Get_NomeOperadora write Set_NomeOperadora;
    property ObjetoRecurso: WideString read Get_ObjetoRecurso write Set_ObjetoRecurso;
    property DadosContratado: I341_XMLCt_glosaRecibo_dadosContratado read Get_DadosContratado;
    property NumeroLote: Integer read Get_NumeroLote write Set_NumeroLote;
    property NumeroProtocolo: Integer read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property OpcaoRecurso: I341_XMLCt_glosaRecibo_opcaoRecurso read Get_OpcaoRecurso;
    property DataRecurso: WideString read Get_DataRecurso write Set_DataRecurso;
    property ValorTotalRecursado: WideString read Get_ValorTotalRecursado write Set_ValorTotalRecursado;
    property ValorTotalAcatado: WideString read Get_ValorTotalAcatado write Set_ValorTotalAcatado;
  end;

{ I341_XMLCt_glosaRecibo_dadosContratado }

  I341_XMLCt_glosaRecibo_dadosContratado = interface(IXMLNode)
    ['{058E3551-2113-43A9-92FF-B948023DA01F}']
    { Property Accessors }
    function Get_CodigoPrestador: WideString;
    function Get_NomePrestador: WideString;
    procedure Set_CodigoPrestador(Value: WideString);
    procedure Set_NomePrestador(Value: WideString);
    { Methods & Properties }
    property CodigoPrestador: WideString read Get_CodigoPrestador write Set_CodigoPrestador;
    property NomePrestador: WideString read Get_NomePrestador write Set_NomePrestador;
  end;

{ I341_XMLCt_glosaRecibo_opcaoRecurso }

  I341_XMLCt_glosaRecibo_opcaoRecurso = interface(IXMLNode)
    ['{B8F7A6AC-D8F3-4F1C-A2DE-21ACC220FF44}']
    { Property Accessors }
    function Get_RecursoProtocolo: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo;
    function Get_RecursoGuia: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341;
    { Methods & Properties }
    property RecursoProtocolo: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo read Get_RecursoProtocolo;
    property RecursoGuia: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341 read Get_RecursoGuia;
  end;

{ I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo }

  I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo = interface(IXMLNode)
    ['{D32348FE-66B9-45A4-87D0-11C70FF20F1A}']
    { Property Accessors }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    function Get_RecursoAcatado: WideString;
    function Get_JustificativaOPSnaoAcatadoProt: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
    procedure Set_RecursoAcatado(Value: WideString);
    procedure Set_JustificativaOPSnaoAcatadoProt(Value: WideString);
    { Methods & Properties }
    property CodigoGlosaProtocolo: WideString read Get_CodigoGlosaProtocolo write Set_CodigoGlosaProtocolo;
    property JustificativaProtocolo: WideString read Get_JustificativaProtocolo write Set_JustificativaProtocolo;
    property RecursoAcatado: WideString read Get_RecursoAcatado write Set_RecursoAcatado;
    property JustificativaOPSnaoAcatadoProt: WideString read Get_JustificativaOPSnaoAcatadoProt write Set_JustificativaOPSnaoAcatadoProt;
  end;

{ I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia }

  I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia = interface(IXMLNode)
    ['{820C4873-EB60-4C5C-A940-0AA0688C1A2A}']
    { Property Accessors }
    function Get_RespostaGuia: I341_XMLCt_respostaGlosaGuiaMedica;
    function Get_RespostaGuiaItens: I341_XMLCt_respostaGlosaItemMedico;
    { Methods & Properties }
    property RespostaGuia: I341_XMLCt_respostaGlosaGuiaMedica read Get_RespostaGuia;
    property RespostaGuiaItens: I341_XMLCt_respostaGlosaItemMedico read Get_RespostaGuiaItens;
  end;

{ I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341 }

  I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341 = interface(IXMLNodeCollection)
    ['{9F50418D-4A1F-45B0-8414-FA1D91E1555C}']
    { Methods & Properties }
    function Add: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
    property Items[Index: Integer]: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia read Get_Item; default;
  end;

{ I341_XMLCt_respostaGlosaGuiaMedica }

  I341_XMLCt_respostaGlosaGuiaMedica = interface(IXMLNode)
    ['{36891245-8E2D-42E3-B4B7-C630AF7E42BD}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_CodGlosa: WideString;
    function Get_JustificativaPrestador: WideString;
    function Get_RecursoGuiaAcatado: WideString;
    function Get_JustificativaOPSnaoAcatadoGuia: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_CodGlosa(Value: WideString);
    procedure Set_JustificativaPrestador(Value: WideString);
    procedure Set_RecursoGuiaAcatado(Value: WideString);
    procedure Set_JustificativaOPSnaoAcatadoGuia(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Senha: WideString read Get_Senha write Set_Senha;
    property CodGlosa: WideString read Get_CodGlosa write Set_CodGlosa;
    property JustificativaPrestador: WideString read Get_JustificativaPrestador write Set_JustificativaPrestador;
    property RecursoGuiaAcatado: WideString read Get_RecursoGuiaAcatado write Set_RecursoGuiaAcatado;
    property JustificativaOPSnaoAcatadoGuia: WideString read Get_JustificativaOPSnaoAcatadoGuia write Set_JustificativaOPSnaoAcatadoGuia;
  end;

{ I341_XMLCt_respostaGlosaItemMedico }

  I341_XMLCt_respostaGlosaItemMedico = interface(IXMLNode)
    ['{B2F7FA48-D3B9-47A1-95C5-0BF1AD3160F6}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_DataRealizacao: WideString;
    function Get_DataFim: WideString;
    function Get_SequencialItem: Integer;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_CodGlosa: WideString;
    function Get_ValorRecursado: WideString;
    function Get_JustificativaPrestador: WideString;
    function Get_ValorAcatadado: WideString;
    function Get_JustificativaOperadora: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_DataFim(Value: WideString);
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_CodGlosa(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
    procedure Set_JustificativaPrestador(Value: WideString);
    procedure Set_ValorAcatadado(Value: WideString);
    procedure Set_JustificativaOperadora(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Senha: WideString read Get_Senha write Set_Senha;
    property DataRealizacao: WideString read Get_DataRealizacao write Set_DataRealizacao;
    property DataFim: WideString read Get_DataFim write Set_DataFim;
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property ProcRecurso: I341_XMLCt_procedimentoDados read Get_ProcRecurso;
    property CodGlosa: WideString read Get_CodGlosa write Set_CodGlosa;
    property ValorRecursado: WideString read Get_ValorRecursado write Set_ValorRecursado;
    property JustificativaPrestador: WideString read Get_JustificativaPrestador write Set_JustificativaPrestador;
    property ValorAcatadado: WideString read Get_ValorAcatadado write Set_ValorAcatadado;
    property JustificativaOperadora: WideString read Get_JustificativaOperadora write Set_JustificativaOperadora;
  end;

{ I341_XMLCt_glosaReciboOdonto }

  I341_XMLCt_glosaReciboOdonto = interface(IXMLNode)
    ['{B77F4166-32D0-413E-AB15-D658E53DF268}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaRecGlosaPrestador: WideString;
    function Get_NomeOperadora: WideString;
    function Get_NumeroGuiaRecGlosaOperadora: WideString;
    function Get_ObjetoRecurso: WideString;
    function Get_DadosContratado: I341_XMLCt_glosaReciboOdonto_dadosContratado;
    function Get_NumeroLote: Integer;
    function Get_NumeroProtocolo: Integer;
    function Get_OpcaoRecurso: I341_XMLCt_glosaReciboOdonto_opcaoRecurso;
    function Get_DataRecurso: WideString;
    function Get_ValorTotalRecursado: WideString;
    function Get_ValorTotalAcatado: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
    procedure Set_ObjetoRecurso(Value: WideString);
    procedure Set_NumeroLote(Value: Integer);
    procedure Set_NumeroProtocolo(Value: Integer);
    procedure Set_DataRecurso(Value: WideString);
    procedure Set_ValorTotalRecursado(Value: WideString);
    procedure Set_ValorTotalAcatado(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaRecGlosaPrestador: WideString read Get_NumeroGuiaRecGlosaPrestador write Set_NumeroGuiaRecGlosaPrestador;
    property NomeOperadora: WideString read Get_NomeOperadora write Set_NomeOperadora;
    property NumeroGuiaRecGlosaOperadora: WideString read Get_NumeroGuiaRecGlosaOperadora write Set_NumeroGuiaRecGlosaOperadora;
    property ObjetoRecurso: WideString read Get_ObjetoRecurso write Set_ObjetoRecurso;
    property DadosContratado: I341_XMLCt_glosaReciboOdonto_dadosContratado read Get_DadosContratado;
    property NumeroLote: Integer read Get_NumeroLote write Set_NumeroLote;
    property NumeroProtocolo: Integer read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property OpcaoRecurso: I341_XMLCt_glosaReciboOdonto_opcaoRecurso read Get_OpcaoRecurso;
    property DataRecurso: WideString read Get_DataRecurso write Set_DataRecurso;
    property ValorTotalRecursado: WideString read Get_ValorTotalRecursado write Set_ValorTotalRecursado;
    property ValorTotalAcatado: WideString read Get_ValorTotalAcatado write Set_ValorTotalAcatado;
  end;

{ I341_XMLCt_glosaReciboOdonto_dadosContratado }

  I341_XMLCt_glosaReciboOdonto_dadosContratado = interface(IXMLNode)
    ['{CCAB4510-1D1D-43D9-A438-835C25C9802A}']
    { Property Accessors }
    function Get_CodigoPrestador: WideString;
    function Get_NomePrestador: WideString;
    procedure Set_CodigoPrestador(Value: WideString);
    procedure Set_NomePrestador(Value: WideString);
    { Methods & Properties }
    property CodigoPrestador: WideString read Get_CodigoPrestador write Set_CodigoPrestador;
    property NomePrestador: WideString read Get_NomePrestador write Set_NomePrestador;
  end;

{ I341_XMLCt_glosaReciboOdonto_opcaoRecurso }

  I341_XMLCt_glosaReciboOdonto_opcaoRecurso = interface(IXMLNode)
    ['{A372A3E1-0FAF-49DF-B614-3284E2BA0E93}']
    { Property Accessors }
    function Get_RecursoProtocolo: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo;
    function Get_RecursoGuia: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341;
    { Methods & Properties }
    property RecursoProtocolo: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo read Get_RecursoProtocolo;
    property RecursoGuia: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341 read Get_RecursoGuia;
  end;

{ I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo }

  I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo = interface(IXMLNode)
    ['{E781B28D-370A-4E41-BC05-14AF5E73D636}']
    { Property Accessors }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    function Get_RecursoAcatado: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
    procedure Set_RecursoAcatado(Value: WideString);
    { Methods & Properties }
    property CodigoGlosaProtocolo: WideString read Get_CodigoGlosaProtocolo write Set_CodigoGlosaProtocolo;
    property JustificativaProtocolo: WideString read Get_JustificativaProtocolo write Set_JustificativaProtocolo;
    property RecursoAcatado: WideString read Get_RecursoAcatado write Set_RecursoAcatado;
  end;

{ I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia }

  I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia = interface(IXMLNode)
    ['{EC25C029-2D02-48FB-84B0-5E9E7588098D}']
    { Property Accessors }
    function Get_RespostaRecursoGuiaOdonto: I341_XMLCt_respostaRecursoGuiaOdonto;
    function Get_RespostaRecursoItemOdonto: I341_XMLCt_respostaRecursoItemOdonto;
    { Methods & Properties }
    property RespostaRecursoGuiaOdonto: I341_XMLCt_respostaRecursoGuiaOdonto read Get_RespostaRecursoGuiaOdonto;
    property RespostaRecursoItemOdonto: I341_XMLCt_respostaRecursoItemOdonto read Get_RespostaRecursoItemOdonto;
  end;

{ I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341 }

  I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341 = interface(IXMLNodeCollection)
    ['{7D14D209-6F2D-4DC4-A412-0238DAF20162}']
    { Methods & Properties }
    function Add: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
    property Items[Index: Integer]: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia read Get_Item; default;
  end;

{ I341_XMLCt_respostaRecursoGuiaOdonto }

  I341_XMLCt_respostaRecursoGuiaOdonto = interface(IXMLNode)
    ['{AB7A9749-3709-416C-AADA-427FF85D32AB}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_CodGlosaGuia: WideString;
    function Get_JustificativaGuia: WideString;
    function Get_RecursoAcatadoGuia: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_CodGlosaGuia(Value: WideString);
    procedure Set_JustificativaGuia(Value: WideString);
    procedure Set_RecursoAcatadoGuia(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Senha: WideString read Get_Senha write Set_Senha;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property CodGlosaGuia: WideString read Get_CodGlosaGuia write Set_CodGlosaGuia;
    property JustificativaGuia: WideString read Get_JustificativaGuia write Set_JustificativaGuia;
    property RecursoAcatadoGuia: WideString read Get_RecursoAcatadoGuia write Set_RecursoAcatadoGuia;
  end;

{ I341_XMLCt_respostaRecursoItemOdonto }

  I341_XMLCt_respostaRecursoItemOdonto = interface(IXMLNode)
    ['{A3334F5C-B91E-49C7-A8C2-EDB85A04B279}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_RecursoProcedimento: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Senha: WideString read Get_Senha write Set_Senha;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property RecursoProcedimento: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341 read Get_RecursoProcedimento;
  end;

{ I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento }

  I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento = interface(IXMLNode)
    ['{FEB02488-32F9-456E-BFD7-821B9CE13D38}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_DataRealizacao: WideString;
    function Get_DenteRegiao: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_Quantidade: Integer;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_CodGlosaProc: WideString;
    function Get_ValorRecursado: WideString;
    function Get_JustificativaPrestador: WideString;
    function Get_ValorAcatado: WideString;
    function Get_JustificativaOperadora: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_Quantidade(Value: Integer);
    procedure Set_CodGlosaProc(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
    procedure Set_JustificativaPrestador(Value: WideString);
    procedure Set_ValorAcatado(Value: WideString);
    procedure Set_JustificativaOperadora(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property DataRealizacao: WideString read Get_DataRealizacao write Set_DataRealizacao;
    property DenteRegiao: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao read Get_DenteRegiao;
    property DenteFace: WideString read Get_DenteFace write Set_DenteFace;
    property Quantidade: Integer read Get_Quantidade write Set_Quantidade;
    property ProcRecurso: I341_XMLCt_procedimentoDados read Get_ProcRecurso;
    property CodGlosaProc: WideString read Get_CodGlosaProc write Set_CodGlosaProc;
    property ValorRecursado: WideString read Get_ValorRecursado write Set_ValorRecursado;
    property JustificativaPrestador: WideString read Get_JustificativaPrestador write Set_JustificativaPrestador;
    property ValorAcatado: WideString read Get_ValorAcatado write Set_ValorAcatado;
    property JustificativaOperadora: WideString read Get_JustificativaOperadora write Set_JustificativaOperadora;
  end;

{ I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341 }

  I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341 = interface(IXMLNodeCollection)
    ['{542432CE-D743-4AC0-86AE-5126A801ADD2}']
    { Methods & Properties }
    function Add: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
    function Insert(const Index: Integer): I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;

    function Get_Item(Index: Integer): I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
    property Items[Index: Integer]: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento read Get_Item; default;
  end;

{ I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao }

  I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao = interface(IXMLNode)
    ['{C1606989-6A70-42E1-9199-99A299E4FB74}']
    { Property Accessors }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
    { Methods & Properties }
    property CodDente: WideString read Get_CodDente write Set_CodDente;
    property CodRegiao: WideString read Get_CodRegiao write Set_CodRegiao;
  end;

{ I341_XMLCt_respostaGlosa_reciboGlosaStatus }

  I341_XMLCt_respostaGlosa_reciboGlosaStatus = interface(IXMLNode)
    ['{8840E6D4-6EF8-43CB-8C44-26CDCEDFD15E}']
    { Property Accessors }
    function Get_NrProtocoloRecursoGlosa: WideString;
    function Get_DataEnvioRecurso: WideString;
    function Get_DataRecebimentoRecurso: WideString;
    function Get_NumeroLote: WideString;
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NrProtocoloSituacaoRecursoGlosa: WideString;
    function Get_DataSituacao: WideString;
    function Get_SituacaoProtocolo: WideString;
    procedure Set_NrProtocoloRecursoGlosa(Value: WideString);
    procedure Set_DataEnvioRecurso(Value: WideString);
    procedure Set_DataRecebimentoRecurso(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NrProtocoloSituacaoRecursoGlosa(Value: WideString);
    procedure Set_DataSituacao(Value: WideString);
    procedure Set_SituacaoProtocolo(Value: WideString);
    { Methods & Properties }
    property NrProtocoloRecursoGlosa: WideString read Get_NrProtocoloRecursoGlosa write Set_NrProtocoloRecursoGlosa;
    property DataEnvioRecurso: WideString read Get_DataEnvioRecurso write Set_DataEnvioRecurso;
    property DataRecebimentoRecurso: WideString read Get_DataRecebimentoRecurso write Set_DataRecebimentoRecurso;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property NrProtocoloSituacaoRecursoGlosa: WideString read Get_NrProtocoloSituacaoRecursoGlosa write Set_NrProtocoloSituacaoRecursoGlosa;
    property DataSituacao: WideString read Get_DataSituacao write Set_DataSituacao;
    property SituacaoProtocolo: WideString read Get_SituacaoProtocolo write Set_SituacaoProtocolo;
  end;

{ I341_XMLPrestadorOperadora }

  I341_XMLPrestadorOperadora = interface(IXMLNode)
    ['{9DC1616D-24F6-411E-AB63-CA0E52B3AF24}']
    { Property Accessors }
    function Get_LoteGuias: I341_XMLCtm_guiaLote;
    function Get_LoteAnexos: I341_XMLCt_anexoLote;
    function Get_SolicitacaoDemonstrativoRetorno: I341_XMLCt_demonstrativoSolicitacao;
    function Get_SolicitacaoStatusProtocolo: I341_XMLCt_protocoloSolicitacaoStatus;
    function Get_SolicitacaoProcedimento: I341_XMLCt_solicitacaoProcedimento;
    function Get_SolicitaStatusAutorizacao: I341_XMLCt_autorizacaoSolicitaStatus;
    function Get_VerificaElegibilidade: I341_XMLCt_elegibilidadeVerifica;
    function Get_CancelaGuia: I341_XMLCt_guiaCancelamento;
    function Get_ComunicacaoInternacao: I341_XMLCtm_beneficiarioComunicacao;
    function Get_RecursoGlosa: I341_XMLCt_guiaRecursoLote;
    function Get_SolicitacaoStatusRecursoGlosa: I341_XMLCt_protocoloSolicitacaoStatus;
    { Methods & Properties }
    property LoteGuias: I341_XMLCtm_guiaLote read Get_LoteGuias;
    property LoteAnexos: I341_XMLCt_anexoLote read Get_LoteAnexos;
    property SolicitacaoDemonstrativoRetorno: I341_XMLCt_demonstrativoSolicitacao read Get_SolicitacaoDemonstrativoRetorno;
    property SolicitacaoStatusProtocolo: I341_XMLCt_protocoloSolicitacaoStatus read Get_SolicitacaoStatusProtocolo;
    property SolicitacaoProcedimento: I341_XMLCt_solicitacaoProcedimento read Get_SolicitacaoProcedimento;
    property SolicitaStatusAutorizacao: I341_XMLCt_autorizacaoSolicitaStatus read Get_SolicitaStatusAutorizacao;
    property VerificaElegibilidade: I341_XMLCt_elegibilidadeVerifica read Get_VerificaElegibilidade;
    property CancelaGuia: I341_XMLCt_guiaCancelamento read Get_CancelaGuia;
    property ComunicacaoInternacao: I341_XMLCtm_beneficiarioComunicacao read Get_ComunicacaoInternacao;
    property RecursoGlosa: I341_XMLCt_guiaRecursoLote read Get_RecursoGlosa;
    property SolicitacaoStatusRecursoGlosa: I341_XMLCt_protocoloSolicitacaoStatus read Get_SolicitacaoStatusRecursoGlosa;
  end;

{ I341_XMLCtm_guiaLote }

  I341_XMLCtm_guiaLote = interface(IXMLNode)
    ['{1DADB893-FA79-4395-8991-1089E90F3897}']
    { Property Accessors }
    function Get_NumeroLote: WideString;
    function Get_GuiasTISS: I341_XMLCtm_guiaLote_guiasTISS;
    procedure Set_NumeroLote(Value: WideString);
    { Methods & Properties }
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property GuiasTISS: I341_XMLCtm_guiaLote_guiasTISS read Get_GuiasTISS;
  end;

{ I341_XMLCtm_guiaLote_guiasTISS }

  I341_XMLCtm_guiaLote_guiasTISS = interface(IXMLNode)
    ['{766FCD0C-60B6-42C5-85D6-A95BE9BA2097}']
    { Property Accessors }
    function Get_GuiaSPSADT: I341_XMLCtm_spsadtGuiaList341;
    function Get_GuiaResumoInternacao: I341_XMLCtm_internacaoResumoGuiaList341;
    function Get_GuiaHonorarios: I341_XMLCtm_honorarioIndividualGuiaList341;
    function Get_GuiaConsulta: I341_XMLCtm_consultaGuiaList341;
    function Get_GuiaOdonto: I341_XMLCto_guiaOdontologiaList341;
    { Methods & Properties }
    property GuiaSPSADT: I341_XMLCtm_spsadtGuiaList341 read Get_GuiaSPSADT;
    property GuiaResumoInternacao: I341_XMLCtm_internacaoResumoGuiaList341 read Get_GuiaResumoInternacao;
    property GuiaHonorarios: I341_XMLCtm_honorarioIndividualGuiaList341 read Get_GuiaHonorarios;
    property GuiaConsulta: I341_XMLCtm_consultaGuiaList341 read Get_GuiaConsulta;
    property GuiaOdonto: I341_XMLCto_guiaOdontologiaList341 read Get_GuiaOdonto;
  end;

{ I341_XMLCtm_spsadtGuia }

  I341_XMLCtm_spsadtGuia = interface(IXMLNode)
    ['{12FA6C4C-44AB-45AD-8965-D2376647AC5D}']
    { Property Accessors }
    function Get_CabecalhoGuia: I341_XMLCtm_spsadtGuia_cabecalhoGuia;
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoSADT;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosSolicitante: I341_XMLCtm_spsadtGuia_dadosSolicitante;
    function Get_DadosSolicitacao: I341_XMLCtm_spsadtGuia_dadosSolicitacao;
    function Get_DadosExecutante: I341_XMLCtm_spsadtGuia_dadosExecutante;
    function Get_DadosAtendimento: I341_XMLCtm_spsadtAtendimento;
    function Get_ProcedimentosExecutados: I341_XMLCtm_spsadtGuia_procedimentosExecutados;
    function Get_OutrasDespesas: I341_XMLCt_outrasDespesas;
    function Get_Observacao: WideString;
    function Get_ValorTotal: I341_XMLCt_guiaValorTotal;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property CabecalhoGuia: I341_XMLCtm_spsadtGuia_cabecalhoGuia read Get_CabecalhoGuia;
    property DadosAutorizacao: I341_XMLCt_autorizacaoSADT read Get_DadosAutorizacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property DadosSolicitante: I341_XMLCtm_spsadtGuia_dadosSolicitante read Get_DadosSolicitante;
    property DadosSolicitacao: I341_XMLCtm_spsadtGuia_dadosSolicitacao read Get_DadosSolicitacao;
    property DadosExecutante: I341_XMLCtm_spsadtGuia_dadosExecutante read Get_DadosExecutante;
    property DadosAtendimento: I341_XMLCtm_spsadtAtendimento read Get_DadosAtendimento;
    property ProcedimentosExecutados: I341_XMLCtm_spsadtGuia_procedimentosExecutados read Get_ProcedimentosExecutados;
    property OutrasDespesas: I341_XMLCt_outrasDespesas read Get_OutrasDespesas;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property ValorTotal: I341_XMLCt_guiaValorTotal read Get_ValorTotal;
    property AssinaturaDigitalGuia: I341_XMLSignature read Get_AssinaturaDigitalGuia;
  end;

{ I341_XMLCtm_spsadtGuiaList341 }

  I341_XMLCtm_spsadtGuiaList341 = interface(IXMLNodeCollection)
    ['{DAB10101-CC79-469E-B5F9-2DB4E9468957}']
    { Methods & Properties }
    function Add: I341_XMLCtm_spsadtGuia;
    function Insert(const Index: Integer): I341_XMLCtm_spsadtGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_spsadtGuia;
    property Items[Index: Integer]: I341_XMLCtm_spsadtGuia read Get_Item; default;
  end;

{ I341_XMLCt_guiaCabecalho }

  I341_XMLCt_guiaCabecalho = interface(IXMLNode)
    ['{DA8701F5-9DCC-45B5-AE09-B89E61698206}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
  end;

{ I341_XMLCtm_spsadtGuia_cabecalhoGuia }

  I341_XMLCtm_spsadtGuia_cabecalhoGuia = interface(I341_XMLCt_guiaCabecalho)
    ['{DB54ABB9-8819-435B-A811-6EAD1977A5D4}']
    { Property Accessors }
    function Get_GuiaPrincipal: WideString;
    procedure Set_GuiaPrincipal(Value: WideString);
    { Methods & Properties }
    property GuiaPrincipal: WideString read Get_GuiaPrincipal write Set_GuiaPrincipal;
  end;

{ I341_XMLCt_autorizacaoSADT }

  I341_XMLCt_autorizacaoSADT = interface(IXMLNode)
    ['{E718E1A6-EEA0-4239-88E5-F4CBABEC2553}']
    { Property Accessors }
    function Get_NumeroGuiaOperadora: WideString;
    function Get_DataAutorizacao: WideString;
    function Get_Senha: WideString;
    function Get_DataValidadeSenha: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataValidadeSenha(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property DataAutorizacao: WideString read Get_DataAutorizacao write Set_DataAutorizacao;
    property Senha: WideString read Get_Senha write Set_Senha;
    property DataValidadeSenha: WideString read Get_DataValidadeSenha write Set_DataValidadeSenha;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
  end;

{ I341_XMLCtm_spsadtGuia_dadosSolicitante }

  I341_XMLCtm_spsadtGuia_dadosSolicitante = interface(IXMLNode)
    ['{326BA7A2-70F6-46B3-BCD9-C8C9D12F3A37}']
    { Property Accessors }
    function Get_ContratadoSolicitante: I341_XMLCt_contratadoDados;
    function Get_ProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados;
    { Methods & Properties }
    property ContratadoSolicitante: I341_XMLCt_contratadoDados read Get_ContratadoSolicitante;
    property ProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados read Get_ProfissionalSolicitante;
  end;

{ I341_XMLCt_contratadoProfissionalDados }

  I341_XMLCt_contratadoProfissionalDados = interface(IXMLNode)
    ['{0E1025EC-F42E-4A87-8953-13F4B473421B}']
    { Property Accessors }
    function Get_NomeProfissional: WideString;
    function Get_ConselhoProfissional: WideString;
    function Get_NumeroConselhoProfissional: WideString;
    function Get_UF: WideString;
    function Get_CBOS: WideString;
    procedure Set_NomeProfissional(Value: WideString);
    procedure Set_ConselhoProfissional(Value: WideString);
    procedure Set_NumeroConselhoProfissional(Value: WideString);
    procedure Set_UF(Value: WideString);
    procedure Set_CBOS(Value: WideString);
    { Methods & Properties }
    property NomeProfissional: WideString read Get_NomeProfissional write Set_NomeProfissional;
    property ConselhoProfissional: WideString read Get_ConselhoProfissional write Set_ConselhoProfissional;
    property NumeroConselhoProfissional: WideString read Get_NumeroConselhoProfissional write Set_NumeroConselhoProfissional;
    property UF: WideString read Get_UF write Set_UF;
    property CBOS: WideString read Get_CBOS write Set_CBOS;
  end;

{ I341_XMLCtm_spsadtGuia_dadosSolicitacao }

  I341_XMLCtm_spsadtGuia_dadosSolicitacao = interface(IXMLNode)
    ['{722CFC8D-3655-408F-9A2A-88B84D9F266B}']
    { Property Accessors }
    function Get_DataSolicitacao: WideString;
    function Get_CaraterAtendimento: WideString;
    function Get_IndicacaoClinica: WideString;
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_CaraterAtendimento(Value: WideString);
    procedure Set_IndicacaoClinica(Value: WideString);
    { Methods & Properties }
    property DataSolicitacao: WideString read Get_DataSolicitacao write Set_DataSolicitacao;
    property CaraterAtendimento: WideString read Get_CaraterAtendimento write Set_CaraterAtendimento;
    property IndicacaoClinica: WideString read Get_IndicacaoClinica write Set_IndicacaoClinica;
  end;

{ I341_XMLCtm_spsadtGuia_dadosExecutante }

  I341_XMLCtm_spsadtGuia_dadosExecutante = interface(IXMLNode)
    ['{5DE39A36-C143-467C-8B50-05BFF0944A32}']
    { Property Accessors }
    function Get_ContratadoExecutante: I341_XMLCt_contratadoDados;
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
    { Methods & Properties }
    property ContratadoExecutante: I341_XMLCt_contratadoDados read Get_ContratadoExecutante;
    property CNES: WideString read Get_CNES write Set_CNES;
  end;

{ I341_XMLCtm_spsadtAtendimento }

  I341_XMLCtm_spsadtAtendimento = interface(IXMLNode)
    ['{29A908CE-0265-43FC-B35B-BFDEA21BA6BC}']
    { Property Accessors }
    function Get_TipoAtendimento: WideString;
    function Get_IndicacaoAcidente: WideString;
    function Get_TipoConsulta: WideString;
    function Get_MotivoEncerramento: WideString;
    procedure Set_TipoAtendimento(Value: WideString);
    procedure Set_IndicacaoAcidente(Value: WideString);
    procedure Set_TipoConsulta(Value: WideString);
    procedure Set_MotivoEncerramento(Value: WideString);
    { Methods & Properties }
    property TipoAtendimento: WideString read Get_TipoAtendimento write Set_TipoAtendimento;
    property IndicacaoAcidente: WideString read Get_IndicacaoAcidente write Set_IndicacaoAcidente;
    property TipoConsulta: WideString read Get_TipoConsulta write Set_TipoConsulta;
    property MotivoEncerramento: WideString read Get_MotivoEncerramento write Set_MotivoEncerramento;
  end;

{ I341_XMLCtm_spsadtGuia_procedimentosExecutados }

  I341_XMLCtm_spsadtGuia_procedimentosExecutados = interface(IXMLNodeCollection)
    ['{A0E4B2A6-0EE0-4CFA-A490-DCEC733F0DD3}']
    { Property Accessors }
    function Get_ProcedimentoExecutado(Index: Integer): I341_XMLCt_procedimentoExecutadoSadt;
    { Methods & Properties }
    function Add: I341_XMLCt_procedimentoExecutadoSadt;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoSadt;
    property ProcedimentoExecutado[Index: Integer]: I341_XMLCt_procedimentoExecutadoSadt read Get_ProcedimentoExecutado; default;
  end;

{ I341_XMLCt_procedimentoExecutadoSadt }

  I341_XMLCt_procedimentoExecutadoSadt = interface(IXMLNode)
    ['{5DD34767-FECC-44BC-BABC-6734D4470336}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeExecutada: Integer;
    function Get_ViaAcesso: WideString;
    function Get_TecnicaUtilizada: WideString;
    function Get_ReducaoAcrescimo: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_EquipeSadt: I341_XMLCt_identEquipeSADTList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: Integer);
    procedure Set_ViaAcesso(Value: WideString);
    procedure Set_TecnicaUtilizada(Value: WideString);
    procedure Set_ReducaoAcrescimo(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property DataExecucao: WideString read Get_DataExecucao write Set_DataExecucao;
    property HoraInicial: WideString read Get_HoraInicial write Set_HoraInicial;
    property HoraFinal: WideString read Get_HoraFinal write Set_HoraFinal;
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property QuantidadeExecutada: Integer read Get_QuantidadeExecutada write Set_QuantidadeExecutada;
    property ViaAcesso: WideString read Get_ViaAcesso write Set_ViaAcesso;
    property TecnicaUtilizada: WideString read Get_TecnicaUtilizada write Set_TecnicaUtilizada;
    property ReducaoAcrescimo: WideString read Get_ReducaoAcrescimo write Set_ReducaoAcrescimo;
    property ValorUnitario: WideString read Get_ValorUnitario write Set_ValorUnitario;
    property ValorTotal: WideString read Get_ValorTotal write Set_ValorTotal;
    property EquipeSadt: I341_XMLCt_identEquipeSADTList341 read Get_EquipeSadt;
  end;

{ I341_XMLCt_identEquipeSADT }

  I341_XMLCt_identEquipeSADT = interface(IXMLNode)
    ['{B69D3C06-08AA-4F5B-9B12-1B98EF77B806}']
    { Property Accessors }
    function Get_GrauPart: WideString;
    function Get_CodProfissional: I341_XMLCt_identEquipeSADT_codProfissional;
    function Get_NomeProf: WideString;
    function Get_Conselho: WideString;
    function Get_NumeroConselhoProfissional: WideString;
    function Get_UF: WideString;
    function Get_CBOS: WideString;
    procedure Set_GrauPart(Value: WideString);
    procedure Set_NomeProf(Value: WideString);
    procedure Set_Conselho(Value: WideString);
    procedure Set_NumeroConselhoProfissional(Value: WideString);
    procedure Set_UF(Value: WideString);
    procedure Set_CBOS(Value: WideString);
    { Methods & Properties }
    property GrauPart: WideString read Get_GrauPart write Set_GrauPart;
    property CodProfissional: I341_XMLCt_identEquipeSADT_codProfissional read Get_CodProfissional;
    property NomeProf: WideString read Get_NomeProf write Set_NomeProf;
    property Conselho: WideString read Get_Conselho write Set_Conselho;
    property NumeroConselhoProfissional: WideString read Get_NumeroConselhoProfissional write Set_NumeroConselhoProfissional;
    property UF: WideString read Get_UF write Set_UF;
    property CBOS: WideString read Get_CBOS write Set_CBOS;
  end;

{ I341_XMLCt_identEquipeSADTList341 }

  I341_XMLCt_identEquipeSADTList341 = interface(IXMLNodeCollection)
    ['{971FADDE-C8C3-4A25-A601-C548BC4B3889}']
    { Methods & Properties }
    function Add: I341_XMLCt_identEquipeSADT;
    function Insert(const Index: Integer): I341_XMLCt_identEquipeSADT;

    function Get_Item(Index: Integer): I341_XMLCt_identEquipeSADT;
    property Items[Index: Integer]: I341_XMLCt_identEquipeSADT read Get_Item; default;
  end;

{ I341_XMLCt_identEquipeSADT_codProfissional }

  I341_XMLCt_identEquipeSADT_codProfissional = interface(IXMLNode)
    ['{090629B7-2C1D-431B-87B5-1EF69368B52E}']
    { Property Accessors }
    function Get_CodigoPrestadorNaOperadora: WideString;
    function Get_CpfContratado: WideString;
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
    { Methods & Properties }
    property CodigoPrestadorNaOperadora: WideString read Get_CodigoPrestadorNaOperadora write Set_CodigoPrestadorNaOperadora;
    property CpfContratado: WideString read Get_CpfContratado write Set_CpfContratado;
  end;

{ I341_XMLCt_outrasDespesas }

  I341_XMLCt_outrasDespesas = interface(IXMLNodeCollection)
    ['{B6C04D20-6E42-49E3-B07C-5DA527577B3D}']
    { Property Accessors }
    function Get_Despesa(Index: Integer): I341_XMLCt_outrasDespesas_despesa;
    { Methods & Properties }
    function Add: I341_XMLCt_outrasDespesas_despesa;
    function Insert(const Index: Integer): I341_XMLCt_outrasDespesas_despesa;
    property Despesa[Index: Integer]: I341_XMLCt_outrasDespesas_despesa read Get_Despesa; default;
  end;

{ I341_XMLCt_outrasDespesas_despesa }

  I341_XMLCt_outrasDespesas_despesa = interface(IXMLNode)
    ['{76967458-4D1F-4568-9A49-539265D09710}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_CodigoDespesa: WideString;
    function Get_ServicosExecutados: I341_XMLCt_procedimentoExecutadoOutras;
    function Get_ItemVinculado: Integer;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_CodigoDespesa(Value: WideString);
    procedure Set_ItemVinculado(Value: Integer);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property CodigoDespesa: WideString read Get_CodigoDespesa write Set_CodigoDespesa;
    property ServicosExecutados: I341_XMLCt_procedimentoExecutadoOutras read Get_ServicosExecutados;
    property ItemVinculado: Integer read Get_ItemVinculado write Set_ItemVinculado;
  end;

{ I341_XMLCt_procedimentoExecutadoOutras }

  I341_XMLCt_procedimentoExecutadoOutras = interface(IXMLNode)
    ['{A75A7682-107B-45EA-8548-8B54C102E7C7}']
    { Property Accessors }
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_CodigoTabela: WideString;
    function Get_CodigoProcedimento: WideString;
    function Get_QuantidadeExecutada: WideString;
    function Get_UnidadeMedida: WideString;
    function Get_ReducaoAcrescimo: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_DescricaoProcedimento: WideString;
    function Get_RegistroANVISA: WideString;
    function Get_CodigoRefFabricante: WideString;
    function Get_AutorizacaoFuncionamento: WideString;
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_CodigoTabela(Value: WideString);
    procedure Set_CodigoProcedimento(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: WideString);
    procedure Set_UnidadeMedida(Value: WideString);
    procedure Set_ReducaoAcrescimo(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
    procedure Set_DescricaoProcedimento(Value: WideString);
    procedure Set_RegistroANVISA(Value: WideString);
    procedure Set_CodigoRefFabricante(Value: WideString);
    procedure Set_AutorizacaoFuncionamento(Value: WideString);
    { Methods & Properties }
    property DataExecucao: WideString read Get_DataExecucao write Set_DataExecucao;
    property HoraInicial: WideString read Get_HoraInicial write Set_HoraInicial;
    property HoraFinal: WideString read Get_HoraFinal write Set_HoraFinal;
    property CodigoTabela: WideString read Get_CodigoTabela write Set_CodigoTabela;
    property CodigoProcedimento: WideString read Get_CodigoProcedimento write Set_CodigoProcedimento;
    property QuantidadeExecutada: WideString read Get_QuantidadeExecutada write Set_QuantidadeExecutada;
    property UnidadeMedida: WideString read Get_UnidadeMedida write Set_UnidadeMedida;
    property ReducaoAcrescimo: WideString read Get_ReducaoAcrescimo write Set_ReducaoAcrescimo;
    property ValorUnitario: WideString read Get_ValorUnitario write Set_ValorUnitario;
    property ValorTotal: WideString read Get_ValorTotal write Set_ValorTotal;
    property DescricaoProcedimento: WideString read Get_DescricaoProcedimento write Set_DescricaoProcedimento;
    property RegistroANVISA: WideString read Get_RegistroANVISA write Set_RegistroANVISA;
    property CodigoRefFabricante: WideString read Get_CodigoRefFabricante write Set_CodigoRefFabricante;
    property AutorizacaoFuncionamento: WideString read Get_AutorizacaoFuncionamento write Set_AutorizacaoFuncionamento;
  end;

{ I341_XMLCt_guiaValorTotal }

  I341_XMLCt_guiaValorTotal = interface(IXMLNode)
    ['{4B5F3F9B-0184-4FB9-861E-76A269A0BB1F}']
    { Property Accessors }
    function Get_ValorProcedimentos: WideString;
    function Get_ValorDiarias: WideString;
    function Get_ValorTaxasAlugueis: WideString;
    function Get_ValorMateriais: WideString;
    function Get_ValorMedicamentos: WideString;
    function Get_ValorOPME: WideString;
    function Get_ValorGasesMedicinais: WideString;
    function Get_ValorTotalGeral: WideString;
    procedure Set_ValorProcedimentos(Value: WideString);
    procedure Set_ValorDiarias(Value: WideString);
    procedure Set_ValorTaxasAlugueis(Value: WideString);
    procedure Set_ValorMateriais(Value: WideString);
    procedure Set_ValorMedicamentos(Value: WideString);
    procedure Set_ValorOPME(Value: WideString);
    procedure Set_ValorGasesMedicinais(Value: WideString);
    procedure Set_ValorTotalGeral(Value: WideString);
    { Methods & Properties }
    property ValorProcedimentos: WideString read Get_ValorProcedimentos write Set_ValorProcedimentos;
    property ValorDiarias: WideString read Get_ValorDiarias write Set_ValorDiarias;
    property ValorTaxasAlugueis: WideString read Get_ValorTaxasAlugueis write Set_ValorTaxasAlugueis;
    property ValorMateriais: WideString read Get_ValorMateriais write Set_ValorMateriais;
    property ValorMedicamentos: WideString read Get_ValorMedicamentos write Set_ValorMedicamentos;
    property ValorOPME: WideString read Get_ValorOPME write Set_ValorOPME;
    property ValorGasesMedicinais: WideString read Get_ValorGasesMedicinais write Set_ValorGasesMedicinais;
    property ValorTotalGeral: WideString read Get_ValorTotalGeral write Set_ValorTotalGeral;
  end;

{ IXMLSignatureType_ds }

  IXMLSignatureType_ds = interface(IXMLNode)
    ['{BC83C3A6-065F-426A-8696-CA262653FF95}']
    { Property Accessors }
    function Get_Id: WideString;
    function Get_SignedInfo: IXMLSignedInfoType_ds;
    function Get_SignatureValue: IXMLSignatureValueType_ds;
    function Get_KeyInfo: IXMLKeyInfoType_ds;
    function Get_Object_: IXMLObjectType_dsList341;
    procedure Set_Id(Value: WideString);
    { Methods & Properties }
    property Id: WideString read Get_Id write Set_Id;
    property SignedInfo: IXMLSignedInfoType_ds read Get_SignedInfo;
    property SignatureValue: IXMLSignatureValueType_ds read Get_SignatureValue;
    property KeyInfo: IXMLKeyInfoType_ds read Get_KeyInfo;
    property Object_: IXMLObjectType_dsList341 read Get_Object_;
  end;

{ IXMLSignedInfoType_ds }

  IXMLSignedInfoType_ds = interface(IXMLNode)
    ['{E56752BA-8B92-4390-A1F9-F7018117565C}']
    { Property Accessors }
    function Get_Id: WideString;
    function Get_CanonicalizationMethod: IXMLCanonicalizationMethodType_ds;
    function Get_SignatureMethod: IXMLSignatureMethodType_ds;
    function Get_Reference: IXMLReferenceType_dsList341;
    procedure Set_Id(Value: WideString);
    { Methods & Properties }
    property Id: WideString read Get_Id write Set_Id;
    property CanonicalizationMethod: IXMLCanonicalizationMethodType_ds read Get_CanonicalizationMethod;
    property SignatureMethod: IXMLSignatureMethodType_ds read Get_SignatureMethod;
    property Reference: IXMLReferenceType_dsList341 read Get_Reference;
  end;

{ IXMLCanonicalizationMethodType_ds }

  IXMLCanonicalizationMethodType_ds = interface(IXMLNode)
    ['{87830E83-C8E5-4CDA-8797-6D055EBED39C}']
    { Property Accessors }
    function Get_Algorithm: WideString;
    procedure Set_Algorithm(Value: WideString);
    { Methods & Properties }
    property Algorithm: WideString read Get_Algorithm write Set_Algorithm;
  end;

{ IXMLSignatureMethodType_ds }

  IXMLSignatureMethodType_ds = interface(IXMLNode)
    ['{D7847C6C-6FED-4900-A7EB-35B3D46C64EA}']
    { Property Accessors }
    function Get_Algorithm: WideString;
    function Get_HMACOutputLength: Integer;
    procedure Set_Algorithm(Value: WideString);
    procedure Set_HMACOutputLength(Value: Integer);
    { Methods & Properties }
    property Algorithm: WideString read Get_Algorithm write Set_Algorithm;
    property HMACOutputLength: Integer read Get_HMACOutputLength write Set_HMACOutputLength;
  end;

{ IXMLReferenceType_ds }

  IXMLReferenceType_ds = interface(IXMLNode)
    ['{6A506A33-DFD7-469A-83C3-FFC0906DAC1C}']
    { Property Accessors }
    function Get_Id: WideString;
    function Get_URI: WideString;
    function Get_Type_: WideString;
    function Get_Transforms: IXMLTransformsType_ds;
    function Get_DigestMethod: IXMLDigestMethodType_ds;
    function Get_DigestValue: WideString;
    procedure Set_Id(Value: WideString);
    procedure Set_URI(Value: WideString);
    procedure Set_Type_(Value: WideString);
    procedure Set_DigestValue(Value: WideString);
    { Methods & Properties }
    property Id: WideString read Get_Id write Set_Id;
    property URI: WideString read Get_URI write Set_URI;
    property Type_: WideString read Get_Type_ write Set_Type_;
    property Transforms: IXMLTransformsType_ds read Get_Transforms;
    property DigestMethod: IXMLDigestMethodType_ds read Get_DigestMethod;
    property DigestValue: WideString read Get_DigestValue write Set_DigestValue;
  end;

{ IXMLReferenceType_dsList341 }

  IXMLReferenceType_dsList341 = interface(IXMLNodeCollection)
    ['{DCCAD006-B139-4ABC-9C98-33ADD6FF8DC8}']
    { Methods & Properties }
    function Add: IXMLReferenceType_ds;
    function Insert(const Index: Integer): IXMLReferenceType_ds;

    function Get_Item(Index: Integer): IXMLReferenceType_ds;
    property Items[Index: Integer]: IXMLReferenceType_ds read Get_Item; default;
  end;

{ IXMLTransformsType_ds }

  IXMLTransformsType_ds = interface(IXMLNodeCollection)
    ['{0F405973-4184-4BE1-9096-62D2FE7FEC86}']
    { Property Accessors }
    function Get_Transform(Index: Integer): IXMLTransformType_ds;
    { Methods & Properties }
    function Add: IXMLTransformType_ds;
    function Insert(const Index: Integer): IXMLTransformType_ds;
    property Transform[Index: Integer]: IXMLTransformType_ds read Get_Transform; default;
  end;

{ IXMLTransformType_ds }

  IXMLTransformType_ds = interface(IXMLNodeCollection)
    ['{21FA86DD-C386-4FD1-AC0E-37B74FF0CFA4}']
    { Property Accessors }
    function Get_Algorithm: WideString;
    function Get_XPath(Index: Integer): WideString;
    procedure Set_Algorithm(Value: WideString);
    { Methods & Properties }
    function Add(const XPath: WideString): IXMLNode;
    function Insert(const Index: Integer; const XPath: WideString): IXMLNode;
    property Algorithm: WideString read Get_Algorithm write Set_Algorithm;
    property XPath[Index: Integer]: WideString read Get_XPath; default;
  end;

{ IXMLDigestMethodType_ds }

  IXMLDigestMethodType_ds = interface(IXMLNode)
    ['{3ED7147B-CD89-427E-8FE7-A1BFE439D3E0}']
    { Property Accessors }
    function Get_Algorithm: WideString;
    procedure Set_Algorithm(Value: WideString);
    { Methods & Properties }
    property Algorithm: WideString read Get_Algorithm write Set_Algorithm;
  end;

{ IXMLSignatureValueType_ds }

  IXMLSignatureValueType_ds = interface(IXMLNode)
    ['{8692DC69-8000-44A3-B77B-97447FADC407}']
    { Property Accessors }
    function Get_Id: WideString;
    procedure Set_Id(Value: WideString);
    { Methods & Properties }
    property Id: WideString read Get_Id write Set_Id;
  end;

{ IXMLKeyInfoType_ds }

  IXMLKeyInfoType_ds = interface(IXMLNode)
    ['{9F635B00-538A-4B5A-A75D-FF3DA03F778B}']
    { Property Accessors }
    function Get_Id: WideString;
    function Get_KeyName: I341_XMLString_List341;
    function Get_KeyValue: IXMLKeyValueType_dsList341;
    function Get_RetrievalMethod: IXMLRetrievalMethodType_dsList341;
    function Get_X509Data: IXMLX509DataType_dsList341;
    function Get_PGPData: IXMLPGPDataType_dsList341;
    function Get_SPKIData: IXMLSPKIDataType_dsList341;
    function Get_MgmtData: I341_XMLString_List341;
    procedure Set_Id(Value: WideString);
    { Methods & Properties }
    property Id: WideString read Get_Id write Set_Id;
    property KeyName: I341_XMLString_List341 read Get_KeyName;
    property KeyValue: IXMLKeyValueType_dsList341 read Get_KeyValue;
    property RetrievalMethod: IXMLRetrievalMethodType_dsList341 read Get_RetrievalMethod;
    property X509Data: IXMLX509DataType_dsList341 read Get_X509Data;
    property PGPData: IXMLPGPDataType_dsList341 read Get_PGPData;
    property SPKIData: IXMLSPKIDataType_dsList341 read Get_SPKIData;
    property MgmtData: I341_XMLString_List341 read Get_MgmtData;
  end;

{ IXMLKeyValueType_ds }

  IXMLKeyValueType_ds = interface(IXMLNode)
    ['{23FBA8E5-CA24-4E76-9DFA-BE6E815005C8}']
    { Property Accessors }
    function Get_DSAKeyValue: IXMLDSAKeyValueType_ds;
    function Get_RSAKeyValue: IXMLRSAKeyValueType_ds;
    { Methods & Properties }
    property DSAKeyValue: IXMLDSAKeyValueType_ds read Get_DSAKeyValue;
    property RSAKeyValue: IXMLRSAKeyValueType_ds read Get_RSAKeyValue;
  end;

{ IXMLKeyValueType_dsList341 }

  IXMLKeyValueType_dsList341 = interface(IXMLNodeCollection)
    ['{34154330-4136-42D7-936E-C25B0E7722D8}']
    { Methods & Properties }
    function Add: IXMLKeyValueType_ds;
    function Insert(const Index: Integer): IXMLKeyValueType_ds;

    function Get_Item(Index: Integer): IXMLKeyValueType_ds;
    property Items[Index: Integer]: IXMLKeyValueType_ds read Get_Item; default;
  end;

{ IXMLDSAKeyValueType_ds }

  IXMLDSAKeyValueType_ds = interface(IXMLNode)
    ['{A620AD0D-0EF0-4D43-9B5F-4A8040EF3155}']
    { Property Accessors }
    function Get_P: WideString;
    function Get_Q: WideString;
    function Get_G: WideString;
    function Get_Y: WideString;
    function Get_J: WideString;
    function Get_Seed: WideString;
    function Get_PgenCounter: WideString;
    procedure Set_P(Value: WideString);
    procedure Set_Q(Value: WideString);
    procedure Set_G(Value: WideString);
    procedure Set_Y(Value: WideString);
    procedure Set_J(Value: WideString);
    procedure Set_Seed(Value: WideString);
    procedure Set_PgenCounter(Value: WideString);
    { Methods & Properties }
    property P: WideString read Get_P write Set_P;
    property Q: WideString read Get_Q write Set_Q;
    property G: WideString read Get_G write Set_G;
    property Y: WideString read Get_Y write Set_Y;
    property J: WideString read Get_J write Set_J;
    property Seed: WideString read Get_Seed write Set_Seed;
    property PgenCounter: WideString read Get_PgenCounter write Set_PgenCounter;
  end;

{ IXMLRSAKeyValueType_ds }

  IXMLRSAKeyValueType_ds = interface(IXMLNode)
    ['{1CAA4DAB-73EE-4A78-8F84-382A4F29ECDA}']
    { Property Accessors }
    function Get_Modulus: WideString;
    function Get_Exponent: WideString;
    procedure Set_Modulus(Value: WideString);
    procedure Set_Exponent(Value: WideString);
    { Methods & Properties }
    property Modulus: WideString read Get_Modulus write Set_Modulus;
    property Exponent: WideString read Get_Exponent write Set_Exponent;
  end;

{ IXMLRetrievalMethodType_ds }

  IXMLRetrievalMethodType_ds = interface(IXMLNode)
    ['{E93448BF-8862-44B7-8B5B-6414A2A84193}']
    { Property Accessors }
    function Get_URI: WideString;
    function Get_Type_: WideString;
    function Get_Transforms: IXMLTransformsType_ds;
    procedure Set_URI(Value: WideString);
    procedure Set_Type_(Value: WideString);
    { Methods & Properties }
    property URI: WideString read Get_URI write Set_URI;
    property Type_: WideString read Get_Type_ write Set_Type_;
    property Transforms: IXMLTransformsType_ds read Get_Transforms;
  end;

{ IXMLRetrievalMethodType_dsList341 }

  IXMLRetrievalMethodType_dsList341 = interface(IXMLNodeCollection)
    ['{FB40CCCE-B9DC-4DA2-9488-B83319E200FF}']
    { Methods & Properties }
    function Add: IXMLRetrievalMethodType_ds;
    function Insert(const Index: Integer): IXMLRetrievalMethodType_ds;

    function Get_Item(Index: Integer): IXMLRetrievalMethodType_ds;
    property Items[Index: Integer]: IXMLRetrievalMethodType_ds read Get_Item; default;
  end;

{ IXMLX509DataType_ds }

  IXMLX509DataType_ds = interface(IXMLNode)
    ['{BCA22FFB-9A74-48D4-82B5-FCDD964E8CA4}']
    { Property Accessors }
    function Get_X509IssuerSerial: IXMLX509IssuerSerialType_dsList341;
    function Get_X509SKI: I341_XMLBase64BinaryList341;
    function Get_X509SubjectName: I341_XMLString_List341;
    function Get_X509Certificate: I341_XMLBase64BinaryList341;
    function Get_X509CRL: I341_XMLBase64BinaryList341;
    { Methods & Properties }
    property X509IssuerSerial: IXMLX509IssuerSerialType_dsList341 read Get_X509IssuerSerial;
    property X509SKI: I341_XMLBase64BinaryList341 read Get_X509SKI;
    property X509SubjectName: I341_XMLString_List341 read Get_X509SubjectName;
    property X509Certificate: I341_XMLBase64BinaryList341 read Get_X509Certificate;
    property X509CRL: I341_XMLBase64BinaryList341 read Get_X509CRL;
  end;

{ IXMLX509DataType_dsList341 }

  IXMLX509DataType_dsList341 = interface(IXMLNodeCollection)
    ['{15E6490F-4208-460E-8B8F-3D85DDCB21CE}']
    { Methods & Properties }
    function Add: IXMLX509DataType_ds;
    function Insert(const Index: Integer): IXMLX509DataType_ds;

    function Get_Item(Index: Integer): IXMLX509DataType_ds;
    property Items[Index: Integer]: IXMLX509DataType_ds read Get_Item; default;
  end;

{ IXMLX509IssuerSerialType_ds }

  IXMLX509IssuerSerialType_ds = interface(IXMLNode)
    ['{8CA3EFFF-2FC2-4FB1-85AD-E53AB6934310}']
    { Property Accessors }
    function Get_X509IssuerName: WideString;
    function Get_X509SerialNumber: Integer;
    procedure Set_X509IssuerName(Value: WideString);
    procedure Set_X509SerialNumber(Value: Integer);
    { Methods & Properties }
    property X509IssuerName: WideString read Get_X509IssuerName write Set_X509IssuerName;
    property X509SerialNumber: Integer read Get_X509SerialNumber write Set_X509SerialNumber;
  end;

{ IXMLX509IssuerSerialType_dsList341 }

  IXMLX509IssuerSerialType_dsList341 = interface(IXMLNodeCollection)
    ['{009F7252-26E3-45A4-89FD-985F0E5A52F4}']
    { Methods & Properties }
    function Add: IXMLX509IssuerSerialType_ds;
    function Insert(const Index: Integer): IXMLX509IssuerSerialType_ds;

    function Get_Item(Index: Integer): IXMLX509IssuerSerialType_ds;
    property Items[Index: Integer]: IXMLX509IssuerSerialType_ds read Get_Item; default;
  end;

{ IXMLPGPDataType_ds }

  IXMLPGPDataType_ds = interface(IXMLNode)
    ['{EA9D061A-D456-4125-94A9-2569AD30758E}']
    { Property Accessors }
    function Get_PGPKeyID: WideString;
    function Get_PGPKeyPacket: WideString;
    procedure Set_PGPKeyID(Value: WideString);
    procedure Set_PGPKeyPacket(Value: WideString);
    { Methods & Properties }
    property PGPKeyID: WideString read Get_PGPKeyID write Set_PGPKeyID;
    property PGPKeyPacket: WideString read Get_PGPKeyPacket write Set_PGPKeyPacket;
  end;

{ IXMLPGPDataType_dsList341 }

  IXMLPGPDataType_dsList341 = interface(IXMLNodeCollection)
    ['{60D034CD-7B5E-4EE5-BD22-7BAEF0521E23}']
    { Methods & Properties }
    function Add: IXMLPGPDataType_ds;
    function Insert(const Index: Integer): IXMLPGPDataType_ds;

    function Get_Item(Index: Integer): IXMLPGPDataType_ds;
    property Items[Index: Integer]: IXMLPGPDataType_ds read Get_Item; default;
  end;

{ IXMLSPKIDataType_ds }

  IXMLSPKIDataType_ds = interface(IXMLNodeCollection)
    ['{416E913A-C8AB-4C5B-9C03-08D75D7917DF}']
    { Property Accessors }
    function Get_SPKISexp(Index: Integer): WideString;
    { Methods & Properties }
    function Add(const SPKISexp: WideString): IXMLNode;
    function Insert(const Index: Integer; const SPKISexp: WideString): IXMLNode;
    property SPKISexp[Index: Integer]: WideString read Get_SPKISexp; default;
  end;

{ IXMLSPKIDataType_dsList341 }

  IXMLSPKIDataType_dsList341 = interface(IXMLNodeCollection)
    ['{B5CC1B5B-7101-409C-9BA6-C420E517197C}']
    { Methods & Properties }
    function Add: IXMLSPKIDataType_ds;
    function Insert(const Index: Integer): IXMLSPKIDataType_ds;

    function Get_Item(Index: Integer): IXMLSPKIDataType_ds;
    property Items[Index: Integer]: IXMLSPKIDataType_ds read Get_Item; default;
  end;

{ IXMLObjectType_ds }

  IXMLObjectType_ds = interface(IXMLNode)
    ['{D545778D-B77A-4913-939D-FDFE7666F5AC}']
    { Property Accessors }
    function Get_Id: WideString;
    function Get_MimeType: WideString;
    function Get_Encoding: WideString;
    procedure Set_Id(Value: WideString);
    procedure Set_MimeType(Value: WideString);
    procedure Set_Encoding(Value: WideString);
    { Methods & Properties }
    property Id: WideString read Get_Id write Set_Id;
    property MimeType: WideString read Get_MimeType write Set_MimeType;
    property Encoding: WideString read Get_Encoding write Set_Encoding;
  end;

{ IXMLObjectType_dsList341 }

  IXMLObjectType_dsList341 = interface(IXMLNodeCollection)
    ['{05FD2ACE-A0E6-4068-B27F-7DE124377BB6}']
    { Methods & Properties }
    function Add: IXMLObjectType_ds;
    function Insert(const Index: Integer): IXMLObjectType_ds;

    function Get_Item(Index: Integer): IXMLObjectType_ds;
    property Items[Index: Integer]: IXMLObjectType_ds read Get_Item; default;
  end;

{ I341_XMLSignature }

  I341_XMLSignature = interface(IXMLSignatureType_ds)
    ['{5252F8E4-D491-48AE-8EAF-321855666D1B}']
  end;

{ I341_XMLCtm_internacaoResumoGuia }

  I341_XMLCtm_internacaoResumoGuia = interface(IXMLNode)
    ['{BA0B5F59-CD05-4641-AF54-85CE5FEBBE61}']
    { Property Accessors }
    function Get_CabecalhoGuia: I341_XMLCt_guiaCabecalho;
    function Get_NumeroGuiaSolicitacaoInternacao: WideString;
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoInternacao;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosExecutante: I341_XMLCtm_internacaoResumoGuia_dadosExecutante;
    function Get_DadosInternacao: I341_XMLCtm_internacaoDados;
    function Get_DadosSaidaInternacao: I341_XMLCtm_internacaoDadosSaida;
    function Get_ProcedimentosExecutados: I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados;
    function Get_ValorTotal: I341_XMLCt_guiaValorTotal;
    function Get_OutrasDespesas: I341_XMLCt_outrasDespesas;
    function Get_Observacao: WideString;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_NumeroGuiaSolicitacaoInternacao(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property CabecalhoGuia: I341_XMLCt_guiaCabecalho read Get_CabecalhoGuia;
    property NumeroGuiaSolicitacaoInternacao: WideString read Get_NumeroGuiaSolicitacaoInternacao write Set_NumeroGuiaSolicitacaoInternacao;
    property DadosAutorizacao: I341_XMLCt_autorizacaoInternacao read Get_DadosAutorizacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property DadosExecutante: I341_XMLCtm_internacaoResumoGuia_dadosExecutante read Get_DadosExecutante;
    property DadosInternacao: I341_XMLCtm_internacaoDados read Get_DadosInternacao;
    property DadosSaidaInternacao: I341_XMLCtm_internacaoDadosSaida read Get_DadosSaidaInternacao;
    property ProcedimentosExecutados: I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados read Get_ProcedimentosExecutados;
    property ValorTotal: I341_XMLCt_guiaValorTotal read Get_ValorTotal;
    property OutrasDespesas: I341_XMLCt_outrasDespesas read Get_OutrasDespesas;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property AssinaturaDigitalGuia: I341_XMLSignature read Get_AssinaturaDigitalGuia;
  end;

{ I341_XMLCtm_internacaoResumoGuiaList341 }

  I341_XMLCtm_internacaoResumoGuiaList341 = interface(IXMLNodeCollection)
    ['{46DC9BA0-F88C-4560-990D-34B9E6286BCE}']
    { Methods & Properties }
    function Add: I341_XMLCtm_internacaoResumoGuia;
    function Insert(const Index: Integer): I341_XMLCtm_internacaoResumoGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_internacaoResumoGuia;
    property Items[Index: Integer]: I341_XMLCtm_internacaoResumoGuia read Get_Item; default;
  end;

{ I341_XMLCt_autorizacaoInternacao }

  I341_XMLCt_autorizacaoInternacao = interface(IXMLNode)
    ['{71FF212E-0FDA-4940-BFA9-CDED91F21FA9}']
    { Property Accessors }
    function Get_NumeroGuiaOperadora: WideString;
    function Get_DataAutorizacao: WideString;
    function Get_Senha: WideString;
    function Get_DataValidadeSenha: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataValidadeSenha(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property DataAutorizacao: WideString read Get_DataAutorizacao write Set_DataAutorizacao;
    property Senha: WideString read Get_Senha write Set_Senha;
    property DataValidadeSenha: WideString read Get_DataValidadeSenha write Set_DataValidadeSenha;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
  end;

{ I341_XMLCtm_internacaoResumoGuia_dadosExecutante }

  I341_XMLCtm_internacaoResumoGuia_dadosExecutante = interface(IXMLNode)
    ['{62255C95-8471-4786-8D8B-CCDC4ED56CFF}']
    { Property Accessors }
    function Get_ContratadoExecutante: I341_XMLCt_contratadoDados;
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
    { Methods & Properties }
    property ContratadoExecutante: I341_XMLCt_contratadoDados read Get_ContratadoExecutante;
    property CNES: WideString read Get_CNES write Set_CNES;
  end;

{ I341_XMLCtm_internacaoDados }

  I341_XMLCtm_internacaoDados = interface(IXMLNode)
    ['{8046E6C4-A244-4FCD-AFAC-65F44FC576F0}']
    { Property Accessors }
    function Get_CaraterAtendimento: WideString;
    function Get_TipoFaturamento: WideString;
    function Get_DataInicioFaturamento: WideString;
    function Get_HoraInicioFaturamento: WideString;
    function Get_DataFinalFaturamento: WideString;
    function Get_HoraFinalFaturamento: WideString;
    function Get_TipoInternacao: WideString;
    function Get_RegimeInternacao: WideString;
    function Get_Declaracoes: I341_XMLCtm_internacaoDados_declaracoesList341;
    procedure Set_CaraterAtendimento(Value: WideString);
    procedure Set_TipoFaturamento(Value: WideString);
    procedure Set_DataInicioFaturamento(Value: WideString);
    procedure Set_HoraInicioFaturamento(Value: WideString);
    procedure Set_DataFinalFaturamento(Value: WideString);
    procedure Set_HoraFinalFaturamento(Value: WideString);
    procedure Set_TipoInternacao(Value: WideString);
    procedure Set_RegimeInternacao(Value: WideString);
    { Methods & Properties }
    property CaraterAtendimento: WideString read Get_CaraterAtendimento write Set_CaraterAtendimento;
    property TipoFaturamento: WideString read Get_TipoFaturamento write Set_TipoFaturamento;
    property DataInicioFaturamento: WideString read Get_DataInicioFaturamento write Set_DataInicioFaturamento;
    property HoraInicioFaturamento: WideString read Get_HoraInicioFaturamento write Set_HoraInicioFaturamento;
    property DataFinalFaturamento: WideString read Get_DataFinalFaturamento write Set_DataFinalFaturamento;
    property HoraFinalFaturamento: WideString read Get_HoraFinalFaturamento write Set_HoraFinalFaturamento;
    property TipoInternacao: WideString read Get_TipoInternacao write Set_TipoInternacao;
    property RegimeInternacao: WideString read Get_RegimeInternacao write Set_RegimeInternacao;
    property Declaracoes: I341_XMLCtm_internacaoDados_declaracoesList341 read Get_Declaracoes;
  end;

{ I341_XMLCtm_internacaoDados_declaracoes }

  I341_XMLCtm_internacaoDados_declaracoes = interface(IXMLNode)
    ['{4CCD3BF2-249F-4DCA-A31D-BC1B1C363651}']
    { Property Accessors }
    function Get_DeclaracaoNascido: WideString;
    function Get_DiagnosticoObito: WideString;
    function Get_DeclaracaoObito: WideString;
    function Get_IndicadorDORN: WideString;
    procedure Set_DeclaracaoNascido(Value: WideString);
    procedure Set_DiagnosticoObito(Value: WideString);
    procedure Set_DeclaracaoObito(Value: WideString);
    procedure Set_IndicadorDORN(Value: WideString);
    { Methods & Properties }
    property DeclaracaoNascido: WideString read Get_DeclaracaoNascido write Set_DeclaracaoNascido;
    property DiagnosticoObito: WideString read Get_DiagnosticoObito write Set_DiagnosticoObito;
    property DeclaracaoObito: WideString read Get_DeclaracaoObito write Set_DeclaracaoObito;
    property IndicadorDORN: WideString read Get_IndicadorDORN write Set_IndicadorDORN;
  end;

{ I341_XMLCtm_internacaoDados_declaracoesList341 }

  I341_XMLCtm_internacaoDados_declaracoesList341 = interface(IXMLNodeCollection)
    ['{FD701DAD-636E-418B-99EE-1697358FD4D2}']
    { Methods & Properties }
    function Add: I341_XMLCtm_internacaoDados_declaracoes;
    function Insert(const Index: Integer): I341_XMLCtm_internacaoDados_declaracoes;

    function Get_Item(Index: Integer): I341_XMLCtm_internacaoDados_declaracoes;
    property Items[Index: Integer]: I341_XMLCtm_internacaoDados_declaracoes read Get_Item; default;
  end;

{ I341_XMLCtm_internacaoDadosSaida }

  I341_XMLCtm_internacaoDadosSaida = interface(IXMLNode)
    ['{BAC40D08-B907-4819-9FFC-5A1AA1FC5526}']
    { Property Accessors }
    function Get_Diagnostico: I341_XMLSt_texto4List341;
    function Get_IndicadorAcidente: WideString;
    function Get_MotivoEncerramento: WideString;
    procedure Set_IndicadorAcidente(Value: WideString);
    procedure Set_MotivoEncerramento(Value: WideString);
    { Methods & Properties }
    property Diagnostico: I341_XMLSt_texto4List341 read Get_Diagnostico;
    property IndicadorAcidente: WideString read Get_IndicadorAcidente write Set_IndicadorAcidente;
    property MotivoEncerramento: WideString read Get_MotivoEncerramento write Set_MotivoEncerramento;
  end;

{ I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados }

  I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados = interface(IXMLNodeCollection)
    ['{9B55AE57-E168-456D-8C22-CA30775C23F5}']
    { Property Accessors }
    function Get_ProcedimentoExecutado(Index: Integer): I341_XMLCt_procedimentoExecutadoInt;
    { Methods & Properties }
    function Add: I341_XMLCt_procedimentoExecutadoInt;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoInt;
    property ProcedimentoExecutado[Index: Integer]: I341_XMLCt_procedimentoExecutadoInt read Get_ProcedimentoExecutado; default;
  end;

{ I341_XMLCt_procedimentoExecutadoInt }

  I341_XMLCt_procedimentoExecutadoInt = interface(IXMLNode)
    ['{F650C287-ACA5-4425-A3C8-9F48D60395C1}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeExecutada: Integer;
    function Get_ViaAcesso: WideString;
    function Get_TecnicaUtilizada: WideString;
    function Get_ReducaoAcrescimo: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_IdentEquipe: I341_XMLCt_procedimentoExecutadoInt_identEquipeList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: Integer);
    procedure Set_ViaAcesso(Value: WideString);
    procedure Set_TecnicaUtilizada(Value: WideString);
    procedure Set_ReducaoAcrescimo(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property DataExecucao: WideString read Get_DataExecucao write Set_DataExecucao;
    property HoraInicial: WideString read Get_HoraInicial write Set_HoraInicial;
    property HoraFinal: WideString read Get_HoraFinal write Set_HoraFinal;
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property QuantidadeExecutada: Integer read Get_QuantidadeExecutada write Set_QuantidadeExecutada;
    property ViaAcesso: WideString read Get_ViaAcesso write Set_ViaAcesso;
    property TecnicaUtilizada: WideString read Get_TecnicaUtilizada write Set_TecnicaUtilizada;
    property ReducaoAcrescimo: WideString read Get_ReducaoAcrescimo write Set_ReducaoAcrescimo;
    property ValorUnitario: WideString read Get_ValorUnitario write Set_ValorUnitario;
    property ValorTotal: WideString read Get_ValorTotal write Set_ValorTotal;
    property IdentEquipe: I341_XMLCt_procedimentoExecutadoInt_identEquipeList341 read Get_IdentEquipe;
  end;

{ I341_XMLCt_procedimentoExecutadoInt_identEquipe }

  I341_XMLCt_procedimentoExecutadoInt_identEquipe = interface(IXMLNode)
    ['{E6473E49-2871-4DCF-895B-18E67A1AA7B2}']
    { Property Accessors }
    function Get_IdentificacaoEquipe: I341_XMLCt_identEquipe;
    { Methods & Properties }
    property IdentificacaoEquipe: I341_XMLCt_identEquipe read Get_IdentificacaoEquipe;
  end;

{ I341_XMLCt_procedimentoExecutadoInt_identEquipeList341 }

  I341_XMLCt_procedimentoExecutadoInt_identEquipeList341 = interface(IXMLNodeCollection)
    ['{C4B519EA-4F61-4991-BDC8-127CC8953289}']
    { Methods & Properties }
    function Add: I341_XMLCt_procedimentoExecutadoInt_identEquipe;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoInt_identEquipe;

    function Get_Item(Index: Integer): I341_XMLCt_procedimentoExecutadoInt_identEquipe;
    property Items[Index: Integer]: I341_XMLCt_procedimentoExecutadoInt_identEquipe read Get_Item; default;
  end;

{ I341_XMLCt_identEquipe }

  I341_XMLCt_identEquipe = interface(IXMLNode)
    ['{CB2E05EC-579E-451B-9206-C133A6923ED8}']
    { Property Accessors }
    function Get_GrauPart: WideString;
    function Get_CodProfissional: I341_XMLCt_identEquipe_codProfissional;
    function Get_NomeProf: WideString;
    function Get_Conselho: WideString;
    function Get_NumeroConselhoProfissional: WideString;
    function Get_UF: WideString;
    function Get_CBOS: WideString;
    procedure Set_GrauPart(Value: WideString);
    procedure Set_NomeProf(Value: WideString);
    procedure Set_Conselho(Value: WideString);
    procedure Set_NumeroConselhoProfissional(Value: WideString);
    procedure Set_UF(Value: WideString);
    procedure Set_CBOS(Value: WideString);
    { Methods & Properties }
    property GrauPart: WideString read Get_GrauPart write Set_GrauPart;
    property CodProfissional: I341_XMLCt_identEquipe_codProfissional read Get_CodProfissional;
    property NomeProf: WideString read Get_NomeProf write Set_NomeProf;
    property Conselho: WideString read Get_Conselho write Set_Conselho;
    property NumeroConselhoProfissional: WideString read Get_NumeroConselhoProfissional write Set_NumeroConselhoProfissional;
    property UF: WideString read Get_UF write Set_UF;
    property CBOS: WideString read Get_CBOS write Set_CBOS;
  end;

{ I341_XMLCt_identEquipe_codProfissional }

  I341_XMLCt_identEquipe_codProfissional = interface(IXMLNode)
    ['{290075AB-C9ED-44A1-84D2-8026AECF13FB}']
    { Property Accessors }
    function Get_CodigoPrestadorNaOperadora: WideString;
    function Get_CpfContratado: WideString;
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
    { Methods & Properties }
    property CodigoPrestadorNaOperadora: WideString read Get_CodigoPrestadorNaOperadora write Set_CodigoPrestadorNaOperadora;
    property CpfContratado: WideString read Get_CpfContratado write Set_CpfContratado;
  end;

{ I341_XMLCtm_honorarioIndividualGuia }

  I341_XMLCtm_honorarioIndividualGuia = interface(IXMLNode)
    ['{1FEDCD0F-2A74-45EB-83D0-2077CD0DA229}']
    { Property Accessors }
    function Get_CabecalhoGuia: I341_XMLCt_guiaCabecalho;
    function Get_GuiaSolicInternacao: WideString;
    function Get_Senha: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Beneficiario: I341_XMLCtm_honorarioIndividualGuia_beneficiario;
    function Get_LocalContratado: I341_XMLCtm_honorarioIndividualGuia_localContratado;
    function Get_DadosContratadoExecutante: I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante;
    function Get_DadosInternacao: I341_XMLCtm_honorarioIndividualGuia_dadosInternacao;
    function Get_ProcedimentosRealizados: I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados;
    function Get_Observacao: WideString;
    function Get_ValorTotalHonorarios: WideString;
    function Get_DataEmissaoGuia: WideString;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_GuiaSolicInternacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    procedure Set_ValorTotalHonorarios(Value: WideString);
    procedure Set_DataEmissaoGuia(Value: WideString);
    { Methods & Properties }
    property CabecalhoGuia: I341_XMLCt_guiaCabecalho read Get_CabecalhoGuia;
    property GuiaSolicInternacao: WideString read Get_GuiaSolicInternacao write Set_GuiaSolicInternacao;
    property Senha: WideString read Get_Senha write Set_Senha;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Beneficiario: I341_XMLCtm_honorarioIndividualGuia_beneficiario read Get_Beneficiario;
    property LocalContratado: I341_XMLCtm_honorarioIndividualGuia_localContratado read Get_LocalContratado;
    property DadosContratadoExecutante: I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante read Get_DadosContratadoExecutante;
    property DadosInternacao: I341_XMLCtm_honorarioIndividualGuia_dadosInternacao read Get_DadosInternacao;
    property ProcedimentosRealizados: I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados read Get_ProcedimentosRealizados;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property ValorTotalHonorarios: WideString read Get_ValorTotalHonorarios write Set_ValorTotalHonorarios;
    property DataEmissaoGuia: WideString read Get_DataEmissaoGuia write Set_DataEmissaoGuia;
    property AssinaturaDigitalGuia: I341_XMLSignature read Get_AssinaturaDigitalGuia;
  end;

{ I341_XMLCtm_honorarioIndividualGuiaList341 }

  I341_XMLCtm_honorarioIndividualGuiaList341 = interface(IXMLNodeCollection)
    ['{A5062A95-63E3-4F59-8A99-9A138880DF81}']
    { Methods & Properties }
    function Add: I341_XMLCtm_honorarioIndividualGuia;
    function Insert(const Index: Integer): I341_XMLCtm_honorarioIndividualGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_honorarioIndividualGuia;
    property Items[Index: Integer]: I341_XMLCtm_honorarioIndividualGuia read Get_Item; default;
  end;

{ I341_XMLCtm_honorarioIndividualGuia_beneficiario }

  I341_XMLCtm_honorarioIndividualGuia_beneficiario = interface(IXMLNode)
    ['{D257977C-435C-48AA-9668-DB6E9057A99F}']
    { Property Accessors }
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_AtendimentoRN: WideString;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_AtendimentoRN(Value: WideString);
    { Methods & Properties }
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property AtendimentoRN: WideString read Get_AtendimentoRN write Set_AtendimentoRN;
  end;

{ I341_XMLCtm_honorarioIndividualGuia_localContratado }

  I341_XMLCtm_honorarioIndividualGuia_localContratado = interface(IXMLNode)
    ['{3A51F999-30AF-4D92-BDB6-3D36F76B65F3}']
    { Property Accessors }
    function Get_CodigoContratado: I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado;
    function Get_NomeContratado: WideString;
    function Get_Cnes: WideString;
    procedure Set_NomeContratado(Value: WideString);
    procedure Set_Cnes(Value: WideString);
    { Methods & Properties }
    property CodigoContratado: I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado read Get_CodigoContratado;
    property NomeContratado: WideString read Get_NomeContratado write Set_NomeContratado;
    property Cnes: WideString read Get_Cnes write Set_Cnes;
  end;

{ I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado }

  I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado = interface(IXMLNode)
    ['{B44CFE31-3847-4C19-A7AE-145049B33106}']
    { Property Accessors }
    function Get_CodigoNaOperadora: WideString;
    function Get_CnpjLocalExecutante: WideString;
    procedure Set_CodigoNaOperadora(Value: WideString);
    procedure Set_CnpjLocalExecutante(Value: WideString);
    { Methods & Properties }
    property CodigoNaOperadora: WideString read Get_CodigoNaOperadora write Set_CodigoNaOperadora;
    property CnpjLocalExecutante: WideString read Get_CnpjLocalExecutante write Set_CnpjLocalExecutante;
  end;

{ I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante }

  I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante = interface(IXMLNode)
    ['{2A83B397-A232-4729-B8F7-510B95751946}']
    { Property Accessors }
    function Get_CodigonaOperadora: WideString;
    function Get_NomeContratadoExecutante: WideString;
    function Get_CnesContratadoExecutante: WideString;
    procedure Set_CodigonaOperadora(Value: WideString);
    procedure Set_NomeContratadoExecutante(Value: WideString);
    procedure Set_CnesContratadoExecutante(Value: WideString);
    { Methods & Properties }
    property CodigonaOperadora: WideString read Get_CodigonaOperadora write Set_CodigonaOperadora;
    property NomeContratadoExecutante: WideString read Get_NomeContratadoExecutante write Set_NomeContratadoExecutante;
    property CnesContratadoExecutante: WideString read Get_CnesContratadoExecutante write Set_CnesContratadoExecutante;
  end;

{ I341_XMLCtm_honorarioIndividualGuia_dadosInternacao }

  I341_XMLCtm_honorarioIndividualGuia_dadosInternacao = interface(IXMLNode)
    ['{2B54D1AA-E08C-4982-AFF9-659853D56D87}']
    { Property Accessors }
    function Get_DataInicioFaturamento: WideString;
    function Get_DataFimFaturamento: WideString;
    procedure Set_DataInicioFaturamento(Value: WideString);
    procedure Set_DataFimFaturamento(Value: WideString);
    { Methods & Properties }
    property DataInicioFaturamento: WideString read Get_DataInicioFaturamento write Set_DataInicioFaturamento;
    property DataFimFaturamento: WideString read Get_DataFimFaturamento write Set_DataFimFaturamento;
  end;

{ I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados }

  I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados = interface(IXMLNodeCollection)
    ['{FB89628E-EBF8-40F0-AD64-BC53D2A654C5}']
    { Property Accessors }
    function Get_ProcedimentoRealizado(Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv;
    { Methods & Properties }
    function Add: I341_XMLCt_procedimentoExecutadoHonorIndiv;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv;
    property ProcedimentoRealizado[Index: Integer]: I341_XMLCt_procedimentoExecutadoHonorIndiv read Get_ProcedimentoRealizado; default;
  end;

{ I341_XMLCt_procedimentoExecutadoHonorIndiv }

  I341_XMLCt_procedimentoExecutadoHonorIndiv = interface(IXMLNode)
    ['{C634D677-5370-4963-92C2-591A1FFBF0E3}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeExecutada: Integer;
    function Get_ViaAcesso: WideString;
    function Get_TecnicaUtilizada: WideString;
    function Get_ReducaoAcrescimo: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_Profissionais: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: Integer);
    procedure Set_ViaAcesso(Value: WideString);
    procedure Set_TecnicaUtilizada(Value: WideString);
    procedure Set_ReducaoAcrescimo(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property DataExecucao: WideString read Get_DataExecucao write Set_DataExecucao;
    property HoraInicial: WideString read Get_HoraInicial write Set_HoraInicial;
    property HoraFinal: WideString read Get_HoraFinal write Set_HoraFinal;
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property QuantidadeExecutada: Integer read Get_QuantidadeExecutada write Set_QuantidadeExecutada;
    property ViaAcesso: WideString read Get_ViaAcesso write Set_ViaAcesso;
    property TecnicaUtilizada: WideString read Get_TecnicaUtilizada write Set_TecnicaUtilizada;
    property ReducaoAcrescimo: WideString read Get_ReducaoAcrescimo write Set_ReducaoAcrescimo;
    property ValorUnitario: WideString read Get_ValorUnitario write Set_ValorUnitario;
    property ValorTotal: WideString read Get_ValorTotal write Set_ValorTotal;
    property Profissionais: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341 read Get_Profissionais;
  end;

{ I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais }

  I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais = interface(IXMLNode)
    ['{817629EA-6D03-4AE9-B0C4-BEE0CA93A4FD}']
    { Property Accessors }
    function Get_GrauParticipacao: WideString;
    function Get_CodProfissional: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional;
    function Get_NomeProfissional: WideString;
    function Get_ConselhoProfissional: WideString;
    function Get_NumeroConselhoProfissional: WideString;
    function Get_UF: WideString;
    function Get_CBO: WideString;
    procedure Set_GrauParticipacao(Value: WideString);
    procedure Set_NomeProfissional(Value: WideString);
    procedure Set_ConselhoProfissional(Value: WideString);
    procedure Set_NumeroConselhoProfissional(Value: WideString);
    procedure Set_UF(Value: WideString);
    procedure Set_CBO(Value: WideString);
    { Methods & Properties }
    property GrauParticipacao: WideString read Get_GrauParticipacao write Set_GrauParticipacao;
    property CodProfissional: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional read Get_CodProfissional;
    property NomeProfissional: WideString read Get_NomeProfissional write Set_NomeProfissional;
    property ConselhoProfissional: WideString read Get_ConselhoProfissional write Set_ConselhoProfissional;
    property NumeroConselhoProfissional: WideString read Get_NumeroConselhoProfissional write Set_NumeroConselhoProfissional;
    property UF: WideString read Get_UF write Set_UF;
    property CBO: WideString read Get_CBO write Set_CBO;
  end;

{ I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341 }

  I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341 = interface(IXMLNodeCollection)
    ['{EF935F74-6CA3-4021-8284-C586841D756E}']
    { Methods & Properties }
    function Add: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;

    function Get_Item(Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
    property Items[Index: Integer]: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais read Get_Item; default;
  end;

{ I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional }

  I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional = interface(IXMLNode)
    ['{AFF89C6D-E184-46CF-BA6B-326A9DD0EF59}']
    { Property Accessors }
    function Get_CodigoPrestadorNaOperadora: WideString;
    function Get_CpfContratado: WideString;
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
    { Methods & Properties }
    property CodigoPrestadorNaOperadora: WideString read Get_CodigoPrestadorNaOperadora write Set_CodigoPrestadorNaOperadora;
    property CpfContratado: WideString read Get_CpfContratado write Set_CpfContratado;
  end;

{ I341_XMLCtm_consultaGuia }

  I341_XMLCtm_consultaGuia = interface(IXMLNode)
    ['{8C71D352-2287-450A-9C1B-DA2EBC65628B}']
    { Property Accessors }
    function Get_CabecalhoConsulta: I341_XMLCt_guiaCabecalho;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_ContratadoExecutante: I341_XMLCtm_consultaGuia_contratadoExecutante;
    function Get_ProfissionalExecutante: I341_XMLCt_contratadoProfissionalDados;
    function Get_IndicacaoAcidente: WideString;
    function Get_DadosAtendimento: I341_XMLCtm_consultaAtendimento;
    function Get_Observacao: WideString;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_IndicacaoAcidente(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property CabecalhoConsulta: I341_XMLCt_guiaCabecalho read Get_CabecalhoConsulta;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property ContratadoExecutante: I341_XMLCtm_consultaGuia_contratadoExecutante read Get_ContratadoExecutante;
    property ProfissionalExecutante: I341_XMLCt_contratadoProfissionalDados read Get_ProfissionalExecutante;
    property IndicacaoAcidente: WideString read Get_IndicacaoAcidente write Set_IndicacaoAcidente;
    property DadosAtendimento: I341_XMLCtm_consultaAtendimento read Get_DadosAtendimento;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property AssinaturaDigitalGuia: I341_XMLSignature read Get_AssinaturaDigitalGuia;
  end;

{ I341_XMLCtm_consultaGuiaList341 }

  I341_XMLCtm_consultaGuiaList341 = interface(IXMLNodeCollection)
    ['{E15A444A-D26E-45C9-BFD0-173465EA598A}']
    { Methods & Properties }
    function Add: I341_XMLCtm_consultaGuia;
    function Insert(const Index: Integer): I341_XMLCtm_consultaGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_consultaGuia;
    property Items[Index: Integer]: I341_XMLCtm_consultaGuia read Get_Item; default;
  end;

{ I341_XMLCtm_consultaGuia_contratadoExecutante }

  I341_XMLCtm_consultaGuia_contratadoExecutante = interface(I341_XMLCt_contratadoDados)
    ['{34AFA539-02AA-40BE-9333-D5B631DE00AA}']
    { Property Accessors }
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
    { Methods & Properties }
    property CNES: WideString read Get_CNES write Set_CNES;
  end;

{ I341_XMLCtm_consultaAtendimento }

  I341_XMLCtm_consultaAtendimento = interface(IXMLNode)
    ['{1353B266-F74F-4EF7-9F12-28A665E7CCB2}']
    { Property Accessors }
    function Get_DataAtendimento: WideString;
    function Get_TipoConsulta: WideString;
    function Get_Procedimento: I341_XMLCtm_consultaAtendimento_procedimento;
    procedure Set_DataAtendimento(Value: WideString);
    procedure Set_TipoConsulta(Value: WideString);
    { Methods & Properties }
    property DataAtendimento: WideString read Get_DataAtendimento write Set_DataAtendimento;
    property TipoConsulta: WideString read Get_TipoConsulta write Set_TipoConsulta;
    property Procedimento: I341_XMLCtm_consultaAtendimento_procedimento read Get_Procedimento;
  end;

{ I341_XMLCtm_consultaAtendimento_procedimento }

  I341_XMLCtm_consultaAtendimento_procedimento = interface(IXMLNode)
    ['{FACE49ED-900C-4B5A-A8DF-33311BF4A2DC}']
    { Property Accessors }
    function Get_CodigoTabela: WideString;
    function Get_CodigoProcedimento: WideString;
    function Get_ValorProcedimento: WideString;
    procedure Set_CodigoTabela(Value: WideString);
    procedure Set_CodigoProcedimento(Value: WideString);
    procedure Set_ValorProcedimento(Value: WideString);
    { Methods & Properties }
    property CodigoTabela: WideString read Get_CodigoTabela write Set_CodigoTabela;
    property CodigoProcedimento: WideString read Get_CodigoProcedimento write Set_CodigoProcedimento;
    property ValorProcedimento: WideString read Get_ValorProcedimento write Set_ValorProcedimento;
  end;

{ I341_XMLCto_guiaOdontologia }

  I341_XMLCto_guiaOdontologia = interface(IXMLNode)
    ['{7623598B-9136-4E86-9FE3-820BBB5260C4}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaPrincipal: WideString;
    function Get_DataAutorizacao: WideString;
    function Get_SenhaAutorizacao: WideString;
    function Get_ValidadeSenha: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_PlanoBeneficiario: WideString;
    function Get_NomeEmpresa: WideString;
    function Get_NumeroTelefone: WideString;
    function Get_NomeTitular: WideString;
    function Get_DadosProfissionaisResponsaveis: I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis;
    function Get_ProcedimentosExecutados: I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341;
    function Get_DataTerminoTrat: WideString;
    function Get_TipoAtendimento: WideString;
    function Get_TipoFaturamento: WideString;
    function Get_QtdTotalUS: WideString;
    function Get_ValorTotalProc: WideString;
    function Get_ValorTotalFranquia: WideString;
    function Get_Observacao: WideString;
    function Get_OdontoInicial: I341_XMLCto_anexoSituacaoInicialnaGTO;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaPrincipal(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
    procedure Set_SenhaAutorizacao(Value: WideString);
    procedure Set_ValidadeSenha(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_PlanoBeneficiario(Value: WideString);
    procedure Set_NomeEmpresa(Value: WideString);
    procedure Set_NumeroTelefone(Value: WideString);
    procedure Set_NomeTitular(Value: WideString);
    procedure Set_DataTerminoTrat(Value: WideString);
    procedure Set_TipoAtendimento(Value: WideString);
    procedure Set_TipoFaturamento(Value: WideString);
    procedure Set_QtdTotalUS(Value: WideString);
    procedure Set_ValorTotalProc(Value: WideString);
    procedure Set_ValorTotalFranquia(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaPrincipal: WideString read Get_NumeroGuiaPrincipal write Set_NumeroGuiaPrincipal;
    property DataAutorizacao: WideString read Get_DataAutorizacao write Set_DataAutorizacao;
    property SenhaAutorizacao: WideString read Get_SenhaAutorizacao write Set_SenhaAutorizacao;
    property ValidadeSenha: WideString read Get_ValidadeSenha write Set_ValidadeSenha;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property PlanoBeneficiario: WideString read Get_PlanoBeneficiario write Set_PlanoBeneficiario;
    property NomeEmpresa: WideString read Get_NomeEmpresa write Set_NomeEmpresa;
    property NumeroTelefone: WideString read Get_NumeroTelefone write Set_NumeroTelefone;
    property NomeTitular: WideString read Get_NomeTitular write Set_NomeTitular;
    property DadosProfissionaisResponsaveis: I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis read Get_DadosProfissionaisResponsaveis;
    property ProcedimentosExecutados: I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341 read Get_ProcedimentosExecutados;
    property DataTerminoTrat: WideString read Get_DataTerminoTrat write Set_DataTerminoTrat;
    property TipoAtendimento: WideString read Get_TipoAtendimento write Set_TipoAtendimento;
    property TipoFaturamento: WideString read Get_TipoFaturamento write Set_TipoFaturamento;
    property QtdTotalUS: WideString read Get_QtdTotalUS write Set_QtdTotalUS;
    property ValorTotalProc: WideString read Get_ValorTotalProc write Set_ValorTotalProc;
    property ValorTotalFranquia: WideString read Get_ValorTotalFranquia write Set_ValorTotalFranquia;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property OdontoInicial: I341_XMLCto_anexoSituacaoInicialnaGTO read Get_OdontoInicial;
    property AssinaturaDigitalGuia: I341_XMLSignature read Get_AssinaturaDigitalGuia;
  end;

{ I341_XMLCto_guiaOdontologiaList341 }

  I341_XMLCto_guiaOdontologiaList341 = interface(IXMLNodeCollection)
    ['{8D6A4F5C-29F7-432C-9795-3B52348186EE}']
    { Methods & Properties }
    function Add: I341_XMLCto_guiaOdontologia;
    function Insert(const Index: Integer): I341_XMLCto_guiaOdontologia;

    function Get_Item(Index: Integer): I341_XMLCto_guiaOdontologia;
    property Items[Index: Integer]: I341_XMLCto_guiaOdontologia read Get_Item; default;
  end;

{ I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis }

  I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis = interface(IXMLNode)
    ['{D2431D42-BC04-4E59-B10E-17E49BEAAA10}']
    { Property Accessors }
    function Get_NomeProfSolic: WideString;
    function Get_CroSolic: WideString;
    function Get_UfSolic: WideString;
    function Get_CbosSolic: WideString;
    function Get_CodigoProfExec: WideString;
    function Get_NomeProfExec: WideString;
    function Get_CroExec: WideString;
    function Get_UfExec: WideString;
    function Get_CnesExec: WideString;
    function Get_NomeProfExec2: WideString;
    function Get_CroExec2: WideString;
    function Get_UfExec2: WideString;
    function Get_CbosExec2: WideString;
    procedure Set_NomeProfSolic(Value: WideString);
    procedure Set_CroSolic(Value: WideString);
    procedure Set_UfSolic(Value: WideString);
    procedure Set_CbosSolic(Value: WideString);
    procedure Set_CodigoProfExec(Value: WideString);
    procedure Set_NomeProfExec(Value: WideString);
    procedure Set_CroExec(Value: WideString);
    procedure Set_UfExec(Value: WideString);
    procedure Set_CnesExec(Value: WideString);
    procedure Set_NomeProfExec2(Value: WideString);
    procedure Set_CroExec2(Value: WideString);
    procedure Set_UfExec2(Value: WideString);
    procedure Set_CbosExec2(Value: WideString);
    { Methods & Properties }
    property NomeProfSolic: WideString read Get_NomeProfSolic write Set_NomeProfSolic;
    property CroSolic: WideString read Get_CroSolic write Set_CroSolic;
    property UfSolic: WideString read Get_UfSolic write Set_UfSolic;
    property CbosSolic: WideString read Get_CbosSolic write Set_CbosSolic;
    property CodigoProfExec: WideString read Get_CodigoProfExec write Set_CodigoProfExec;
    property NomeProfExec: WideString read Get_NomeProfExec write Set_NomeProfExec;
    property CroExec: WideString read Get_CroExec write Set_CroExec;
    property UfExec: WideString read Get_UfExec write Set_UfExec;
    property CnesExec: WideString read Get_CnesExec write Set_CnesExec;
    property NomeProfExec2: WideString read Get_NomeProfExec2 write Set_NomeProfExec2;
    property CroExec2: WideString read Get_CroExec2 write Set_CroExec2;
    property UfExec2: WideString read Get_UfExec2 write Set_UfExec2;
    property CbosExec2: WideString read Get_CbosExec2 write Set_CbosExec2;
  end;

{ I341_XMLCto_guiaOdontologia_procedimentosExecutados }

  I341_XMLCto_guiaOdontologia_procedimentosExecutados = interface(IXMLNode)
    ['{BCB990E0-72B0-41DF-91AD-CB66335569DD}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_ProcSolic: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_QtdProc: Integer;
    function Get_QtdUS: WideString;
    function Get_ValorProc: WideString;
    function Get_ValorFranquia: WideString;
    function Get_Autorizado: Boolean;
    function Get_DataRealizacao: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_QtdUS(Value: WideString);
    procedure Set_ValorProc(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_Autorizado(Value: Boolean);
    procedure Set_DataRealizacao(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property ProcSolic: I341_XMLCt_procedimentoDados read Get_ProcSolic;
    property DenteRegiao: I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao read Get_DenteRegiao;
    property DenteFace: WideString read Get_DenteFace write Set_DenteFace;
    property QtdProc: Integer read Get_QtdProc write Set_QtdProc;
    property QtdUS: WideString read Get_QtdUS write Set_QtdUS;
    property ValorProc: WideString read Get_ValorProc write Set_ValorProc;
    property ValorFranquia: WideString read Get_ValorFranquia write Set_ValorFranquia;
    property Autorizado: Boolean read Get_Autorizado write Set_Autorizado;
    property DataRealizacao: WideString read Get_DataRealizacao write Set_DataRealizacao;
  end;

{ I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341 }

  I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341 = interface(IXMLNodeCollection)
    ['{C5BC8614-EDA0-4CBB-BD51-3789C3D4F33C}']
    { Methods & Properties }
    function Add: I341_XMLCto_guiaOdontologia_procedimentosExecutados;
    function Insert(const Index: Integer): I341_XMLCto_guiaOdontologia_procedimentosExecutados;

    function Get_Item(Index: Integer): I341_XMLCto_guiaOdontologia_procedimentosExecutados;
    property Items[Index: Integer]: I341_XMLCto_guiaOdontologia_procedimentosExecutados read Get_Item; default;
  end;

{ I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao }

  I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao = interface(IXMLNode)
    ['{0F138B55-187B-4EA9-A5E3-091D0CC9085E}']
    { Property Accessors }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
    { Methods & Properties }
    property CodDente: WideString read Get_CodDente write Set_CodDente;
    property CodRegiao: WideString read Get_CodRegiao write Set_CodRegiao;
  end;

{ I341_XMLCto_anexoSituacaoInicialnaGTO }

  I341_XMLCto_anexoSituacaoInicialnaGTO = interface(IXMLNode)
    ['{C662D102-4CF4-4BBC-BA34-279A51E3D084}']
    { Property Accessors }
    function Get_NumeroGuiaAnexo: WideString;
    function Get_NumeroGuiaReferenciada: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Ct_situacaoInicial: I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial;
    procedure Set_NumeroGuiaAnexo(Value: WideString);
    procedure Set_NumeroGuiaReferenciada(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaAnexo: WideString read Get_NumeroGuiaAnexo write Set_NumeroGuiaAnexo;
    property NumeroGuiaReferenciada: WideString read Get_NumeroGuiaReferenciada write Set_NumeroGuiaReferenciada;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Ct_situacaoInicial: I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial read Get_Ct_situacaoInicial;
  end;

{ I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial }

  I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial = interface(IXMLNode)
    ['{B089D0A9-6002-48C0-8CA6-4515E3ABBE4B}']
    { Property Accessors }
    function Get_SituacaoClinica: I341_XMLCt_situacaoClinica;
    function Get_DoencaPeriodontal: Boolean;
    function Get_AlteracaoTecidoMole: Boolean;
    function Get_Observacao: WideString;
    procedure Set_DoencaPeriodontal(Value: Boolean);
    procedure Set_AlteracaoTecidoMole(Value: Boolean);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property SituacaoClinica: I341_XMLCt_situacaoClinica read Get_SituacaoClinica;
    property DoencaPeriodontal: Boolean read Get_DoencaPeriodontal write Set_DoencaPeriodontal;
    property AlteracaoTecidoMole: Boolean read Get_AlteracaoTecidoMole write Set_AlteracaoTecidoMole;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
  end;

{ I341_XMLCt_anexoLote }

  I341_XMLCt_anexoLote = interface(IXMLNode)
    ['{4064DA7B-2765-44A1-84F9-8DF76E5FD895}']
    { Property Accessors }
    function Get_NumeroLote: WideString;
    function Get_AnexosGuiasTISS: I341_XMLCt_anexoLote_AnexosGuiasTISS;
    procedure Set_NumeroLote(Value: WideString);
    { Methods & Properties }
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property AnexosGuiasTISS: I341_XMLCt_anexoLote_AnexosGuiasTISS read Get_AnexosGuiasTISS;
  end;

{ I341_XMLCt_anexoLote_AnexosGuiasTISS }

  I341_XMLCt_anexoLote_AnexosGuiasTISS = interface(IXMLNode)
    ['{F457F1B0-8180-4536-AFC1-BC59D56528A8}']
    { Property Accessors }
    function Get_AnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341;
    function Get_AnexoSolicitacaoRadio: I341_XMLCtm_anexoSolicitacaoRadio;
    function Get_AnexoSolicitacaoQuimio: I341_XMLCtm_anexoSolicitacaoQuimio;
    function Get_AnexoSolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
    { Methods & Properties }
    property AnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341 read Get_AnexoSituacaoInicial;
    property AnexoSolicitacaoRadio: I341_XMLCtm_anexoSolicitacaoRadio read Get_AnexoSolicitacaoRadio;
    property AnexoSolicitacaoQuimio: I341_XMLCtm_anexoSolicitacaoQuimio read Get_AnexoSolicitacaoQuimio;
    property AnexoSolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME read Get_AnexoSolicitacaoOPME;
  end;

{ I341_XMLCtm_anexoSolicitacaoRadio }

  I341_XMLCtm_anexoSolicitacaoRadio = interface(IXMLNode)
    ['{984116E5-719B-4955-84F1-529B3880EEF3}']
    { Property Accessors }
    function Get_CabecalhoAnexo: I341_XMLCt_anexoCabecalho;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiarioRadio;
    function Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_DiagnosticoOncologicoRadio: I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio;
    function Get_TratamentosAnteriores: I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores;
    function Get_NumeroCampos: Integer;
    function Get_DoseCampo: Integer;
    function Get_DoseTotal: Integer;
    function Get_NrDias: Integer;
    function Get_DtPrevistaInicio: WideString;
    function Get_Observacao: WideString;
    procedure Set_NumeroCampos(Value: Integer);
    procedure Set_DoseCampo(Value: Integer);
    procedure Set_DoseTotal(Value: Integer);
    procedure Set_NrDias(Value: Integer);
    procedure Set_DtPrevistaInicio(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property CabecalhoAnexo: I341_XMLCt_anexoCabecalho read Get_CabecalhoAnexo;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiarioRadio read Get_DadosComplementaresBeneficiario;
    property MedicoSolicitante: I341_XMLCtm_anexoSolicitante read Get_MedicoSolicitante;
    property DiagnosticoOncologicoRadio: I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio read Get_DiagnosticoOncologicoRadio;
    property TratamentosAnteriores: I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores read Get_TratamentosAnteriores;
    property NumeroCampos: Integer read Get_NumeroCampos write Set_NumeroCampos;
    property DoseCampo: Integer read Get_DoseCampo write Set_DoseCampo;
    property DoseTotal: Integer read Get_DoseTotal write Set_DoseTotal;
    property NrDias: Integer read Get_NrDias write Set_NrDias;
    property DtPrevistaInicio: WideString read Get_DtPrevistaInicio write Set_DtPrevistaInicio;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
  end;

{ I341_XMLCt_anexoCabecalho }

  I341_XMLCt_anexoCabecalho = interface(IXMLNode)
    ['{1DA00A2C-ECF0-477A-9DD4-1AA29D771C34}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaAnexo: WideString;
    function Get_NumeroGuiaReferenciada: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_DataSolicitacao: WideString;
    function Get_Senha: WideString;
    function Get_DataAutorizacao: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaAnexo(Value: WideString);
    procedure Set_NumeroGuiaReferenciada(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaAnexo: WideString read Get_NumeroGuiaAnexo write Set_NumeroGuiaAnexo;
    property NumeroGuiaReferenciada: WideString read Get_NumeroGuiaReferenciada write Set_NumeroGuiaReferenciada;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property DataSolicitacao: WideString read Get_DataSolicitacao write Set_DataSolicitacao;
    property Senha: WideString read Get_Senha write Set_Senha;
    property DataAutorizacao: WideString read Get_DataAutorizacao write Set_DataAutorizacao;
  end;

{ I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio }

  I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio = interface(IXMLNode)
    ['{66239CFD-E18E-4FA8-A152-9CC9134A33E6}']
    { Property Accessors }
    function Get_DiagRadio: I341_XMLCt_diagnosticoOncologico;
    function Get_DiagnosticoImagem: WideString;
    procedure Set_DiagnosticoImagem(Value: WideString);
    { Methods & Properties }
    property DiagRadio: I341_XMLCt_diagnosticoOncologico read Get_DiagRadio;
    property DiagnosticoImagem: WideString read Get_DiagnosticoImagem write Set_DiagnosticoImagem;
  end;

{ I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores }

  I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores = interface(IXMLNode)
    ['{EC24D0A0-35F2-4127-88CA-778E6CE2B842}']
    { Property Accessors }
    function Get_Cirurgia: WideString;
    function Get_Datacirurgia: WideString;
    function Get_Quimioterapia: WideString;
    function Get_DataQuimioterapia: WideString;
    procedure Set_Cirurgia(Value: WideString);
    procedure Set_Datacirurgia(Value: WideString);
    procedure Set_Quimioterapia(Value: WideString);
    procedure Set_DataQuimioterapia(Value: WideString);
    { Methods & Properties }
    property Cirurgia: WideString read Get_Cirurgia write Set_Cirurgia;
    property Datacirurgia: WideString read Get_Datacirurgia write Set_Datacirurgia;
    property Quimioterapia: WideString read Get_Quimioterapia write Set_Quimioterapia;
    property DataQuimioterapia: WideString read Get_DataQuimioterapia write Set_DataQuimioterapia;
  end;

{ I341_XMLCtm_anexoSolicitacaoQuimio }

  I341_XMLCtm_anexoSolicitacaoQuimio = interface(IXMLNode)
    ['{9367B987-649F-45B0-B56C-9689105551D2}']
    { Property Accessors }
    function Get_CabecalhoAnexo: I341_XMLCt_anexoCabecalho;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiario;
    function Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_DiagnosticoOncologicoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia;
    function Get_DrogasSolicitadas: I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas;
    function Get_TratamentosAnteriores: I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores;
    function Get_NumeroCiclos: Integer;
    function Get_CicloAtual: Integer;
    function Get_DiasCicloAtual: Integer;
    function Get_IntervaloCiclos: Integer;
    function Get_Observacao: WideString;
    procedure Set_NumeroCiclos(Value: Integer);
    procedure Set_CicloAtual(Value: Integer);
    procedure Set_DiasCicloAtual(Value: Integer);
    procedure Set_IntervaloCiclos(Value: Integer);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property CabecalhoAnexo: I341_XMLCt_anexoCabecalho read Get_CabecalhoAnexo;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiario read Get_DadosComplementaresBeneficiario;
    property MedicoSolicitante: I341_XMLCtm_anexoSolicitante read Get_MedicoSolicitante;
    property DiagnosticoOncologicoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia read Get_DiagnosticoOncologicoQuimioterapia;
    property DrogasSolicitadas: I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas read Get_DrogasSolicitadas;
    property TratamentosAnteriores: I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores read Get_TratamentosAnteriores;
    property NumeroCiclos: Integer read Get_NumeroCiclos write Set_NumeroCiclos;
    property CicloAtual: Integer read Get_CicloAtual write Set_CicloAtual;
    property DiasCicloAtual: Integer read Get_DiasCicloAtual write Set_DiasCicloAtual;
    property IntervaloCiclos: Integer read Get_IntervaloCiclos write Set_IntervaloCiclos;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
  end;

{ I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia }

  I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia = interface(IXMLNode)
    ['{0EE70EC6-BEB9-49A0-9725-1681A467A706}']
    { Property Accessors }
    function Get_DiagQuimio: I341_XMLCt_diagnosticoOncologico;
    function Get_Tumor: WideString;
    function Get_Nodulo: WideString;
    function Get_Metastase: WideString;
    function Get_TipoQuimioterapia: WideString;
    function Get_PlanoTerapeutico: WideString;
    procedure Set_Tumor(Value: WideString);
    procedure Set_Nodulo(Value: WideString);
    procedure Set_Metastase(Value: WideString);
    procedure Set_TipoQuimioterapia(Value: WideString);
    procedure Set_PlanoTerapeutico(Value: WideString);
    { Methods & Properties }
    property DiagQuimio: I341_XMLCt_diagnosticoOncologico read Get_DiagQuimio;
    property Tumor: WideString read Get_Tumor write Set_Tumor;
    property Nodulo: WideString read Get_Nodulo write Set_Nodulo;
    property Metastase: WideString read Get_Metastase write Set_Metastase;
    property TipoQuimioterapia: WideString read Get_TipoQuimioterapia write Set_TipoQuimioterapia;
    property PlanoTerapeutico: WideString read Get_PlanoTerapeutico write Set_PlanoTerapeutico;
  end;

{ I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas }

  I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas = interface(IXMLNodeCollection)
    ['{37D0D09E-859F-407A-82B8-C28AC5AE3E5C}']
    { Property Accessors }
    function Get_DrogaSolicitada(Index: Integer): I341_XMLCt_drogasSolicitadas;
    { Methods & Properties }
    function Add: I341_XMLCt_drogasSolicitadas;
    function Insert(const Index: Integer): I341_XMLCt_drogasSolicitadas;
    property DrogaSolicitada[Index: Integer]: I341_XMLCt_drogasSolicitadas read Get_DrogaSolicitada; default;
  end;

{ I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores }

  I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores = interface(IXMLNode)
    ['{2AF2E2C9-3EDC-41B2-9F05-61FC5E0EB34F}']
    { Property Accessors }
    function Get_Cirurgia: WideString;
    function Get_Datacirurgia: WideString;
    function Get_AreaIrradiada: WideString;
    function Get_DataIrradiacao: WideString;
    procedure Set_Cirurgia(Value: WideString);
    procedure Set_Datacirurgia(Value: WideString);
    procedure Set_AreaIrradiada(Value: WideString);
    procedure Set_DataIrradiacao(Value: WideString);
    { Methods & Properties }
    property Cirurgia: WideString read Get_Cirurgia write Set_Cirurgia;
    property Datacirurgia: WideString read Get_Datacirurgia write Set_Datacirurgia;
    property AreaIrradiada: WideString read Get_AreaIrradiada write Set_AreaIrradiada;
    property DataIrradiacao: WideString read Get_DataIrradiacao write Set_DataIrradiacao;
  end;

{ I341_XMLCtm_anexoSolicitacaoOPME }

  I341_XMLCtm_anexoSolicitacaoOPME = interface(IXMLNode)
    ['{3D4DBCE1-9F48-4CD4-88E4-8303C946F4BB}']
    { Property Accessors }
    function Get_CabecalhoAnexo: I341_XMLCt_anexoCabecalho;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_ProfissionalSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_JustificativaTecnica: WideString;
    function Get_EspecificacaoMaterial: WideString;
    function Get_OpmeSolicitadas: I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas;
    function Get_Observacao: WideString;
    procedure Set_JustificativaTecnica(Value: WideString);
    procedure Set_EspecificacaoMaterial(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property CabecalhoAnexo: I341_XMLCt_anexoCabecalho read Get_CabecalhoAnexo;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property ProfissionalSolicitante: I341_XMLCtm_anexoSolicitante read Get_ProfissionalSolicitante;
    property JustificativaTecnica: WideString read Get_JustificativaTecnica write Set_JustificativaTecnica;
    property EspecificacaoMaterial: WideString read Get_EspecificacaoMaterial write Set_EspecificacaoMaterial;
    property OpmeSolicitadas: I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas read Get_OpmeSolicitadas;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
  end;

{ I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas }

  I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas = interface(IXMLNodeCollection)
    ['{05FB15C4-32E5-456A-A94C-010B77956C29}']
    { Property Accessors }
    function Get_OpmeSolicitada(Index: Integer): I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
    { Methods & Properties }
    function Add: I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
    function Insert(const Index: Integer): I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
    property OpmeSolicitada[Index: Integer]: I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada read Get_OpmeSolicitada; default;
  end;

{ I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada }

  I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada = interface(IXMLNode)
    ['{A06E3ACA-0AF8-417C-BB9F-52EE957D6668}']
    { Property Accessors }
    function Get_IdentificacaoOPME: I341_XMLCt_procedimentoDados;
    function Get_OpcaoFabricante: WideString;
    function Get_QuantidadeSolicitada: Integer;
    function Get_ValorSolicitado: WideString;
    function Get_RegistroANVISA: WideString;
    function Get_CodigoRefFabricante: WideString;
    function Get_AutorizacaoFuncionamento: WideString;
    procedure Set_OpcaoFabricante(Value: WideString);
    procedure Set_QuantidadeSolicitada(Value: Integer);
    procedure Set_ValorSolicitado(Value: WideString);
    procedure Set_RegistroANVISA(Value: WideString);
    procedure Set_CodigoRefFabricante(Value: WideString);
    procedure Set_AutorizacaoFuncionamento(Value: WideString);
    { Methods & Properties }
    property IdentificacaoOPME: I341_XMLCt_procedimentoDados read Get_IdentificacaoOPME;
    property OpcaoFabricante: WideString read Get_OpcaoFabricante write Set_OpcaoFabricante;
    property QuantidadeSolicitada: Integer read Get_QuantidadeSolicitada write Set_QuantidadeSolicitada;
    property ValorSolicitado: WideString read Get_ValorSolicitado write Set_ValorSolicitado;
    property RegistroANVISA: WideString read Get_RegistroANVISA write Set_RegistroANVISA;
    property CodigoRefFabricante: WideString read Get_CodigoRefFabricante write Set_CodigoRefFabricante;
    property AutorizacaoFuncionamento: WideString read Get_AutorizacaoFuncionamento write Set_AutorizacaoFuncionamento;
  end;

{ I341_XMLCt_demonstrativoSolicitacao }

  I341_XMLCt_demonstrativoSolicitacao = interface(IXMLNode)
    ['{A450C84E-253F-4BF1-9DEC-35A0350B3D63}']
    { Property Accessors }
    function Get_DemonstrativoPagamento: I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento;
    function Get_DemonstrativoAnalise: I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise;
    { Methods & Properties }
    property DemonstrativoPagamento: I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento read Get_DemonstrativoPagamento;
    property DemonstrativoAnalise: I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise read Get_DemonstrativoAnalise;
  end;

{ I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento }

  I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento = interface(IXMLNode)
    ['{82BEDCDB-393E-4AAA-8864-19404B5A56A9}']
    { Property Accessors }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_DataSolicitacao: WideString;
    function Get_TipoDemonstrativo: WideString;
    function Get_Periodo: I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo;
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_TipoDemonstrativo(Value: WideString);
    { Methods & Properties }
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property DataSolicitacao: WideString read Get_DataSolicitacao write Set_DataSolicitacao;
    property TipoDemonstrativo: WideString read Get_TipoDemonstrativo write Set_TipoDemonstrativo;
    property Periodo: I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo read Get_Periodo;
  end;

{ I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo }

  I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo = interface(IXMLNode)
    ['{E9B4C3F6-B5A5-4122-BBB5-7C365314B7C0}']
    { Property Accessors }
    function Get_DataPagamento: WideString;
    function Get_Competencia: WideString;
    procedure Set_DataPagamento(Value: WideString);
    procedure Set_Competencia(Value: WideString);
    { Methods & Properties }
    property DataPagamento: WideString read Get_DataPagamento write Set_DataPagamento;
    property Competencia: WideString read Get_Competencia write Set_Competencia;
  end;

{ I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise }

  I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise = interface(IXMLNode)
    ['{7519108E-3017-42A6-A06D-FA9EEE085CF7}']
    { Property Accessors }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_DataSolicitacao: WideString;
    function Get_Protocolos: I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos;
    procedure Set_DataSolicitacao(Value: WideString);
    { Methods & Properties }
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property DataSolicitacao: WideString read Get_DataSolicitacao write Set_DataSolicitacao;
    property Protocolos: I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos read Get_Protocolos;
  end;

{ I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos }

  I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos = interface(IXMLNodeCollection)
    ['{860D5161-D077-46C6-AB64-1AE40137246A}']
    { Property Accessors }
    function Get_NumeroProtocolo(Index: Integer): WideString;
    { Methods & Properties }
    function Add(const NumeroProtocolo: WideString): IXMLNode;
    function Insert(const Index: Integer; const NumeroProtocolo: WideString): IXMLNode;
    property NumeroProtocolo[Index: Integer]: WideString read Get_NumeroProtocolo; default;
  end;

{ I341_XMLCt_protocoloSolicitacaoStatus }

  I341_XMLCt_protocoloSolicitacaoStatus = interface(IXMLNode)
    ['{91E2B068-0238-4CA2-86D9-90762D1BCD26}']
    { Property Accessors }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroProtocolo: WideString;
    procedure Set_NumeroProtocolo(Value: WideString);
    { Methods & Properties }
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
  end;

{ I341_XMLCtm_solicitacaoLote }

  I341_XMLCtm_solicitacaoLote = interface(IXMLNode)
    ['{8EB49853-BDFC-4EE2-B1B1-33749B532C93}']
    { Property Accessors }
    function Get_SolicitacaoSPSADT: I341_XMLCtm_spsadtSolicitacaoGuia;
    function Get_SolicitacaoInternacao: I341_XMLCtm_internacaoSolicitacaoGuia;
    function Get_SolicitacaoProrrogacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia;
    function Get_SolicitacaoOdontologia: I341_XMLCto_odontoSolicitacaoGuia;
    { Methods & Properties }
    property SolicitacaoSPSADT: I341_XMLCtm_spsadtSolicitacaoGuia read Get_SolicitacaoSPSADT;
    property SolicitacaoInternacao: I341_XMLCtm_internacaoSolicitacaoGuia read Get_SolicitacaoInternacao;
    property SolicitacaoProrrogacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia read Get_SolicitacaoProrrogacao;
    property SolicitacaoOdontologia: I341_XMLCto_odontoSolicitacaoGuia read Get_SolicitacaoOdontologia;
  end;

{ I341_XMLCtm_spsadtSolicitacaoGuia }

  I341_XMLCtm_spsadtSolicitacaoGuia = interface(IXMLNode)
    ['{E128FEF7-181A-48E2-AD38-A54AD4A6E758}']
    { Property Accessors }
    function Get_CabecalhoSolicitacao: I341_XMLCt_guiaCabecalho;
    function Get_NumeroGuiaPrincipal: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_TipoEtapaAutorizacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosSolicitante: I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante;
    function Get_CaraterAtendimento: WideString;
    function Get_DataSolicitacao: WideString;
    function Get_IndicacaoClinica: WideString;
    function Get_ProcedimentosSolicitados: I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341;
    function Get_DadosExecutante: I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante;
    function Get_AnexoClinico: I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico;
    function Get_Observacao: WideString;
    procedure Set_NumeroGuiaPrincipal(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_TipoEtapaAutorizacao(Value: WideString);
    procedure Set_CaraterAtendimento(Value: WideString);
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_IndicacaoClinica(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property CabecalhoSolicitacao: I341_XMLCt_guiaCabecalho read Get_CabecalhoSolicitacao;
    property NumeroGuiaPrincipal: WideString read Get_NumeroGuiaPrincipal write Set_NumeroGuiaPrincipal;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
    property TipoEtapaAutorizacao: WideString read Get_TipoEtapaAutorizacao write Set_TipoEtapaAutorizacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property DadosSolicitante: I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante read Get_DadosSolicitante;
    property CaraterAtendimento: WideString read Get_CaraterAtendimento write Set_CaraterAtendimento;
    property DataSolicitacao: WideString read Get_DataSolicitacao write Set_DataSolicitacao;
    property IndicacaoClinica: WideString read Get_IndicacaoClinica write Set_IndicacaoClinica;
    property ProcedimentosSolicitados: I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341 read Get_ProcedimentosSolicitados;
    property DadosExecutante: I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante read Get_DadosExecutante;
    property AnexoClinico: I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico read Get_AnexoClinico;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
  end;

{ I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante }

  I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante = interface(IXMLNode)
    ['{5488D83F-78C9-437D-924B-B1FD1C63858A}']
    { Property Accessors }
    function Get_ContratadoSolicitante: I341_XMLCt_contratadoDados;
    function Get_ProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados;
    { Methods & Properties }
    property ContratadoSolicitante: I341_XMLCt_contratadoDados read Get_ContratadoSolicitante;
    property ProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados read Get_ProfissionalSolicitante;
  end;

{ I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados }

  I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados = interface(IXMLNode)
    ['{05E840EC-9A46-4FB7-B9AE-BF84557591CE}']
    { Property Accessors }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeSolicitada: Integer;
    procedure Set_QuantidadeSolicitada(Value: Integer);
    { Methods & Properties }
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property QuantidadeSolicitada: Integer read Get_QuantidadeSolicitada write Set_QuantidadeSolicitada;
  end;

{ I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341 }

  I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341 = interface(IXMLNodeCollection)
    ['{30170445-0BE6-4B7A-8EB9-9DB6D043A816}']
    { Methods & Properties }
    function Add: I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
    function Insert(const Index: Integer): I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;

    function Get_Item(Index: Integer): I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
    property Items[Index: Integer]: I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados read Get_Item; default;
  end;

{ I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante }

  I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante = interface(IXMLNode)
    ['{515A8710-4469-4F82-AC3F-E6C53B1B2962}']
    { Property Accessors }
    function Get_CodigonaOperadora: WideString;
    function Get_NomeContratado: WideString;
    function Get_CNES: WideString;
    procedure Set_CodigonaOperadora(Value: WideString);
    procedure Set_NomeContratado(Value: WideString);
    procedure Set_CNES(Value: WideString);
    { Methods & Properties }
    property CodigonaOperadora: WideString read Get_CodigonaOperadora write Set_CodigonaOperadora;
    property NomeContratado: WideString read Get_NomeContratado write Set_NomeContratado;
    property CNES: WideString read Get_CNES write Set_CNES;
  end;

{ I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico }

  I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico = interface(IXMLNode)
    ['{E4896466-6540-4A5F-9AFD-5A630A95E88C}']
    { Property Accessors }
    function Get_SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio;
    function Get_SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio;
    function Get_SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
    { Methods & Properties }
    property SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio read Get_SolicitacaoQuimioterapia;
    property SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio read Get_SolicitacaoRadioterapia;
    property SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME read Get_SolicitacaoOPME;
  end;

{ I341_XMLCtm_internacaoSolicitacaoGuia }

  I341_XMLCtm_internacaoSolicitacaoGuia = interface(IXMLNode)
    ['{6447623B-2907-442B-8EA8-4118B37F8140}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_TipoEtapaAutorizacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_IdentificacaoSolicitante: I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante;
    function Get_DadosHospitalSolicitado: I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado;
    function Get_DadosInternacao: I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao;
    function Get_HipotesesDiagnosticas: I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas;
    function Get_ProcedimentosSolicitados: I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341;
    function Get_DataSolicitacao: WideString;
    function Get_Observacao: WideString;
    function Get_AnexoClinico: I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_TipoEtapaAutorizacao(Value: WideString);
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
    property TipoEtapaAutorizacao: WideString read Get_TipoEtapaAutorizacao write Set_TipoEtapaAutorizacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property IdentificacaoSolicitante: I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante read Get_IdentificacaoSolicitante;
    property DadosHospitalSolicitado: I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado read Get_DadosHospitalSolicitado;
    property DadosInternacao: I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao read Get_DadosInternacao;
    property HipotesesDiagnosticas: I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas read Get_HipotesesDiagnosticas;
    property ProcedimentosSolicitados: I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341 read Get_ProcedimentosSolicitados;
    property DataSolicitacao: WideString read Get_DataSolicitacao write Set_DataSolicitacao;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property AnexoClinico: I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico read Get_AnexoClinico;
  end;

{ I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante }

  I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante = interface(IXMLNode)
    ['{F4051DFF-D71C-4BD7-90FC-A9102D6E9EF6}']
    { Property Accessors }
    function Get_DadosDoContratado: I341_XMLCt_contratadoDados;
    function Get_DadosProfissionalContratado: I341_XMLCt_contratadoProfissionalDados;
    { Methods & Properties }
    property DadosDoContratado: I341_XMLCt_contratadoDados read Get_DadosDoContratado;
    property DadosProfissionalContratado: I341_XMLCt_contratadoProfissionalDados read Get_DadosProfissionalContratado;
  end;

{ I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado }

  I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado = interface(IXMLNode)
    ['{16F2AA52-97FB-4745-BFA7-6F8AD023EA19}']
    { Property Accessors }
    function Get_CodigoIndicadonaOperadora: WideString;
    function Get_NomeContratadoIndicado: WideString;
    function Get_DataSugeridaInternacao: WideString;
    procedure Set_CodigoIndicadonaOperadora(Value: WideString);
    procedure Set_NomeContratadoIndicado(Value: WideString);
    procedure Set_DataSugeridaInternacao(Value: WideString);
    { Methods & Properties }
    property CodigoIndicadonaOperadora: WideString read Get_CodigoIndicadonaOperadora write Set_CodigoIndicadonaOperadora;
    property NomeContratadoIndicado: WideString read Get_NomeContratadoIndicado write Set_NomeContratadoIndicado;
    property DataSugeridaInternacao: WideString read Get_DataSugeridaInternacao write Set_DataSugeridaInternacao;
  end;

{ I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao }

  I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao = interface(IXMLNode)
    ['{6BF1FC02-E42E-463B-B0AB-7A621FB1E540}']
    { Property Accessors }
    function Get_CaraterAtendimento: WideString;
    function Get_TipoInternacao: WideString;
    function Get_RegimeInternacao: WideString;
    function Get_QtDiariasSolicitadas: Integer;
    function Get_IndicadorOPME: WideString;
    function Get_IndicadorQuimio: WideString;
    function Get_IndicacaoClinica: WideString;
    procedure Set_CaraterAtendimento(Value: WideString);
    procedure Set_TipoInternacao(Value: WideString);
    procedure Set_RegimeInternacao(Value: WideString);
    procedure Set_QtDiariasSolicitadas(Value: Integer);
    procedure Set_IndicadorOPME(Value: WideString);
    procedure Set_IndicadorQuimio(Value: WideString);
    procedure Set_IndicacaoClinica(Value: WideString);
    { Methods & Properties }
    property CaraterAtendimento: WideString read Get_CaraterAtendimento write Set_CaraterAtendimento;
    property TipoInternacao: WideString read Get_TipoInternacao write Set_TipoInternacao;
    property RegimeInternacao: WideString read Get_RegimeInternacao write Set_RegimeInternacao;
    property QtDiariasSolicitadas: Integer read Get_QtDiariasSolicitadas write Set_QtDiariasSolicitadas;
    property IndicadorOPME: WideString read Get_IndicadorOPME write Set_IndicadorOPME;
    property IndicadorQuimio: WideString read Get_IndicadorQuimio write Set_IndicadorQuimio;
    property IndicacaoClinica: WideString read Get_IndicacaoClinica write Set_IndicacaoClinica;
  end;

{ I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas }

  I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas = interface(IXMLNode)
    ['{CA6468ED-8D59-496C-ACFC-CF358E7C838E}']
    { Property Accessors }
    function Get_DiagnosticoCID: I341_XMLSt_texto4List341;
    function Get_IndicadorAcidente: WideString;
    procedure Set_IndicadorAcidente(Value: WideString);
    { Methods & Properties }
    property DiagnosticoCID: I341_XMLSt_texto4List341 read Get_DiagnosticoCID;
    property IndicadorAcidente: WideString read Get_IndicadorAcidente write Set_IndicadorAcidente;
  end;

{ I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados }

  I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados = interface(IXMLNode)
    ['{BF3F989D-F743-43DA-A109-BD4D8D9DC25C}']
    { Property Accessors }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeSolicitada: Integer;
    procedure Set_QuantidadeSolicitada(Value: Integer);
    { Methods & Properties }
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property QuantidadeSolicitada: Integer read Get_QuantidadeSolicitada write Set_QuantidadeSolicitada;
  end;

{ I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341 }

  I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341 = interface(IXMLNodeCollection)
    ['{AAF3D8C1-D3F6-4F5C-9B76-0F97ADD71F65}']
    { Methods & Properties }
    function Add: I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
    function Insert(const Index: Integer): I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;

    function Get_Item(Index: Integer): I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
    property Items[Index: Integer]: I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados read Get_Item; default;
  end;

{ I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico }

  I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico = interface(IXMLNode)
    ['{FD326D92-31C4-4665-B1A0-DA98A42A5E4B}']
    { Property Accessors }
    function Get_SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio;
    function Get_SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio;
    function Get_SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
    { Methods & Properties }
    property SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio read Get_SolicitacaoQuimioterapia;
    property SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio read Get_SolicitacaoRadioterapia;
    property SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME read Get_SolicitacaoOPME;
  end;

{ I341_XMLCtm_prorrogacaoSolicitacaoGuia }

  I341_XMLCtm_prorrogacaoSolicitacaoGuia = interface(IXMLNode)
    ['{F9374434-D771-446C-9F60-F927AF2D8C89}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NrGuiaReferenciada: WideString;
    function Get_DadosBeneficiario: I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario;
    function Get_DadosContratadoSolicitante: I341_XMLCt_contratadoDados;
    function Get_DadosProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados;
    function Get_DadosInternacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao;
    function Get_ProcedimentosAdicionais: I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341;
    function Get_AnexoClinicoProrrogacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao;
    function Get_Observacao: WideString;
    function Get_DataSolicitacao: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NrGuiaReferenciada(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    procedure Set_DataSolicitacao(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NrGuiaReferenciada: WideString read Get_NrGuiaReferenciada write Set_NrGuiaReferenciada;
    property DadosBeneficiario: I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario read Get_DadosBeneficiario;
    property DadosContratadoSolicitante: I341_XMLCt_contratadoDados read Get_DadosContratadoSolicitante;
    property DadosProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados read Get_DadosProfissionalSolicitante;
    property DadosInternacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao read Get_DadosInternacao;
    property ProcedimentosAdicionais: I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341 read Get_ProcedimentosAdicionais;
    property AnexoClinicoProrrogacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao read Get_AnexoClinicoProrrogacao;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property DataSolicitacao: WideString read Get_DataSolicitacao write Set_DataSolicitacao;
  end;

{ I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario }

  I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario = interface(IXMLNode)
    ['{85661CC3-930D-4E3C-9D92-E8B470E9E62B}']
    { Property Accessors }
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    { Methods & Properties }
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property TipoIdent: WideString read Get_TipoIdent write Set_TipoIdent;
    property IdentificadorBeneficiario: WideString read Get_IdentificadorBeneficiario write Set_IdentificadorBeneficiario;
    property TemplateBiometrico: WideString read Get_TemplateBiometrico write Set_TemplateBiometrico;
  end;

{ I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao }

  I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao = interface(IXMLNode)
    ['{C21200D6-2279-49FD-B7BC-89126D4D71C0}']
    { Property Accessors }
    function Get_QtDiariasAdicionais: Integer;
    function Get_TipoAcomodacaoSolicitada: WideString;
    function Get_IndicacaoClinica: WideString;
    procedure Set_QtDiariasAdicionais(Value: Integer);
    procedure Set_TipoAcomodacaoSolicitada(Value: WideString);
    procedure Set_IndicacaoClinica(Value: WideString);
    { Methods & Properties }
    property QtDiariasAdicionais: Integer read Get_QtDiariasAdicionais write Set_QtDiariasAdicionais;
    property TipoAcomodacaoSolicitada: WideString read Get_TipoAcomodacaoSolicitada write Set_TipoAcomodacaoSolicitada;
    property IndicacaoClinica: WideString read Get_IndicacaoClinica write Set_IndicacaoClinica;
  end;

{ I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais }

  I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais = interface(IXMLNode)
    ['{E45E21CF-8AAE-4B2F-A8F9-537FF351650E}']
    { Property Accessors }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeSolicitada: Integer;
    procedure Set_QuantidadeSolicitada(Value: Integer);
    { Methods & Properties }
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property QuantidadeSolicitada: Integer read Get_QuantidadeSolicitada write Set_QuantidadeSolicitada;
  end;

{ I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341 }

  I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341 = interface(IXMLNodeCollection)
    ['{49E51E17-8368-436E-9DD0-289243E65DD5}']
    { Methods & Properties }
    function Add: I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
    function Insert(const Index: Integer): I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;

    function Get_Item(Index: Integer): I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
    property Items[Index: Integer]: I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais read Get_Item; default;
  end;

{ I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao }

  I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao = interface(IXMLNode)
    ['{A8027908-9354-4338-ACB1-A57BEF9C9A00}']
    { Property Accessors }
    function Get_SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio;
    function Get_SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio;
    function Get_SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
    { Methods & Properties }
    property SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio read Get_SolicitacaoQuimioterapia;
    property SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio read Get_SolicitacaoRadioterapia;
    property SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME read Get_SolicitacaoOPME;
  end;

{ I341_XMLCto_odontoSolicitacaoGuia }

  I341_XMLCto_odontoSolicitacaoGuia = interface(IXMLNode)
    ['{64C1EB34-5DA1-4194-A529-55E85C42A101}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaPrincipal: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_AtendimentoRN: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_PlanoBeneficiario: WideString;
    function Get_NomeEmpresa: WideString;
    function Get_NumeroTelefone: WideString;
    function Get_NomeTitular: WideString;
    function Get_DadosProfissionaisResponsaveis: I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis;
    function Get_ProcedimentosSolicitados: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341;
    function Get_DataTerminoTrat: WideString;
    function Get_TipoAtendimento: WideString;
    function Get_QtdTotalUS: WideString;
    function Get_ValorTotalProc: WideString;
    function Get_ValorTotalFranquia: WideString;
    function Get_Observacao: WideString;
    function Get_OdontoInicial: I341_XMLCto_anexoSituacaoInicial;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaPrincipal(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_AtendimentoRN(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    procedure Set_PlanoBeneficiario(Value: WideString);
    procedure Set_NomeEmpresa(Value: WideString);
    procedure Set_NumeroTelefone(Value: WideString);
    procedure Set_NomeTitular(Value: WideString);
    procedure Set_DataTerminoTrat(Value: WideString);
    procedure Set_TipoAtendimento(Value: WideString);
    procedure Set_QtdTotalUS(Value: WideString);
    procedure Set_ValorTotalProc(Value: WideString);
    procedure Set_ValorTotalFranquia(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaPrincipal: WideString read Get_NumeroGuiaPrincipal write Set_NumeroGuiaPrincipal;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property AtendimentoRN: WideString read Get_AtendimentoRN write Set_AtendimentoRN;
    property NumeroCNS: WideString read Get_NumeroCNS write Set_NumeroCNS;
    property TipoIdent: WideString read Get_TipoIdent write Set_TipoIdent;
    property IdentificadorBeneficiario: WideString read Get_IdentificadorBeneficiario write Set_IdentificadorBeneficiario;
    property TemplateBiometrico: WideString read Get_TemplateBiometrico write Set_TemplateBiometrico;
    property PlanoBeneficiario: WideString read Get_PlanoBeneficiario write Set_PlanoBeneficiario;
    property NomeEmpresa: WideString read Get_NomeEmpresa write Set_NomeEmpresa;
    property NumeroTelefone: WideString read Get_NumeroTelefone write Set_NumeroTelefone;
    property NomeTitular: WideString read Get_NomeTitular write Set_NomeTitular;
    property DadosProfissionaisResponsaveis: I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis read Get_DadosProfissionaisResponsaveis;
    property ProcedimentosSolicitados: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341 read Get_ProcedimentosSolicitados;
    property DataTerminoTrat: WideString read Get_DataTerminoTrat write Set_DataTerminoTrat;
    property TipoAtendimento: WideString read Get_TipoAtendimento write Set_TipoAtendimento;
    property QtdTotalUS: WideString read Get_QtdTotalUS write Set_QtdTotalUS;
    property ValorTotalProc: WideString read Get_ValorTotalProc write Set_ValorTotalProc;
    property ValorTotalFranquia: WideString read Get_ValorTotalFranquia write Set_ValorTotalFranquia;
    property Observacao: WideString read Get_Observacao write Set_Observacao;
    property OdontoInicial: I341_XMLCto_anexoSituacaoInicial read Get_OdontoInicial;
  end;

{ I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis }

  I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis = interface(IXMLNode)
    ['{28AD6B49-77E2-4EE4-8EC9-DCF01C0B6469}']
    { Property Accessors }
    function Get_NomeProfSolic: WideString;
    function Get_CroSolic: WideString;
    function Get_UfSolic: WideString;
    function Get_CbosSolic: WideString;
    function Get_CodigoProfExec: WideString;
    function Get_NomeProfExec: WideString;
    function Get_CroExec: WideString;
    function Get_UfExec: WideString;
    function Get_CnesExec: WideString;
    function Get_NomeProfExec2: WideString;
    function Get_CroExec2: WideString;
    function Get_UfExec2: WideString;
    function Get_CbosExec2: WideString;
    procedure Set_NomeProfSolic(Value: WideString);
    procedure Set_CroSolic(Value: WideString);
    procedure Set_UfSolic(Value: WideString);
    procedure Set_CbosSolic(Value: WideString);
    procedure Set_CodigoProfExec(Value: WideString);
    procedure Set_NomeProfExec(Value: WideString);
    procedure Set_CroExec(Value: WideString);
    procedure Set_UfExec(Value: WideString);
    procedure Set_CnesExec(Value: WideString);
    procedure Set_NomeProfExec2(Value: WideString);
    procedure Set_CroExec2(Value: WideString);
    procedure Set_UfExec2(Value: WideString);
    procedure Set_CbosExec2(Value: WideString);
    { Methods & Properties }
    property NomeProfSolic: WideString read Get_NomeProfSolic write Set_NomeProfSolic;
    property CroSolic: WideString read Get_CroSolic write Set_CroSolic;
    property UfSolic: WideString read Get_UfSolic write Set_UfSolic;
    property CbosSolic: WideString read Get_CbosSolic write Set_CbosSolic;
    property CodigoProfExec: WideString read Get_CodigoProfExec write Set_CodigoProfExec;
    property NomeProfExec: WideString read Get_NomeProfExec write Set_NomeProfExec;
    property CroExec: WideString read Get_CroExec write Set_CroExec;
    property UfExec: WideString read Get_UfExec write Set_UfExec;
    property CnesExec: WideString read Get_CnesExec write Set_CnesExec;
    property NomeProfExec2: WideString read Get_NomeProfExec2 write Set_NomeProfExec2;
    property CroExec2: WideString read Get_CroExec2 write Set_CroExec2;
    property UfExec2: WideString read Get_UfExec2 write Set_UfExec2;
    property CbosExec2: WideString read Get_CbosExec2 write Set_CbosExec2;
  end;

{ I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados }

  I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados = interface(IXMLNode)
    ['{ADEB6614-8C89-4F89-ACD7-CD4F1E4F820E}']
    { Property Accessors }
    function Get_ProcSolic: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_QtdProc: Integer;
    function Get_QtdUS: WideString;
    function Get_ValorProc: WideString;
    function Get_ValorFranquia: WideString;
    function Get_Aut: WideString;
    function Get_DataRealizacao: WideString;
    procedure Set_DenteFace(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_QtdUS(Value: WideString);
    procedure Set_ValorProc(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_Aut(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
    { Methods & Properties }
    property ProcSolic: I341_XMLCt_procedimentoDados read Get_ProcSolic;
    property DenteRegiao: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao read Get_DenteRegiao;
    property DenteFace: WideString read Get_DenteFace write Set_DenteFace;
    property QtdProc: Integer read Get_QtdProc write Set_QtdProc;
    property QtdUS: WideString read Get_QtdUS write Set_QtdUS;
    property ValorProc: WideString read Get_ValorProc write Set_ValorProc;
    property ValorFranquia: WideString read Get_ValorFranquia write Set_ValorFranquia;
    property Aut: WideString read Get_Aut write Set_Aut;
    property DataRealizacao: WideString read Get_DataRealizacao write Set_DataRealizacao;
  end;

{ I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341 }

  I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341 = interface(IXMLNodeCollection)
    ['{BBF07D5D-C7C0-4254-B465-837E633804DD}']
    { Methods & Properties }
    function Add: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
    function Insert(const Index: Integer): I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;

    function Get_Item(Index: Integer): I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
    property Items[Index: Integer]: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados read Get_Item; default;
  end;

{ I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao }

  I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao = interface(IXMLNode)
    ['{1ECE3641-D85D-4867-BFCA-304B14BF4843}']
    { Property Accessors }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
    { Methods & Properties }
    property CodDente: WideString read Get_CodDente write Set_CodDente;
    property CodRegiao: WideString read Get_CodRegiao write Set_CodRegiao;
  end;

{ I341_XMLCt_solicitacaoProcedimento }

  I341_XMLCt_solicitacaoProcedimento = interface(I341_XMLCtm_solicitacaoLote)
    ['{45CA2D9C-C859-4DC9-BD61-824899E4DFAD}']
  end;

{ I341_XMLCt_autorizacaoSolicitaStatus }

  I341_XMLCt_autorizacaoSolicitaStatus = interface(IXMLNode)
    ['{B905D85B-0828-4E1D-9407-4A30508848F5}']
    { Property Accessors }
    function Get_IdentificacaoSolicitacao: I341_XMLCt_guiaCabecalho;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
    { Methods & Properties }
    property IdentificacaoSolicitacao: I341_XMLCt_guiaCabecalho read Get_IdentificacaoSolicitacao;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property DadosContratado: I341_XMLCt_contratadoDados read Get_DadosContratado;
  end;

{ I341_XMLCt_elegibilidadeVerifica }

  I341_XMLCt_elegibilidadeVerifica = interface(IXMLNode)
    ['{81E63895-D957-4BCF-B46D-EEBA156071F7}']
    { Property Accessors }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_ValidadeCarteira: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    procedure Set_ValidadeCarteira(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    { Methods & Properties }
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property NumeroCarteira: WideString read Get_NumeroCarteira write Set_NumeroCarteira;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property NumeroCNS: WideString read Get_NumeroCNS write Set_NumeroCNS;
    property TipoIdent: WideString read Get_TipoIdent write Set_TipoIdent;
    property IdentificadorBeneficiario: WideString read Get_IdentificadorBeneficiario write Set_IdentificadorBeneficiario;
    property TemplateBiometrico: WideString read Get_TemplateBiometrico write Set_TemplateBiometrico;
    property ValidadeCarteira: WideString read Get_ValidadeCarteira write Set_ValidadeCarteira;
    property AusenciaCodValidacao: WideString read Get_AusenciaCodValidacao write Set_AusenciaCodValidacao;
    property CodValidacao: WideString read Get_CodValidacao write Set_CodValidacao;
  end;

{ I341_XMLCt_guiaCancelamento }

  I341_XMLCt_guiaCancelamento = interface(IXMLNode)
    ['{3E70D56D-DDDB-4F1C-B4E2-8ABB3A861B49}']
    { Property Accessors }
    function Get_TipoGuia: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroProtocolo: WideString;
    function Get_GuiasCancelamento: I341_XMLCt_guiaCancelamento_guiasCancelamentoList341;
    procedure Set_TipoGuia(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    { Methods & Properties }
    property TipoGuia: WideString read Get_TipoGuia write Set_TipoGuia;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property GuiasCancelamento: I341_XMLCt_guiaCancelamento_guiasCancelamentoList341 read Get_GuiasCancelamento;
  end;

{ I341_XMLCt_guiaCancelamento_guiasCancelamento }

  I341_XMLCt_guiaCancelamento_guiasCancelamento = interface(IXMLNode)
    ['{49FC97FD-1B9D-44A8-85C9-D7A9F268B818}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
  end;

{ I341_XMLCt_guiaCancelamento_guiasCancelamentoList341 }

  I341_XMLCt_guiaCancelamento_guiasCancelamentoList341 = interface(IXMLNodeCollection)
    ['{133230B5-1DA8-4F67-AC19-EA56EC6D60B7}']
    { Methods & Properties }
    function Add: I341_XMLCt_guiaCancelamento_guiasCancelamento;
    function Insert(const Index: Integer): I341_XMLCt_guiaCancelamento_guiasCancelamento;

    function Get_Item(Index: Integer): I341_XMLCt_guiaCancelamento_guiasCancelamento;
    property Items[Index: Integer]: I341_XMLCt_guiaCancelamento_guiasCancelamento read Get_Item; default;
  end;

{ I341_XMLCt_guiaRecursoLote }

  I341_XMLCt_guiaRecursoLote = interface(IXMLNode)
    ['{253C10F5-3C2B-404D-8263-321F6261DAEC}']
    { Property Accessors }
    function Get_GuiaRecursoGlosaOdonto: I341_XMLCto_recursoGlosaOdonto;
    function Get_GuiaRecursoGlosa: I341_XMLCtm_recursoGlosa;
    { Methods & Properties }
    property GuiaRecursoGlosaOdonto: I341_XMLCto_recursoGlosaOdonto read Get_GuiaRecursoGlosaOdonto;
    property GuiaRecursoGlosa: I341_XMLCtm_recursoGlosa read Get_GuiaRecursoGlosa;
  end;

{ I341_XMLCto_recursoGlosaOdonto }

  I341_XMLCto_recursoGlosaOdonto = interface(IXMLNode)
    ['{4DB00795-32AA-40FC-819A-E76806853F7F}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaRecGlosaPrestador: WideString;
    function Get_NomeOperadora: WideString;
    function Get_ObjetoRecurso: WideString;
    function Get_NumeroGuiaRecGlosaOperadora: WideString;
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_NumeroProtocolo: Integer;
    function Get_OpcaoRecurso: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso;
    function Get_ValorTotalRecursado: WideString;
    function Get_DataRecurso: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_ObjetoRecurso(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_NumeroProtocolo(Value: Integer);
    procedure Set_ValorTotalRecursado(Value: WideString);
    procedure Set_DataRecurso(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaRecGlosaPrestador: WideString read Get_NumeroGuiaRecGlosaPrestador write Set_NumeroGuiaRecGlosaPrestador;
    property NomeOperadora: WideString read Get_NomeOperadora write Set_NomeOperadora;
    property ObjetoRecurso: WideString read Get_ObjetoRecurso write Set_ObjetoRecurso;
    property NumeroGuiaRecGlosaOperadora: WideString read Get_NumeroGuiaRecGlosaOperadora write Set_NumeroGuiaRecGlosaOperadora;
    property DadosContratado: I341_XMLCt_contratadoDados read Get_DadosContratado;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property NumeroProtocolo: Integer read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property OpcaoRecurso: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso read Get_OpcaoRecurso;
    property ValorTotalRecursado: WideString read Get_ValorTotalRecursado write Set_ValorTotalRecursado;
    property DataRecurso: WideString read Get_DataRecurso write Set_DataRecurso;
  end;

{ I341_XMLCto_recursoGlosaOdonto_opcaoRecurso }

  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso = interface(IXMLNode)
    ['{890F9816-9FAC-4E5F-BFE5-646C6FD17A96}']
    { Property Accessors }
    function Get_RecursoProtocolo: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo;
    function Get_RecursoGuia: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341;
    { Methods & Properties }
    property RecursoProtocolo: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo read Get_RecursoProtocolo;
    property RecursoGuia: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341 read Get_RecursoGuia;
  end;

{ I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo }

  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo = interface(IXMLNode)
    ['{5A3EC86D-AD59-4E0C-AC48-ADEBECE4B0C9}']
    { Property Accessors }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
    { Methods & Properties }
    property CodigoGlosaProtocolo: WideString read Get_CodigoGlosaProtocolo write Set_CodigoGlosaProtocolo;
    property JustificativaProtocolo: WideString read Get_JustificativaProtocolo write Set_JustificativaProtocolo;
  end;

{ I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia }

  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia = interface(IXMLNode)
    ['{FBD95C5F-2689-49FB-BFFD-F499D4E4DEB8}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_CodGlosaGuia: WideString;
    function Get_JustificativaGuia: WideString;
    function Get_RecursoProcedimento: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_CodGlosaGuia(Value: WideString);
    procedure Set_JustificativaGuia(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Senha: WideString read Get_Senha write Set_Senha;
    property NomeBeneficiario: WideString read Get_NomeBeneficiario write Set_NomeBeneficiario;
    property CodGlosaGuia: WideString read Get_CodGlosaGuia write Set_CodGlosaGuia;
    property JustificativaGuia: WideString read Get_JustificativaGuia write Set_JustificativaGuia;
    property RecursoProcedimento: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341 read Get_RecursoProcedimento;
  end;

{ I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341 }

  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341 = interface(IXMLNodeCollection)
    ['{6DDFF4B0-9AF9-40DF-A6BA-DAAB15CE8365}']
    { Methods & Properties }
    function Add: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
    property Items[Index: Integer]: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia read Get_Item; default;
  end;

{ I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento }

  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento = interface(IXMLNode)
    ['{36E0827F-B2F6-40C5-8070-0ED7BE58CA41}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_DataRealizacao: WideString;
    function Get_DenteRegiao: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_Quantidade: Integer;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_CodGlosaProc: WideString;
    function Get_JustificativaProc: WideString;
    function Get_ValorRecursado: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_Quantidade(Value: Integer);
    procedure Set_CodGlosaProc(Value: WideString);
    procedure Set_JustificativaProc(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property DataRealizacao: WideString read Get_DataRealizacao write Set_DataRealizacao;
    property DenteRegiao: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao read Get_DenteRegiao;
    property DenteFace: WideString read Get_DenteFace write Set_DenteFace;
    property Quantidade: Integer read Get_Quantidade write Set_Quantidade;
    property ProcRecurso: I341_XMLCt_procedimentoDados read Get_ProcRecurso;
    property CodGlosaProc: WideString read Get_CodGlosaProc write Set_CodGlosaProc;
    property JustificativaProc: WideString read Get_JustificativaProc write Set_JustificativaProc;
    property ValorRecursado: WideString read Get_ValorRecursado write Set_ValorRecursado;
  end;

{ I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341 }

  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341 = interface(IXMLNodeCollection)
    ['{63105F86-D6FF-42E2-8E3D-BB8DDD02EA4D}']
    { Methods & Properties }
    function Add: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
    function Insert(const Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;

    function Get_Item(Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
    property Items[Index: Integer]: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento read Get_Item; default;
  end;

{ I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao }

  I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao = interface(IXMLNode)
    ['{5DD869F0-E740-4540-83D5-05091AA18255}']
    { Property Accessors }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
    { Methods & Properties }
    property CodDente: WideString read Get_CodDente write Set_CodDente;
    property CodRegiao: WideString read Get_CodRegiao write Set_CodRegiao;
  end;

{ I341_XMLCtm_recursoGlosa }

  I341_XMLCtm_recursoGlosa = interface(IXMLNode)
    ['{1795325B-47BD-49FB-A292-6F4FD8969C4D}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaRecGlosaPrestador: WideString;
    function Get_NomeOperadora: WideString;
    function Get_ObjetoRecurso: WideString;
    function Get_NumeroGuiaRecGlosaOperadora: WideString;
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_NumeroProtocolo: Integer;
    function Get_OpcaoRecurso: I341_XMLCtm_recursoGlosa_opcaoRecurso;
    function Get_ValorTotalRecursado: WideString;
    function Get_DataRecurso: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_ObjetoRecurso(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_NumeroProtocolo(Value: Integer);
    procedure Set_ValorTotalRecursado(Value: WideString);
    procedure Set_DataRecurso(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property NumeroGuiaRecGlosaPrestador: WideString read Get_NumeroGuiaRecGlosaPrestador write Set_NumeroGuiaRecGlosaPrestador;
    property NomeOperadora: WideString read Get_NomeOperadora write Set_NomeOperadora;
    property ObjetoRecurso: WideString read Get_ObjetoRecurso write Set_ObjetoRecurso;
    property NumeroGuiaRecGlosaOperadora: WideString read Get_NumeroGuiaRecGlosaOperadora write Set_NumeroGuiaRecGlosaOperadora;
    property DadosContratado: I341_XMLCt_contratadoDados read Get_DadosContratado;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property NumeroProtocolo: Integer read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property OpcaoRecurso: I341_XMLCtm_recursoGlosa_opcaoRecurso read Get_OpcaoRecurso;
    property ValorTotalRecursado: WideString read Get_ValorTotalRecursado write Set_ValorTotalRecursado;
    property DataRecurso: WideString read Get_DataRecurso write Set_DataRecurso;
  end;

{ I341_XMLCtm_recursoGlosa_opcaoRecurso }

  I341_XMLCtm_recursoGlosa_opcaoRecurso = interface(IXMLNode)
    ['{ADEA58EE-00AF-44C5-B5E2-9BEEF92FC0DB}']
    { Property Accessors }
    function Get_RecursoProtocolo: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo;
    function Get_RecursoGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341;
    { Methods & Properties }
    property RecursoProtocolo: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo read Get_RecursoProtocolo;
    property RecursoGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341 read Get_RecursoGuia;
  end;

{ I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo }

  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo = interface(IXMLNode)
    ['{71846BA9-7901-476C-9A80-2F2DADDE9047}']
    { Property Accessors }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
    { Methods & Properties }
    property CodigoGlosaProtocolo: WideString read Get_CodigoGlosaProtocolo write Set_CodigoGlosaProtocolo;
    property JustificativaProtocolo: WideString read Get_JustificativaProtocolo write Set_JustificativaProtocolo;
  end;

{ I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia }

  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia = interface(IXMLNode)
    ['{0C940F83-DD84-40F7-81C9-C90066D1A9EE}']
    { Property Accessors }
    function Get_NumeroGuiaOrigem: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_OpcaoRecursoGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia;
    procedure Set_NumeroGuiaOrigem(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaOrigem: WideString read Get_NumeroGuiaOrigem write Set_NumeroGuiaOrigem;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property Senha: WideString read Get_Senha write Set_Senha;
    property OpcaoRecursoGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia read Get_OpcaoRecursoGuia;
  end;

{ I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341 }

  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341 = interface(IXMLNodeCollection)
    ['{D550B4F1-6F5F-4EC6-A563-7D6321590C72}']
    { Methods & Properties }
    function Add: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
    property Items[Index: Integer]: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia read Get_Item; default;
  end;

{ I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia }

  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia = interface(IXMLNode)
    ['{533C912F-03EE-47EC-8683-4B15ACD1F90E}']
    { Property Accessors }
    function Get_RecursoGuiaCompleta: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341;
    function Get_ItensGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341;
    { Methods & Properties }
    property RecursoGuiaCompleta: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341 read Get_RecursoGuiaCompleta;
    property ItensGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341 read Get_ItensGuia;
  end;

{ I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta }

  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta = interface(IXMLNode)
    ['{E47E8C85-2048-4A06-AD1E-6B3F52198AF3}']
    { Property Accessors }
    function Get_CodGlosaGuia: WideString;
    function Get_JustificativaGuia: WideString;
    procedure Set_CodGlosaGuia(Value: WideString);
    procedure Set_JustificativaGuia(Value: WideString);
    { Methods & Properties }
    property CodGlosaGuia: WideString read Get_CodGlosaGuia write Set_CodGlosaGuia;
    property JustificativaGuia: WideString read Get_JustificativaGuia write Set_JustificativaGuia;
  end;

{ I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341 }

  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341 = interface(IXMLNodeCollection)
    ['{9EF44DA5-4B09-41F8-94C9-FCF4954CC9DD}']
    { Methods & Properties }
    function Add: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
    function Insert(const Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;

    function Get_Item(Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
    property Items[Index: Integer]: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta read Get_Item; default;
  end;

{ I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia }

  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia = interface(IXMLNode)
    ['{103FB15D-52F1-4A2E-A5C6-C45F11498C87}']
    { Property Accessors }
    function Get_SequencialItem: Integer;
    function Get_DataInicio: WideString;
    function Get_DataFim: WideString;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_GrauParticipacao: WideString;
    function Get_CodGlosaItem: WideString;
    function Get_ValorRecursado: WideString;
    function Get_JustificativaItem: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataInicio(Value: WideString);
    procedure Set_DataFim(Value: WideString);
    procedure Set_GrauParticipacao(Value: WideString);
    procedure Set_CodGlosaItem(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
    procedure Set_JustificativaItem(Value: WideString);
    { Methods & Properties }
    property SequencialItem: Integer read Get_SequencialItem write Set_SequencialItem;
    property DataInicio: WideString read Get_DataInicio write Set_DataInicio;
    property DataFim: WideString read Get_DataFim write Set_DataFim;
    property ProcRecurso: I341_XMLCt_procedimentoDados read Get_ProcRecurso;
    property GrauParticipacao: WideString read Get_GrauParticipacao write Set_GrauParticipacao;
    property CodGlosaItem: WideString read Get_CodGlosaItem write Set_CodGlosaItem;
    property ValorRecursado: WideString read Get_ValorRecursado write Set_ValorRecursado;
    property JustificativaItem: WideString read Get_JustificativaItem write Set_JustificativaItem;
  end;

{ I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341 }

  I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341 = interface(IXMLNodeCollection)
    ['{CC2516E6-169E-4C33-870B-D580DBFDF0E1}']
    { Methods & Properties }
    function Add: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
    function Insert(const Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
    property Items[Index: Integer]: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia read Get_Item; default;
  end;

{ I341_XMLEpilogo }

  I341_XMLEpilogo = interface(IXMLNode)
    ['{1D3427DD-30FD-4290-837C-C08CEFC8BC5D}']
    { Property Accessors }
    function Get_Hash: WideString;
    procedure Set_Hash(Value: WideString);
    { Methods & Properties }
    property Hash: WideString read Get_Hash write Set_Hash;
  end;

{ I341_XMLCt_creditoOdonto }

  I341_XMLCt_creditoOdonto = interface(IXMLNode)
    ['{0352D891-D340-4429-9061-3806266CF6A1}']
    { Property Accessors }
    function Get_ValorCredito: WideString;
    function Get_Descricao: WideString;
    procedure Set_ValorCredito(Value: WideString);
    procedure Set_Descricao(Value: WideString);
    { Methods & Properties }
    property ValorCredito: WideString read Get_ValorCredito write Set_ValorCredito;
    property Descricao: WideString read Get_Descricao write Set_Descricao;
  end;

{ I341_XMLCt_diagnostico }

  I341_XMLCt_diagnostico = interface(IXMLNode)
    ['{1FE68516-F660-4CED-BD50-92132C391E69}']
    { Property Accessors }
    function Get_TabelaDiagnostico: WideString;
    function Get_CodigoDiagnostico: WideString;
    function Get_DescricaoDiagnostico: WideString;
    procedure Set_TabelaDiagnostico(Value: WideString);
    procedure Set_CodigoDiagnostico(Value: WideString);
    procedure Set_DescricaoDiagnostico(Value: WideString);
    { Methods & Properties }
    property TabelaDiagnostico: WideString read Get_TabelaDiagnostico write Set_TabelaDiagnostico;
    property CodigoDiagnostico: WideString read Get_CodigoDiagnostico write Set_CodigoDiagnostico;
    property DescricaoDiagnostico: WideString read Get_DescricaoDiagnostico write Set_DescricaoDiagnostico;
  end;

{ I341_XMLCt_fontePagadora }

  I341_XMLCt_fontePagadora = interface(IXMLNode)
    ['{5069E7C8-012F-4AAB-AF7D-FF9A80C5F889}']
    { Property Accessors }
    function Get_RegistroANS: WideString;
    function Get_IdentificacaoUnidadePagadora: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_IdentificacaoUnidadePagadora(Value: WideString);
    { Methods & Properties }
    property RegistroANS: WideString read Get_RegistroANS write Set_RegistroANS;
    property IdentificacaoUnidadePagadora: WideString read Get_IdentificacaoUnidadePagadora write Set_IdentificacaoUnidadePagadora;
  end;

{ I341_XMLCt_guiaDadosAnexo }

  I341_XMLCt_guiaDadosAnexo = interface(IXMLNode)
    ['{95261596-4B50-47DF-8655-0350664FA259}']
    { Property Accessors }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DataEmissao_SolicitacaoAnexo: WideString;
    function Get_VlInformadoGuia: I341_XMLCt_valorTotal;
    function Get_GlosaAnexo: I341_XMLCt_guiaDadosAnexo_glosaAnexo;
    function Get_ProcedimentosSolicitados: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_DataEmissao_SolicitacaoAnexo(Value: WideString);
    { Methods & Properties }
    property NumeroGuiaPrestador: WideString read Get_NumeroGuiaPrestador write Set_NumeroGuiaPrestador;
    property NumeroGuiaOperadora: WideString read Get_NumeroGuiaOperadora write Set_NumeroGuiaOperadora;
    property DadosBeneficiario: I341_XMLCt_beneficiarioDados read Get_DadosBeneficiario;
    property DataEmissao_SolicitacaoAnexo: WideString read Get_DataEmissao_SolicitacaoAnexo write Set_DataEmissao_SolicitacaoAnexo;
    property VlInformadoGuia: I341_XMLCt_valorTotal read Get_VlInformadoGuia;
    property GlosaAnexo: I341_XMLCt_guiaDadosAnexo_glosaAnexo read Get_GlosaAnexo;
    property ProcedimentosSolicitados: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados read Get_ProcedimentosSolicitados;
  end;

{ I341_XMLCt_guiaDadosAnexoList341 }

  I341_XMLCt_guiaDadosAnexoList341 = interface(IXMLNodeCollection)
    ['{9D54FAAA-EEFE-4C8D-88A1-48C6A3224087}']
    { Methods & Properties }
    function Add: I341_XMLCt_guiaDadosAnexo;
    function Insert(const Index: Integer): I341_XMLCt_guiaDadosAnexo;

    function Get_Item(Index: Integer): I341_XMLCt_guiaDadosAnexo;
    property Items[Index: Integer]: I341_XMLCt_guiaDadosAnexo read Get_Item; default;
  end;

{ I341_XMLCt_guiaDadosAnexo_glosaAnexo }

  I341_XMLCt_guiaDadosAnexo_glosaAnexo = interface(IXMLNode)
    ['{1D7324CA-5A9D-4DFD-9798-616F3A9E20A9}']
    { Property Accessors }
    function Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
    function Get_VlGlosaAnexo: WideString;
    procedure Set_VlGlosaAnexo(Value: WideString);
    { Methods & Properties }
    property MotivoGlosa: I341_XMLCt_motivoGlosaList341 read Get_MotivoGlosa;
    property VlGlosaAnexo: WideString read Get_VlGlosaAnexo write Set_VlGlosaAnexo;
  end;

{ I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados }

  I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados = interface(IXMLNodeCollection)
    ['{D3183A11-6A47-45F8-B2EA-9A3E6491ED64}']
    { Property Accessors }
    function Get_ProcedimentoSolicitado(Index: Integer): I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
    { Methods & Properties }
    function Add: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
    function Insert(const Index: Integer): I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
    property ProcedimentoSolicitado[Index: Integer]: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado read Get_ProcedimentoSolicitado; default;
  end;

{ I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado }

  I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado = interface(IXMLNode)
    ['{C9D020CA-A9BA-41F5-A186-FA29E03579EE}']
    { Property Accessors }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_OpcaoFabricante: WideString;
    function Get_QtdSolicitada: WideString;
    function Get_ValorSolicitado: WideString;
    function Get_QtdAutorizada: WideString;
    function Get_ValorAutorizado: WideString;
    function Get_GlosasProcedimento: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento;
    procedure Set_OpcaoFabricante(Value: WideString);
    procedure Set_QtdSolicitada(Value: WideString);
    procedure Set_ValorSolicitado(Value: WideString);
    procedure Set_QtdAutorizada(Value: WideString);
    procedure Set_ValorAutorizado(Value: WideString);
    { Methods & Properties }
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property OpcaoFabricante: WideString read Get_OpcaoFabricante write Set_OpcaoFabricante;
    property QtdSolicitada: WideString read Get_QtdSolicitada write Set_QtdSolicitada;
    property ValorSolicitado: WideString read Get_ValorSolicitado write Set_ValorSolicitado;
    property QtdAutorizada: WideString read Get_QtdAutorizada write Set_QtdAutorizada;
    property ValorAutorizado: WideString read Get_ValorAutorizado write Set_ValorAutorizado;
    property GlosasProcedimento: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento read Get_GlosasProcedimento;
  end;

{ I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento }

  I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento = interface(IXMLNode)
    ['{976E1DE7-BC36-468E-B19A-7A3A10FEE44A}']
    { Property Accessors }
    function Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
    function Get_ValorGlosaProcedimento: WideString;
    procedure Set_ValorGlosaProcedimento(Value: WideString);
    { Methods & Properties }
    property MotivoGlosa: I341_XMLCt_motivoGlosaList341 read Get_MotivoGlosa;
    property ValorGlosaProcedimento: WideString read Get_ValorGlosaProcedimento write Set_ValorGlosaProcedimento;
  end;

{ I341_XMLCt_guiaRecurso }

  I341_XMLCt_guiaRecurso = interface(IXMLNode)
    ['{83054715-D331-4C5B-9DDA-CA838E34FC27}']
    { Property Accessors }
    function Get_NumeroProtocolo: WideString;
    function Get_NumDemoAnalisePagto: WideString;
    function Get_NumeroGuiaRecurso: WideString;
    function Get_NumeroGuiaOrigem: WideString;
    function Get_MotivosGlosa: I341_XMLCt_motivoGlosaList341;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumDemoAnalisePagto(Value: WideString);
    procedure Set_NumeroGuiaRecurso(Value: WideString);
    procedure Set_NumeroGuiaOrigem(Value: WideString);
    { Methods & Properties }
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property NumDemoAnalisePagto: WideString read Get_NumDemoAnalisePagto write Set_NumDemoAnalisePagto;
    property NumeroGuiaRecurso: WideString read Get_NumeroGuiaRecurso write Set_NumeroGuiaRecurso;
    property NumeroGuiaOrigem: WideString read Get_NumeroGuiaOrigem write Set_NumeroGuiaOrigem;
    property MotivosGlosa: I341_XMLCt_motivoGlosaList341 read Get_MotivosGlosa;
  end;

{ I341_XMLCt_guiaRecursoList341 }

  I341_XMLCt_guiaRecursoList341 = interface(IXMLNodeCollection)
    ['{AFA0D3C9-E392-4E23-9ACA-B88B13D2AC58}']
    { Methods & Properties }
    function Add: I341_XMLCt_guiaRecurso;
    function Insert(const Index: Integer): I341_XMLCt_guiaRecurso;

    function Get_Item(Index: Integer): I341_XMLCt_guiaRecurso;
    property Items[Index: Integer]: I341_XMLCt_guiaRecurso read Get_Item; default;
  end;

{ I341_XMLCt_guiaValorTotalSADT }

  I341_XMLCt_guiaValorTotalSADT = interface(IXMLNode)
    ['{2EE5002B-7714-4066-9146-52725C9B7BCA}']
    { Property Accessors }
    function Get_ValorProcedimentos: WideString;
    function Get_ValorTaxasAlugueis: WideString;
    function Get_ValorMateriais: WideString;
    function Get_ValorMedicamentos: WideString;
    function Get_ValorOPME: WideString;
    function Get_ValorGasesMedicinais: WideString;
    function Get_ValorTotalGeral: WideString;
    procedure Set_ValorProcedimentos(Value: WideString);
    procedure Set_ValorTaxasAlugueis(Value: WideString);
    procedure Set_ValorMateriais(Value: WideString);
    procedure Set_ValorMedicamentos(Value: WideString);
    procedure Set_ValorOPME(Value: WideString);
    procedure Set_ValorGasesMedicinais(Value: WideString);
    procedure Set_ValorTotalGeral(Value: WideString);
    { Methods & Properties }
    property ValorProcedimentos: WideString read Get_ValorProcedimentos write Set_ValorProcedimentos;
    property ValorTaxasAlugueis: WideString read Get_ValorTaxasAlugueis write Set_ValorTaxasAlugueis;
    property ValorMateriais: WideString read Get_ValorMateriais write Set_ValorMateriais;
    property ValorMedicamentos: WideString read Get_ValorMedicamentos write Set_ValorMedicamentos;
    property ValorOPME: WideString read Get_ValorOPME write Set_ValorOPME;
    property ValorGasesMedicinais: WideString read Get_ValorGasesMedicinais write Set_ValorGasesMedicinais;
    property ValorTotalGeral: WideString read Get_ValorTotalGeral write Set_ValorTotalGeral;
  end;

{ I341_XMLCt_hipoteseDiagnostica }

  I341_XMLCt_hipoteseDiagnostica = interface(IXMLNode)
    ['{304D882C-397E-4C53-85D7-28E3033274F9}']
    { Property Accessors }
    function Get_Diagnostico: I341_XMLCt_diagnostico;
    function Get_IndicacaoAcidente: WideString;
    procedure Set_IndicacaoAcidente(Value: WideString);
    { Methods & Properties }
    property Diagnostico: I341_XMLCt_diagnostico read Get_Diagnostico;
    property IndicacaoAcidente: WideString read Get_IndicacaoAcidente write Set_IndicacaoAcidente;
  end;

{ I341_XMLCt_intervaloCiclos }

  I341_XMLCt_intervaloCiclos = interface(IXMLNode)
    ['{6BF48B28-AE3C-438E-AF95-4FB8610B4604}']
    { Property Accessors }
    function Get_Tempo: Integer;
    function Get_Unidade: WideString;
    procedure Set_Tempo(Value: Integer);
    procedure Set_Unidade(Value: WideString);
    { Methods & Properties }
    property Tempo: Integer read Get_Tempo write Set_Tempo;
    property Unidade: WideString read Get_Unidade write Set_Unidade;
  end;

{ I341_XMLCt_opmeDados }

  I341_XMLCt_opmeDados = interface(IXMLNode)
    ['{CBE29ED0-7320-434B-B278-21AB0B3927F2}']
    { Property Accessors }
    function Get_IdentificacaoOPME: I341_XMLCt_procedimentoDados;
    function Get_NomeFabricante: WideString;
    procedure Set_NomeFabricante(Value: WideString);
    { Methods & Properties }
    property IdentificacaoOPME: I341_XMLCt_procedimentoDados read Get_IdentificacaoOPME;
    property NomeFabricante: WideString read Get_NomeFabricante write Set_NomeFabricante;
  end;

{ I341_XMLCt_opmUtilizada }

  I341_XMLCt_opmUtilizada = interface(IXMLNode)
    ['{5F6BBFD2-34F7-4DAA-8AE6-A3D343FA8474}']
    { Property Accessors }
    function Get_OPM: I341_XMLCt_opmUtilizada_OPM;
    function Get_ValorTotalOPM: WideString;
    procedure Set_ValorTotalOPM(Value: WideString);
    { Methods & Properties }
    property OPM: I341_XMLCt_opmUtilizada_OPM read Get_OPM;
    property ValorTotalOPM: WideString read Get_ValorTotalOPM write Set_ValorTotalOPM;
  end;

{ I341_XMLCt_opmUtilizada_OPM }

  I341_XMLCt_opmUtilizada_OPM = interface(IXMLNodeCollection)
    ['{E15367A2-E90D-4E25-B9EF-685C1729A8D6}']
    { Property Accessors }
    function Get_IdentificacaoOPM(Index: Integer): I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
    { Methods & Properties }
    function Add: I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
    function Insert(const Index: Integer): I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
    property IdentificacaoOPM[Index: Integer]: I341_XMLCt_opmUtilizada_OPM_identificacaoOPM read Get_IdentificacaoOPM; default;
  end;

{ I341_XMLCt_opmUtilizada_OPM_identificacaoOPM }

  I341_XMLCt_opmUtilizada_OPM_identificacaoOPM = interface(IXMLNode)
    ['{A67DBDE4-0E1A-4AC0-93B7-688A3DF227B5}']
    { Property Accessors }
    function Get_IdentificacaoOPME: I341_XMLCt_procedimentoDados;
    function Get_Quantidade: Integer;
    function Get_CodigoBarra: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    procedure Set_Quantidade(Value: Integer);
    procedure Set_CodigoBarra(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
    { Methods & Properties }
    property IdentificacaoOPME: I341_XMLCt_procedimentoDados read Get_IdentificacaoOPME;
    property Quantidade: Integer read Get_Quantidade write Set_Quantidade;
    property CodigoBarra: WideString read Get_CodigoBarra write Set_CodigoBarra;
    property ValorUnitario: WideString read Get_ValorUnitario write Set_ValorUnitario;
    property ValorTotal: WideString read Get_ValorTotal write Set_ValorTotal;
  end;

{ I341_XMLCt_pagamentoResumo }

  I341_XMLCt_pagamentoResumo = interface(IXMLNode)
    ['{A5D3984A-5112-43D0-8FA7-93CCF504F729}']
    { Property Accessors }
    function Get_NumeroFatura: WideString;
    function Get_NumeroLote: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_ValorTotalLote: I341_XMLCt_valorTotal;
    procedure Set_NumeroFatura(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    { Methods & Properties }
    property NumeroFatura: WideString read Get_NumeroFatura write Set_NumeroFatura;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property ValorTotalLote: I341_XMLCt_valorTotal read Get_ValorTotalLote;
  end;

{ I341_XMLCt_procedimentosComplementares }

  I341_XMLCt_procedimentosComplementares = interface(IXMLNode)
    ['{C9A21F84-9B87-4BC8-879A-F8B8D5257224}']
    { Property Accessors }
    function Get_DataProvavel: WideString;
    function Get_Identificacao: I341_XMLCt_procedimentoDados;
    function Get_Quantidade: WideString;
    procedure Set_DataProvavel(Value: WideString);
    procedure Set_Quantidade(Value: WideString);
    { Methods & Properties }
    property DataProvavel: WideString read Get_DataProvavel write Set_DataProvavel;
    property Identificacao: I341_XMLCt_procedimentoDados read Get_Identificacao;
    property Quantidade: WideString read Get_Quantidade write Set_Quantidade;
  end;

{ I341_XMLCt_procedimentoSolicitado }

  I341_XMLCt_procedimentoSolicitado = interface(IXMLNode)
    ['{792D28D6-1704-4C04-954B-739C2A681303}']
    { Property Accessors }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_UnidadeMedida: WideString;
    function Get_QuantidadeSolicitada: Integer;
    procedure Set_UnidadeMedida(Value: WideString);
    procedure Set_QuantidadeSolicitada(Value: Integer);
    { Methods & Properties }
    property Procedimento: I341_XMLCt_procedimentoDados read Get_Procedimento;
    property UnidadeMedida: WideString read Get_UnidadeMedida write Set_UnidadeMedida;
    property QuantidadeSolicitada: Integer read Get_QuantidadeSolicitada write Set_QuantidadeSolicitada;
  end;

{ I341_XMLCt_protocoloDetalheAnexo }

  I341_XMLCt_protocoloDetalheAnexo = interface(IXMLNode)
    ['{B1BA1EAF-FCB1-4727-B82A-4295859A02C6}']
    { Property Accessors }
    function Get_NumeroProtocolo: WideString;
    function Get_ValorTotalProtocolo: WideString;
    function Get_GlosasProtocolo: I341_XMLCt_motivoGlosaList341;
    function Get_VlGlosaProtocolo: WideString;
    function Get_DadosGuias: I341_XMLCt_guiaDadosAnexoList341;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_ValorTotalProtocolo(Value: WideString);
    procedure Set_VlGlosaProtocolo(Value: WideString);
    { Methods & Properties }
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property ValorTotalProtocolo: WideString read Get_ValorTotalProtocolo write Set_ValorTotalProtocolo;
    property GlosasProtocolo: I341_XMLCt_motivoGlosaList341 read Get_GlosasProtocolo;
    property VlGlosaProtocolo: WideString read Get_VlGlosaProtocolo write Set_VlGlosaProtocolo;
    property DadosGuias: I341_XMLCt_guiaDadosAnexoList341 read Get_DadosGuias;
  end;

{ I341_XMLCt_protocoloRecurso }

  I341_XMLCt_protocoloRecurso = interface(IXMLNode)
    ['{29312EA2-6BC2-4DFA-905C-8B1FE68CC485}']
    { Property Accessors }
    function Get_NumeroProtocolo: WideString;
    function Get_GlosaProtocolo: I341_XMLCt_motivoGlosaList341;
    function Get_DadosGuias: I341_XMLCt_guiaRecursoList341;
    procedure Set_NumeroProtocolo(Value: WideString);
    { Methods & Properties }
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property GlosaProtocolo: I341_XMLCt_motivoGlosaList341 read Get_GlosaProtocolo;
    property DadosGuias: I341_XMLCt_guiaRecursoList341 read Get_DadosGuias;
  end;

{ I341_XMLCt_protocoloRecebimentoAnexo }

  I341_XMLCt_protocoloRecebimentoAnexo = interface(IXMLNode)
    ['{71259AB3-D51B-4D27-B5C1-AA5350F642E1}']
    { Property Accessors }
    function Get_NumeroProtocolo: WideString;
    function Get_IdentificacaoOperadora: I341_XMLCt_fontePagadora;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_DetalheProtocolo: I341_XMLCt_protocoloDetalheAnexo;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
    { Methods & Properties }
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property IdentificacaoOperadora: I341_XMLCt_fontePagadora read Get_IdentificacaoOperadora;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property DataEnvioLote: WideString read Get_DataEnvioLote write Set_DataEnvioLote;
    property DetalheProtocolo: I341_XMLCt_protocoloDetalheAnexo read Get_DetalheProtocolo;
  end;

{ I341_XMLCt_protocoloRecebimentoRecurso }

  I341_XMLCt_protocoloRecebimentoRecurso = interface(IXMLNode)
    ['{6DC0A7B8-9E06-4FDC-9030-44ACFD627115}']
    { Property Accessors }
    function Get_NumeroProtocolo: WideString;
    function Get_IdentificacaoOperadora: I341_XMLCt_fontePagadora;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_DetalheProtocolo: I341_XMLCt_protocoloRecurso;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
    { Methods & Properties }
    property NumeroProtocolo: WideString read Get_NumeroProtocolo write Set_NumeroProtocolo;
    property IdentificacaoOperadora: I341_XMLCt_fontePagadora read Get_IdentificacaoOperadora;
    property DadosPrestador: I341_XMLCt_contratadoDados read Get_DadosPrestador;
    property NumeroLote: WideString read Get_NumeroLote write Set_NumeroLote;
    property DataEnvioLote: WideString read Get_DataEnvioLote write Set_DataEnvioLote;
    property DetalheProtocolo: I341_XMLCt_protocoloRecurso read Get_DetalheProtocolo;
  end;

{ I341_XMLCt_respostaElegibilidade }

  I341_XMLCt_respostaElegibilidade = interface(IXMLNode)
    ['{1B339317-F681-438D-98F7-92D65E808AD9}']
    { Property Accessors }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ReciboElegibilidade: I341_XMLCt_elegibilidadeRecibo;
    { Methods & Properties }
    property MensagemErro: I341_XMLCt_motivoGlosa read Get_MensagemErro;
    property ReciboElegibilidade: I341_XMLCt_elegibilidadeRecibo read Get_ReciboElegibilidade;
  end;

{ I341_XMLCt_valorCreditoDesconto }

  I341_XMLCt_valorCreditoDesconto = interface(IXMLNode)
    ['{57DED33B-2D10-4169-B10F-3D3D084FBD4F}']
    { Property Accessors }
    function Get_TipoLancamento: WideString;
    function Get_Descricao: WideString;
    function Get_Valor: WideString;
    procedure Set_TipoLancamento(Value: WideString);
    procedure Set_Descricao(Value: WideString);
    procedure Set_Valor(Value: WideString);
    { Methods & Properties }
    property TipoLancamento: WideString read Get_TipoLancamento write Set_TipoLancamento;
    property Descricao: WideString read Get_Descricao write Set_Descricao;
    property Valor: WideString read Get_Valor write Set_Valor;
  end;

{ I341_XMLString_List341 }

  I341_XMLString_List341 = interface(IXMLNodeCollection)
    ['{8BC5EA91-7359-4A3B-95F0-B294F97F52C8}']
    { Methods & Properties }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
    property Items[Index: Integer]: WideString read Get_Item; default;
  end;

{ I341_XMLBase64BinaryList341 }

  I341_XMLBase64BinaryList341 = interface(IXMLNodeCollection)
    ['{DDE770DE-1DBD-449A-AAA4-022E645C5D9D}']
    { Methods & Properties }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
    property Items[Index: Integer]: WideString read Get_Item; default;
  end;

{ I341_XMLSt_texto4List341 }

  I341_XMLSt_texto4List341 = interface(IXMLNodeCollection)
    ['{F86C44B4-91DE-46AD-B368-AB1A6369EFC4}']
    { Methods & Properties }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
    property Items[Index: Integer]: WideString read Get_Item; default;
  end;

{ I341_XMLDm_tipoGlosaList341 }

  I341_XMLDm_tipoGlosaList341 = interface(IXMLNodeCollection)
    ['{219C67AD-BA78-4FE3-87A5-63ECEF99BDC5}']
    { Methods & Properties }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
    property Items[Index: Integer]: WideString read Get_Item; default;
  end;

{ I341_XMLDm_diagnosticoCID10List341 }

  I341_XMLDm_diagnosticoCID10List341 = interface(IXMLNodeCollection)
    ['{620DEFAC-4C75-435A-BC0B-BAD198A1C51E}']
    { Methods & Properties }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
    property Items[Index: Integer]: WideString read Get_Item; default;
  end;

{ Forward Decls }

  T341_XMLMensagemTISS = class;
  T341_XMLCabecalhoTransacao = class;
  T341_XMLCabecalhoTransacao_identificacaoTransacao = class;
  T341_XMLCabecalhoTransacao_origem = class;
  T341_XMLCt_prestadorIdentificacao = class;
  T341_XMLCabecalhoTransacao_origem_identificacaoPrestador = class;
  T341_XMLCabecalhoTransacao_destino = class;
  T341_XMLCt_loginSenha = class;
  T341_XMLOperadoraPrestador = class;
  T341_XMLCt_recebimentoLote = class;
  T341_XMLCt_motivoGlosa = class;
  T341_XMLCt_motivoGlosaList341 = class;
  T341_XMLCt_protocoloRecebimento = class;
  T341_XMLCt_contratadoDados = class;
  T341_XMLCt_protocoloDetalhe = class;
  T341_XMLCt_protocoloDetalhe_glosaProtocolo = class;
  T341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa = class;
  T341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo = class;
  T341_XMLCt_guiaDados = class;
  T341_XMLCt_guiaDadosList341 = class;
  T341_XMLCt_beneficiarioDados = class;
  T341_XMLCt_valorTotal = class;
  T341_XMLCt_guiaDados_glosaGuia = class;
  T341_XMLCt_guiaDados_procedimentosRealizados = class;
  T341_XMLCt_procedimentoExecutado = class;
  T341_XMLCt_procedimentoDados = class;
  T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado = class;
  T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento = class;
  T341_XMLCt_guiaDadosOdonto = class;
  T341_XMLCt_guiaDadosOdontoList341 = class;
  T341_XMLCt_guiaDadosOdonto_glosaGuia = class;
  T341_XMLCt_guiaDadosOdonto_procedimentosRealizados = class;
  T341_XMLCt_procedimentoExecutadoOdonto = class;
  T341_XMLCt_procedimentoExecutadoOdonto_denteRegiao = class;
  T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado = class;
  T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento = class;
  T341_XMLOperadoraPrestador_recebimentoAnexo = class;
  T341_XMLCt_anexoRecebimento = class;
  T341_XMLCt_anexoRecebimento_anexosClinicos = class;
  T341_XMLCtm_autorizacaoOPME = class;
  T341_XMLCt_autorizacaoDados = class;
  T341_XMLCtm_autorizacaoOPME_motivosNegativa = class;
  T341_XMLCt_procedimentoAutorizado = class;
  T341_XMLCt_procedimentoAutorizado_motivosNegativa = class;
  T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME = class;
  T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341 = class;
  T341_XMLCtm_autorizacaoQuimio = class;
  T341_XMLCt_dadosComplementaresBeneficiario = class;
  T341_XMLCtm_anexoSolicitante = class;
  T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia = class;
  T341_XMLCt_diagnosticoOncologico = class;
  T341_XMLCtm_autorizacaoQuimio_drogasSolicitadas = class;
  T341_XMLCt_drogasSolicitadas = class;
  T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores = class;
  T341_XMLCtm_autorizacaoQuimio_motivosNegativa = class;
  T341_XMLCtm_autorizacaoRadio = class;
  T341_XMLCt_dadosComplementaresBeneficiarioRadio = class;
  T341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio = class;
  T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores = class;
  T341_XMLCtm_autorizacaoRadio_motivosNegativa = class;
  T341_XMLCto_anexoSituacaoInicial = class;
  T341_XMLCto_anexoSituacaoInicialList341 = class;
  T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial = class;
  T341_XMLCt_situacaoClinica = class;
  T341_XMLCt_situacaoClinica_dentes = class;
  T341_XMLCt_recebimentoRecurso = class;
  T341_XMLCt_recursoGlosaRecebimento = class;
  T341_XMLCt_recursoGlosaRecebimento_recursoProtocolo = class;
  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso = class;
  T341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341 = class;
  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia = class;
  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia = class;
  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341 = class;
  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia = class;
  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341 = class;
  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao = class;
  T341_XMLCt_demonstrativoRetorno = class;
  T341_XMLCtm_demonstrativoAnaliseConta = class;
  T341_XMLCtm_demonstrativoAnaliseContaList341 = class;
  T341_XMLCt_demonstrativoCabecalho = class;
  T341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador = class;
  T341_XMLCtm_demonstrativoAnaliseConta_dadosConta = class;
  T341_XMLCt_contaMedicaResumo = class;
  T341_XMLCt_contaMedicaResumo_relacaoGuias = class;
  T341_XMLCt_contaMedicaResumo_relacaoGuiasList341 = class;
  T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia = class;
  T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341 = class;
  T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa = class;
  T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341 = class;
  T341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo = class;
  T341_XMLCtm_demonstrativoPagamento = class;
  T341_XMLCtm_demonstrativoPagamento_dadosContratado = class;
  T341_XMLCtm_demonstrativoPagamento_pagamentos = class;
  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData = class;
  T341_XMLCt_pagamentoDados = class;
  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo = class;
  T341_XMLCt_dadosResumoDemonstrativo = class;
  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData = class;
  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData = class;
  T341_XMLCt_descontos = class;
  T341_XMLCt_descontosList341 = class;
  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData = class;
  T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo = class;
  T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo = class;
  T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo = class;
  T341_XMLCto_demonstrativoOdontologia = class;
  T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto = class;
  T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPrestador = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341 = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341 = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341 = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341 = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento = class;
  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData = class;
  T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo = class;
  T341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo = class;
  T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno = class;
  T341_XMLCt_situacaoProtocolo = class;
  T341_XMLCt_protocoloStatus = class;
  T341_XMLCt_protocoloStatus_lote = class;
  T341_XMLCt_loteStatus = class;
  T341_XMLCt_loteStatus_guiasTISS = class;
  T341_XMLCt_loteStatus_guiasTISS_guiasMedicas = class;
  T341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341 = class;
  T341_XMLCt_loteStatus_guiasTISS_guiasOdonto = class;
  T341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341 = class;
  T341_XMLCt_protocoloAnexoStatus = class;
  T341_XMLCt_protocoloAnexoStatus_loteAnexo = class;
  T341_XMLCt_loteAnexoStatus = class;
  T341_XMLCt_loteAnexoStatus_anexosClinicos = class;
  T341_XMLCt_situacaoAutorizacao = class;
  T341_XMLCtm_autorizacaoInternacao = class;
  T341_XMLCtm_autorizacaoServico = class;
  T341_XMLCtm_autorizacaoServico_prestadorAutorizado = class;
  T341_XMLCtm_autorizacaoServico_motivosNegativa = class;
  T341_XMLCtm_autorizacaoServico_servicosAutorizados = class;
  T341_XMLCtm_autorizacaoProrrogacao = class;
  T341_XMLCto_autorizacaoServico = class;
  T341_XMLCto_autorizacaoServico_procedimentosAutorizados = class;
  T341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341 = class;
  T341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao = class;
  T341_XMLCto_autorizacaoServico_motivosNegativa = class;
  T341_XMLOperadoraPrestador_respostaElegibilidade = class;
  T341_XMLCt_elegibilidadeRecibo = class;
  T341_XMLCt_elegibilidadeRecibo_motivosNegativa = class;
  T341_XMLCt_reciboCancelaGuia = class;
  T341_XMLCt_guiaCancelamentoRecibo = class;
  T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas = class;
  T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia = class;
  T341_XMLCt_reciboComunicacao = class;
  T341_XMLCtm_beneficiarioComunicacaoRecibo = class;
  T341_XMLCtm_beneficiarioComunicacao = class;
  T341_XMLCtm_beneficiarioComunicacao_dadosInternacao = class;
  T341_XMLCt_respostaGlosa = class;
  T341_XMLCt_glosaRecibo = class;
  T341_XMLCt_glosaRecibo_dadosContratado = class;
  T341_XMLCt_glosaRecibo_opcaoRecurso = class;
  T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo = class;
  T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia = class;
  T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341 = class;
  T341_XMLCt_respostaGlosaGuiaMedica = class;
  T341_XMLCt_respostaGlosaItemMedico = class;
  T341_XMLCt_glosaReciboOdonto = class;
  T341_XMLCt_glosaReciboOdonto_dadosContratado = class;
  T341_XMLCt_glosaReciboOdonto_opcaoRecurso = class;
  T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo = class;
  T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia = class;
  T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341 = class;
  T341_XMLCt_respostaRecursoGuiaOdonto = class;
  T341_XMLCt_respostaRecursoItemOdonto = class;
  T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento = class;
  T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341 = class;
  T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao = class;
  T341_XMLCt_respostaGlosa_reciboGlosaStatus = class;
  T341_XMLPrestadorOperadora = class;
  T341_XMLCtm_guiaLote = class;
  T341_XMLCtm_guiaLote_guiasTISS = class;
  T341_XMLCtm_spsadtGuia = class;
  T341_XMLCtm_spsadtGuiaList341 = class;
  T341_XMLCt_guiaCabecalho = class;
  T341_XMLCtm_spsadtGuia_cabecalhoGuia = class;
  T341_XMLCt_autorizacaoSADT = class;
  T341_XMLCtm_spsadtGuia_dadosSolicitante = class;
  T341_XMLCt_contratadoProfissionalDados = class;
  T341_XMLCtm_spsadtGuia_dadosSolicitacao = class;
  T341_XMLCtm_spsadtGuia_dadosExecutante = class;
  T341_XMLCtm_spsadtAtendimento = class;
  T341_XMLCtm_spsadtGuia_procedimentosExecutados = class;
  T341_XMLCt_procedimentoExecutadoSadt = class;
  T341_XMLCt_identEquipeSADT = class;
  T341_XMLCt_identEquipeSADTList341 = class;
  T341_XMLCt_identEquipeSADT_codProfissional = class;
  T341_XMLCt_outrasDespesas = class;
  T341_XMLCt_outrasDespesas_despesa = class;
  T341_XMLCt_procedimentoExecutadoOutras = class;
  T341_XMLCt_guiaValorTotal = class;
  T341_XMLIXMLSignatureType_ds = class;
  T341_XMLIXMLSignedInfoType_ds = class;
  T341_XMLIXMLCanonicalizationMethodType_ds = class;
  T341_XMLIXMLSignatureMethodType_ds = class;
  T341_XMLIXMLReferenceType_ds = class;
  T341_XMLIXMLReferenceType_dsList341 = class;
  T341_XMLIXMLTransformsType_ds = class;
  T341_XMLIXMLTransformType_ds = class;
  T341_XMLIXMLDigestMethodType_ds = class;
  T341_XMLIXMLSignatureValueType_ds = class;
  T341_XMLIXMLKeyInfoType_ds = class;
  T341_XMLIXMLKeyValueType_ds = class;
  T341_XMLIXMLKeyValueType_dsList341 = class;
  T341_XMLIXMLDSAKeyValueType_ds = class;
  T341_XMLIXMLRSAKeyValueType_ds = class;
  T341_XMLIXMLRetrievalMethodType_ds = class;
  T341_XMLIXMLRetrievalMethodType_dsList341 = class;
  T341_XMLIXMLX509DataType_ds = class;
  T341_XMLIXMLX509DataType_dsList341 = class;
  T341_XMLIXMLX509IssuerSerialType_ds = class;
  T341_XMLIXMLX509IssuerSerialType_dsList341 = class;
  T341_XMLIXMLPGPDataType_ds = class;
  T341_XMLIXMLPGPDataType_dsList341 = class;
  T341_XMLIXMLSPKIDataType_ds = class;
  T341_XMLIXMLSPKIDataType_dsList341 = class;
  T341_XMLIXMLObjectType_ds = class;
  T341_XMLIXMLObjectType_dsList341 = class;
  T341_XMLSignature = class;
  T341_XMLCtm_internacaoResumoGuia = class;
  T341_XMLCtm_internacaoResumoGuiaList341 = class;
  T341_XMLCt_autorizacaoInternacao = class;
  T341_XMLCtm_internacaoResumoGuia_dadosExecutante = class;
  T341_XMLCtm_internacaoDados = class;
  T341_XMLCtm_internacaoDados_declaracoes = class;
  T341_XMLCtm_internacaoDados_declaracoesList341 = class;
  T341_XMLCtm_internacaoDadosSaida = class;
  T341_XMLCtm_internacaoResumoGuia_procedimentosExecutados = class;
  T341_XMLCt_procedimentoExecutadoInt = class;
  T341_XMLCt_procedimentoExecutadoInt_identEquipe = class;
  T341_XMLCt_procedimentoExecutadoInt_identEquipeList341 = class;
  T341_XMLCt_identEquipe = class;
  T341_XMLCt_identEquipe_codProfissional = class;
  T341_XMLCtm_honorarioIndividualGuia = class;
  T341_XMLCtm_honorarioIndividualGuiaList341 = class;
  T341_XMLCtm_honorarioIndividualGuia_beneficiario = class;
  T341_XMLCtm_honorarioIndividualGuia_localContratado = class;
  T341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado = class;
  T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante = class;
  T341_XMLCtm_honorarioIndividualGuia_dadosInternacao = class;
  T341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados = class;
  T341_XMLCt_procedimentoExecutadoHonorIndiv = class;
  T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais = class;
  T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341 = class;
  T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional = class;
  T341_XMLCtm_consultaGuia = class;
  T341_XMLCtm_consultaGuiaList341 = class;
  T341_XMLCtm_consultaGuia_contratadoExecutante = class;
  T341_XMLCtm_consultaAtendimento = class;
  T341_XMLCtm_consultaAtendimento_procedimento = class;
  T341_XMLCto_guiaOdontologia = class;
  T341_XMLCto_guiaOdontologiaList341 = class;
  T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis = class;
  T341_XMLCto_guiaOdontologia_procedimentosExecutados = class;
  T341_XMLCto_guiaOdontologia_procedimentosExecutadosList341 = class;
  T341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao = class;
  T341_XMLCto_anexoSituacaoInicialnaGTO = class;
  T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial = class;
  T341_XMLCt_anexoLote = class;
  T341_XMLCt_anexoLote_AnexosGuiasTISS = class;
  T341_XMLCtm_anexoSolicitacaoRadio = class;
  T341_XMLCt_anexoCabecalho = class;
  T341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio = class;
  T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores = class;
  T341_XMLCtm_anexoSolicitacaoQuimio = class;
  T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia = class;
  T341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas = class;
  T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores = class;
  T341_XMLCtm_anexoSolicitacaoOPME = class;
  T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas = class;
  T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada = class;
  T341_XMLCt_demonstrativoSolicitacao = class;
  T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento = class;
  T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo = class;
  T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise = class;
  T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos = class;
  T341_XMLCt_protocoloSolicitacaoStatus = class;
  T341_XMLCtm_solicitacaoLote = class;
  T341_XMLCtm_spsadtSolicitacaoGuia = class;
  T341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante = class;
  T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados = class;
  T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341 = class;
  T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante = class;
  T341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico = class;
  T341_XMLCtm_internacaoSolicitacaoGuia = class;
  T341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante = class;
  T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado = class;
  T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao = class;
  T341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas = class;
  T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados = class;
  T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341 = class;
  T341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico = class;
  T341_XMLCtm_prorrogacaoSolicitacaoGuia = class;
  T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario = class;
  T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao = class;
  T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais = class;
  T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341 = class;
  T341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao = class;
  T341_XMLCto_odontoSolicitacaoGuia = class;
  T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis = class;
  T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados = class;
  T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341 = class;
  T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao = class;
  T341_XMLCt_solicitacaoProcedimento = class;
  T341_XMLCt_autorizacaoSolicitaStatus = class;
  T341_XMLCt_elegibilidadeVerifica = class;
  T341_XMLCt_guiaCancelamento = class;
  T341_XMLCt_guiaCancelamento_guiasCancelamento = class;
  T341_XMLCt_guiaCancelamento_guiasCancelamentoList341 = class;
  T341_XMLCt_guiaRecursoLote = class;
  T341_XMLCto_recursoGlosaOdonto = class;
  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso = class;
  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo = class;
  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia = class;
  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341 = class;
  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento = class;
  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341 = class;
  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao = class;
  T341_XMLCtm_recursoGlosa = class;
  T341_XMLCtm_recursoGlosa_opcaoRecurso = class;
  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo = class;
  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia = class;
  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341 = class;
  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia = class;
  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta = class;
  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341 = class;
  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia = class;
  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341 = class;
  T341_XMLEpilogo = class;
  T341_XMLCt_creditoOdonto = class;
  T341_XMLCt_diagnostico = class;
  T341_XMLCt_fontePagadora = class;
  T341_XMLCt_guiaDadosAnexo = class;
  T341_XMLCt_guiaDadosAnexoList341 = class;
  T341_XMLCt_guiaDadosAnexo_glosaAnexo = class;
  T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados = class;
  T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado = class;
  T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento = class;
  T341_XMLCt_guiaRecurso = class;
  T341_XMLCt_guiaRecursoList341 = class;
  T341_XMLCt_guiaValorTotalSADT = class;
  T341_XMLCt_hipoteseDiagnostica = class;
  T341_XMLCt_intervaloCiclos = class;
  T341_XMLCt_opmeDados = class;
  T341_XMLCt_opmUtilizada = class;
  T341_XMLCt_opmUtilizada_OPM = class;
  T341_XMLCt_opmUtilizada_OPM_identificacaoOPM = class;
  T341_XMLCt_pagamentoResumo = class;
  T341_XMLCt_procedimentosComplementares = class;
  T341_XMLCt_procedimentoSolicitado = class;
  T341_XMLCt_protocoloDetalheAnexo = class;
  T341_XMLCt_protocoloRecurso = class;
  T341_XMLCt_protocoloRecebimentoAnexo = class;
  T341_XMLCt_protocoloRecebimentoRecurso = class;
  T341_XMLCt_respostaElegibilidade = class;
  T341_XMLCt_valorCreditoDesconto = class;
  T341_XMLString_List341 = class;
  T341_XMLBase64BinaryList341 = class;
  T341_XMLSt_texto4List341 = class;
  T341_XMLDm_tipoGlosaList341 = class;
  T341_XMLDm_diagnosticoCID10List341 = class;

{ T341_XMLMensagemTISS }

  T341_XMLMensagemTISS = class(TXMLNode, I341_XMLMensagemTISS)
  protected
    { I341_XMLMensagemTISS }
    function Get_Cabecalho: I341_XMLCabecalhoTransacao;
    function Get_OperadoraParaPrestador: I341_XMLOperadoraPrestador;
    function Get_PrestadorParaOperadora: I341_XMLPrestadorOperadora;
    function Get_Epilogo: I341_XMLEpilogo;
    function Get_Signature: IXMLSignatureType_ds;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCabecalhoTransacao }

  T341_XMLCabecalhoTransacao = class(TXMLNode, I341_XMLCabecalhoTransacao)
  protected
    { I341_XMLCabecalhoTransacao }
    function Get_IdentificacaoTransacao: I341_XMLCabecalhoTransacao_identificacaoTransacao;
    function Get_FalhaNegocio: WideString;
    function Get_Origem: I341_XMLCabecalhoTransacao_origem;
    function Get_Destino: I341_XMLCabecalhoTransacao_destino;
    function Get_Padrao: WideString;
    function Get_LoginSenhaPrestador: I341_XMLCt_loginSenha;
    procedure Set_FalhaNegocio(Value: WideString);
    procedure Set_Padrao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCabecalhoTransacao_identificacaoTransacao }

  T341_XMLCabecalhoTransacao_identificacaoTransacao = class(TXMLNode, I341_XMLCabecalhoTransacao_identificacaoTransacao)
  protected
    { I341_XMLCabecalhoTransacao_identificacaoTransacao }
    function Get_TipoTransacao: WideString;
    function Get_SequencialTransacao: WideString;
    function Get_DataRegistroTransacao: WideString;
    function Get_HoraRegistroTransacao: WideString;
    procedure Set_TipoTransacao(Value: WideString);
    procedure Set_SequencialTransacao(Value: WideString);
    procedure Set_DataRegistroTransacao(Value: WideString);
    procedure Set_HoraRegistroTransacao(Value: WideString);
  end;

{ T341_XMLCabecalhoTransacao_origem }

  T341_XMLCabecalhoTransacao_origem = class(TXMLNode, I341_XMLCabecalhoTransacao_origem)
  protected
    { I341_XMLCabecalhoTransacao_origem }
    function Get_IdentificacaoPrestador: I341_XMLCabecalhoTransacao_origem_identificacaoPrestador;
    function Get_RegistroANS: WideString;
    procedure Set_RegistroANS(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_prestadorIdentificacao }

  T341_XMLCt_prestadorIdentificacao = class(TXMLNode, I341_XMLCt_prestadorIdentificacao)
  protected
    { I341_XMLCt_prestadorIdentificacao }
    function Get_CNPJ: WideString;
    function Get_CPF: WideString;
    function Get_CodigoPrestadorNaOperadora: WideString;
    procedure Set_CNPJ(Value: WideString);
    procedure Set_CPF(Value: WideString);
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
  end;

{ T341_XMLCabecalhoTransacao_origem_identificacaoPrestador }

  T341_XMLCabecalhoTransacao_origem_identificacaoPrestador = class(T341_XMLCt_prestadorIdentificacao, I341_XMLCabecalhoTransacao_origem_identificacaoPrestador)
  protected
    { I341_XMLCabecalhoTransacao_origem_identificacaoPrestador }
  end;

{ T341_XMLCabecalhoTransacao_destino }

  T341_XMLCabecalhoTransacao_destino = class(TXMLNode, I341_XMLCabecalhoTransacao_destino)
  protected
    { I341_XMLCabecalhoTransacao_destino }
    function Get_IdentificacaoPrestador: I341_XMLCt_prestadorIdentificacao;
    function Get_RegistroANS: WideString;
    procedure Set_RegistroANS(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_loginSenha }

  T341_XMLCt_loginSenha = class(TXMLNode, I341_XMLCt_loginSenha)
  protected
    { I341_XMLCt_loginSenha }
    function Get_LoginPrestador: WideString;
    function Get_SenhaPrestador: WideString;
    procedure Set_LoginPrestador(Value: WideString);
    procedure Set_SenhaPrestador(Value: WideString);
  end;

{ T341_XMLOperadoraPrestador }

  T341_XMLOperadoraPrestador = class(TXMLNode, I341_XMLOperadoraPrestador)
  protected
    { I341_XMLOperadoraPrestador }
    function Get_RecebimentoLote: I341_XMLCt_recebimentoLote;
    function Get_RecebimentoAnexo: I341_XMLOperadoraPrestador_recebimentoAnexo;
    function Get_RecebimentoRecursoGlosa: I341_XMLCt_recebimentoRecurso;
    function Get_DemonstrativosRetorno: I341_XMLCt_demonstrativoRetorno;
    function Get_SituacaoProtocolo: I341_XMLCt_situacaoProtocolo;
    function Get_AutorizacaoServicos: I341_XMLCt_situacaoAutorizacao;
    function Get_SituacaoAutorizacao: I341_XMLCt_situacaoAutorizacao;
    function Get_RespostaElegibilidade: I341_XMLOperadoraPrestador_respostaElegibilidade;
    function Get_ReciboCancelaGuia: I341_XMLCt_reciboCancelaGuia;
    function Get_ReciboComunicacao: I341_XMLCt_reciboComunicacao;
    function Get_RespostaRecursoGlosa: I341_XMLCt_respostaGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_recebimentoLote }

  T341_XMLCt_recebimentoLote = class(TXMLNode, I341_XMLCt_recebimentoLote)
  protected
    { I341_XMLCt_recebimentoLote }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ProtocoloRecebimento: I341_XMLCt_protocoloRecebimento;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_motivoGlosa }

  T341_XMLCt_motivoGlosa = class(TXMLNode, I341_XMLCt_motivoGlosa)
  protected
    { I341_XMLCt_motivoGlosa }
    function Get_CodigoGlosa: WideString;
    function Get_DescricaoGlosa: WideString;
    procedure Set_CodigoGlosa(Value: WideString);
    procedure Set_DescricaoGlosa(Value: WideString);
  end;

{ T341_XMLCt_motivoGlosaList341 }

  T341_XMLCt_motivoGlosaList341 = class(TXMLNodeCollection, I341_XMLCt_motivoGlosaList341)
  protected
    { I341_XMLCt_motivoGlosaList341 }
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;

    function Get_Item(Index: Integer): I341_XMLCt_motivoGlosa;
  end;

{ T341_XMLCt_protocoloRecebimento }

  T341_XMLCt_protocoloRecebimento = class(TXMLNode, I341_XMLCt_protocoloRecebimento)
  protected
    { I341_XMLCt_protocoloRecebimento }
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_DetalheProtocolo: I341_XMLCt_protocoloDetalhe;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_contratadoDados }

  T341_XMLCt_contratadoDados = class(TXMLNode, I341_XMLCt_contratadoDados)
  protected
    { I341_XMLCt_contratadoDados }
    function Get_CodigoPrestadorNaOperadora: WideString;
    function Get_CpfContratado: WideString;
    function Get_CnpjContratado: WideString;
    function Get_NomeContratado: WideString;
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
    procedure Set_CnpjContratado(Value: WideString);
    procedure Set_NomeContratado(Value: WideString);
  end;

{ T341_XMLCt_protocoloDetalhe }

  T341_XMLCt_protocoloDetalhe = class(TXMLNode, I341_XMLCt_protocoloDetalhe)
  protected
    { I341_XMLCt_protocoloDetalhe }
    function Get_NumeroProtocolo: WideString;
    function Get_ValorTotalProtocolo: WideString;
    function Get_GlosaProtocolo: I341_XMLCt_protocoloDetalhe_glosaProtocolo;
    function Get_DadosGuiasProtocolo: I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_ValorTotalProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloDetalhe_glosaProtocolo }

  T341_XMLCt_protocoloDetalhe_glosaProtocolo = class(TXMLNode, I341_XMLCt_protocoloDetalhe_glosaProtocolo)
  protected
    { I341_XMLCt_protocoloDetalhe_glosaProtocolo }
    function Get_MotivosGlosa: I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa;
    function Get_VlGlosaProtocolo: WideString;
    procedure Set_VlGlosaProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa }

  T341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa = class(TXMLNodeCollection, I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa)
  protected
    { I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa }
    function Get_MotivoGlosa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo }

  T341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo = class(TXMLNode, I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo)
  private
    FDadosGuias: I341_XMLCt_guiaDadosList341;
    FDadosGuiasOdonto: I341_XMLCt_guiaDadosOdontoList341;
  protected
    { I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo }
    function Get_DadosGuias: I341_XMLCt_guiaDadosList341;
    function Get_DadosGuiasOdonto: I341_XMLCt_guiaDadosOdontoList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDados }

  T341_XMLCt_guiaDados = class(TXMLNode, I341_XMLCt_guiaDados)
  protected
    { I341_XMLCt_guiaDados }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DataRealizacao: WideString;
    function Get_VlInformadoGuia: I341_XMLCt_valorTotal;
    function Get_GlosaGuia: I341_XMLCt_guiaDados_glosaGuia;
    function Get_ProcedimentosRealizados: I341_XMLCt_guiaDados_procedimentosRealizados;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDadosList341 }

  T341_XMLCt_guiaDadosList341 = class(TXMLNodeCollection, I341_XMLCt_guiaDadosList341)
  protected
    { I341_XMLCt_guiaDadosList341 }
    function Add: I341_XMLCt_guiaDados;
    function Insert(const Index: Integer): I341_XMLCt_guiaDados;

    function Get_Item(Index: Integer): I341_XMLCt_guiaDados;
  end;

{ T341_XMLCt_beneficiarioDados }

  T341_XMLCt_beneficiarioDados = class(TXMLNode, I341_XMLCt_beneficiarioDados)
  protected
    { I341_XMLCt_beneficiarioDados }
    function Get_NumeroCarteira: WideString;
    function Get_AtendimentoRN: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_AtendimentoRN(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
  end;

{ T341_XMLCt_valorTotal }

  T341_XMLCt_valorTotal = class(TXMLNode, I341_XMLCt_valorTotal)
  protected
    { I341_XMLCt_valorTotal }
    function Get_ValorProcessado: WideString;
    function Get_ValorGlosa: WideString;
    function Get_ValorLiberado: WideString;
    procedure Set_ValorProcessado(Value: WideString);
    procedure Set_ValorGlosa(Value: WideString);
    procedure Set_ValorLiberado(Value: WideString);
  end;

{ T341_XMLCt_guiaDados_glosaGuia }

  T341_XMLCt_guiaDados_glosaGuia = class(TXMLNodeCollection, I341_XMLCt_guiaDados_glosaGuia)
  protected
    { I341_XMLCt_guiaDados_glosaGuia }
    function Get_MotivoGlosa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDados_procedimentosRealizados }

  T341_XMLCt_guiaDados_procedimentosRealizados = class(TXMLNodeCollection, I341_XMLCt_guiaDados_procedimentosRealizados)
  protected
    { I341_XMLCt_guiaDados_procedimentosRealizados }
    function Get_ProcedimentoRealizado(Index: Integer): I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
    function Add: I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
    function Insert(const Index: Integer): I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutado }

  T341_XMLCt_procedimentoExecutado = class(TXMLNode, I341_XMLCt_procedimentoExecutado)
  protected
    { I341_XMLCt_procedimentoExecutado }
    function Get_SequencialItem: Integer;
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_UnidadeMedida: WideString;
    function Get_QuantidadeExecutada: WideString;
    function Get_ViaAcesso: WideString;
    function Get_TecnicaUtilizada: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_CodigoDespesa: WideString;
    function Get_FatorReducaoAcrescimo: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_UnidadeMedida(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: WideString);
    procedure Set_ViaAcesso(Value: WideString);
    procedure Set_TecnicaUtilizada(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
    procedure Set_CodigoDespesa(Value: WideString);
    procedure Set_FatorReducaoAcrescimo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoDados }

  T341_XMLCt_procedimentoDados = class(TXMLNode, I341_XMLCt_procedimentoDados)
  protected
    { I341_XMLCt_procedimentoDados }
    function Get_CodigoTabela: WideString;
    function Get_CodigoProcedimento: WideString;
    function Get_DescricaoProcedimento: WideString;
    procedure Set_CodigoTabela(Value: WideString);
    procedure Set_CodigoProcedimento(Value: WideString);
    procedure Set_DescricaoProcedimento(Value: WideString);
  end;

{ T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado }

  T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado = class(T341_XMLCt_procedimentoExecutado, I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado)
  protected
    { I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado }
    function Get_GlosasProcedimento: I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento }

  T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento = class(TXMLNode, I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento)
  private
    FMotivoGlosa: I341_XMLCt_motivoGlosaList341;
  protected
    { I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento }
    function Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
    function Get_ValorGlosaProcedimento: WideString;
    procedure Set_ValorGlosaProcedimento(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDadosOdonto }

  T341_XMLCt_guiaDadosOdonto = class(TXMLNode, I341_XMLCt_guiaDadosOdonto)
  protected
    { I341_XMLCt_guiaDadosOdonto }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_AtendimentoRN: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_VlInformadoGuia: I341_XMLCt_valorTotal;
    function Get_GlosaGuia: I341_XMLCt_guiaDadosOdonto_glosaGuia;
    function Get_ProcedimentosRealizados: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_AtendimentoRN(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDadosOdontoList341 }

  T341_XMLCt_guiaDadosOdontoList341 = class(TXMLNodeCollection, I341_XMLCt_guiaDadosOdontoList341)
  protected
    { I341_XMLCt_guiaDadosOdontoList341 }
    function Add: I341_XMLCt_guiaDadosOdonto;
    function Insert(const Index: Integer): I341_XMLCt_guiaDadosOdonto;

    function Get_Item(Index: Integer): I341_XMLCt_guiaDadosOdonto;
  end;

{ T341_XMLCt_guiaDadosOdonto_glosaGuia }

  T341_XMLCt_guiaDadosOdonto_glosaGuia = class(TXMLNodeCollection, I341_XMLCt_guiaDadosOdonto_glosaGuia)
  protected
    { I341_XMLCt_guiaDadosOdonto_glosaGuia }
    function Get_MotivoGlosa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDadosOdonto_procedimentosRealizados }

  T341_XMLCt_guiaDadosOdonto_procedimentosRealizados = class(TXMLNodeCollection, I341_XMLCt_guiaDadosOdonto_procedimentosRealizados)
  protected
    { I341_XMLCt_guiaDadosOdonto_procedimentosRealizados }
    function Get_ProcedimentoRealizado(Index: Integer): I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
    function Add: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
    function Insert(const Index: Integer): I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoOdonto }

  T341_XMLCt_procedimentoExecutadoOdonto = class(TXMLNode, I341_XMLCt_procedimentoExecutadoOdonto)
  protected
    { I341_XMLCt_procedimentoExecutadoOdonto }
    function Get_SequencialItem: Integer;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_QtdProc: Integer;
    function Get_QtdUS: WideString;
    function Get_ValorProc: WideString;
    function Get_ValorFranquia: WideString;
    function Get_Autorizado: WideString;
    function Get_DataRealizacao: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_QtdUS(Value: WideString);
    procedure Set_ValorProc(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_Autorizado(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoOdonto_denteRegiao }

  T341_XMLCt_procedimentoExecutadoOdonto_denteRegiao = class(TXMLNode, I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao)
  protected
    { I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
  end;

{ T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado }

  T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado = class(T341_XMLCt_procedimentoExecutadoOdonto, I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado)
  protected
    { I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado }
    function Get_GlosasProcedimento: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento }

  T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento = class(TXMLNode, I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento)
  private
    FMotivoGlosa: I341_XMLCt_motivoGlosaList341;
  protected
    { I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento }
    function Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
    function Get_ValorGlosaProcedimento: WideString;
    procedure Set_ValorGlosaProcedimento(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLOperadoraPrestador_recebimentoAnexo }

  T341_XMLOperadoraPrestador_recebimentoAnexo = class(TXMLNode, I341_XMLOperadoraPrestador_recebimentoAnexo)
  protected
    { I341_XMLOperadoraPrestador_recebimentoAnexo }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ProtocoloRecebimentoAnexo: I341_XMLCt_anexoRecebimento;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_anexoRecebimento }

  T341_XMLCt_anexoRecebimento = class(TXMLNode, I341_XMLCt_anexoRecebimento)
  protected
    { I341_XMLCt_anexoRecebimento }
    function Get_NrProtocoloRecebimento: WideString;
    function Get_DataEnvioAnexo: WideString;
    function Get_NumeroLote: WideString;
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_QtAnexosClinicos: Integer;
    function Get_AnexosClinicos: I341_XMLCt_anexoRecebimento_anexosClinicos;
    function Get_Observacao: WideString;
    procedure Set_NrProtocoloRecebimento(Value: WideString);
    procedure Set_DataEnvioAnexo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_QtAnexosClinicos(Value: Integer);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_anexoRecebimento_anexosClinicos }

  T341_XMLCt_anexoRecebimento_anexosClinicos = class(TXMLNode, I341_XMLCt_anexoRecebimento_anexosClinicos)
  private
    FAnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341;
  protected
    { I341_XMLCt_anexoRecebimento_anexosClinicos }
    function Get_AnexoOPME: I341_XMLCtm_autorizacaoOPME;
    function Get_AnexoQuimio: I341_XMLCtm_autorizacaoQuimio;
    function Get_AnexoRadio: I341_XMLCtm_autorizacaoRadio;
    function Get_AnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoOPME }

  T341_XMLCtm_autorizacaoOPME = class(TXMLNode, I341_XMLCtm_autorizacaoOPME)
  private
    FServicosAutorizadosOPME: I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341;
  protected
    { I341_XMLCtm_autorizacaoOPME }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_StatusSolicitacao: WideString;
    function Get_MotivosNegativa: I341_XMLCtm_autorizacaoOPME_motivosNegativa;
    function Get_PrestadorAutorizado: I341_XMLCt_contratadoDados;
    function Get_ServicosAutorizadosOPME: I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341;
    procedure Set_StatusSolicitacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_autorizacaoDados }

  T341_XMLCt_autorizacaoDados = class(TXMLNode, I341_XMLCt_autorizacaoDados)
  protected
    { I341_XMLCt_autorizacaoDados }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_DataAutorizacao: WideString;
    function Get_Senha: WideString;
    function Get_DataValidadeSenha: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataValidadeSenha(Value: WideString);
  end;

{ T341_XMLCtm_autorizacaoOPME_motivosNegativa }

  T341_XMLCtm_autorizacaoOPME_motivosNegativa = class(TXMLNodeCollection, I341_XMLCtm_autorizacaoOPME_motivosNegativa)
  protected
    { I341_XMLCtm_autorizacaoOPME_motivosNegativa }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoAutorizado }

  T341_XMLCt_procedimentoAutorizado = class(TXMLNode, I341_XMLCt_procedimentoAutorizado)
  protected
    { I341_XMLCt_procedimentoAutorizado }
    function Get_SequencialItem: Integer;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeSolicitada: Integer;
    function Get_QuantidadeAutorizada: Integer;
    function Get_ValorSolicitado: WideString;
    function Get_ValorAutorizado: WideString;
    function Get_OpcaoFabricante: WideString;
    function Get_RegistroANVISA: WideString;
    function Get_CodigoRefFabricante: WideString;
    function Get_AutorizacaoFuncionamento: WideString;
    function Get_MotivosNegativa: I341_XMLCt_procedimentoAutorizado_motivosNegativa;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_QuantidadeSolicitada(Value: Integer);
    procedure Set_QuantidadeAutorizada(Value: Integer);
    procedure Set_ValorSolicitado(Value: WideString);
    procedure Set_ValorAutorizado(Value: WideString);
    procedure Set_OpcaoFabricante(Value: WideString);
    procedure Set_RegistroANVISA(Value: WideString);
    procedure Set_CodigoRefFabricante(Value: WideString);
    procedure Set_AutorizacaoFuncionamento(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoAutorizado_motivosNegativa }

  T341_XMLCt_procedimentoAutorizado_motivosNegativa = class(TXMLNodeCollection, I341_XMLCt_procedimentoAutorizado_motivosNegativa)
  protected
    { I341_XMLCt_procedimentoAutorizado_motivosNegativa }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME }

  T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME = class(T341_XMLCt_procedimentoAutorizado, I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME)
  protected
    { I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME }
  end;

{ T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341 }

  T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341 = class(TXMLNodeCollection, I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341)
  protected
    { I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341 }
    function Add: I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
    function Insert(const Index: Integer): I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;

    function Get_Item(Index: Integer): I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
  end;

{ T341_XMLCtm_autorizacaoQuimio }

  T341_XMLCtm_autorizacaoQuimio = class(TXMLNode, I341_XMLCtm_autorizacaoQuimio)
  protected
    { I341_XMLCtm_autorizacaoQuimio }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_NumeroCarteira: WideString;
    function Get_StatusSolicitacao: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiario;
    function Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_DiagnosticoOncologicoQuimioterapia: I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia;
    function Get_DrogasSolicitadas: I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas;
    function Get_TratamentosAnteriores: I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores;
    function Get_NumeroCiclos: Integer;
    function Get_CicloAtual: Integer;
    function Get_DiasCicloAtual: Integer;
    function Get_IntervaloCiclos: Integer;
    function Get_MotivosNegativa: I341_XMLCtm_autorizacaoQuimio_motivosNegativa;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_StatusSolicitacao(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_NumeroCiclos(Value: Integer);
    procedure Set_CicloAtual(Value: Integer);
    procedure Set_DiasCicloAtual(Value: Integer);
    procedure Set_IntervaloCiclos(Value: Integer);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_dadosComplementaresBeneficiario }

  T341_XMLCt_dadosComplementaresBeneficiario = class(TXMLNode, I341_XMLCt_dadosComplementaresBeneficiario)
  protected
    { I341_XMLCt_dadosComplementaresBeneficiario }
    function Get_Peso: WideString;
    function Get_Altura: WideString;
    function Get_SuperficieCorporal: WideString;
    function Get_Idade: Integer;
    function Get_Sexo: WideString;
    procedure Set_Peso(Value: WideString);
    procedure Set_Altura(Value: WideString);
    procedure Set_SuperficieCorporal(Value: WideString);
    procedure Set_Idade(Value: Integer);
    procedure Set_Sexo(Value: WideString);
  end;

{ T341_XMLCtm_anexoSolicitante }

  T341_XMLCtm_anexoSolicitante = class(TXMLNode, I341_XMLCtm_anexoSolicitante)
  protected
    { I341_XMLCtm_anexoSolicitante }
    function Get_NomeProfissional: WideString;
    function Get_TelefoneProfissional: WideString;
    function Get_EmailProfissional: WideString;
    procedure Set_NomeProfissional(Value: WideString);
    procedure Set_TelefoneProfissional(Value: WideString);
    procedure Set_EmailProfissional(Value: WideString);
  end;

{ T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia }

  T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia = class(TXMLNode, I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia)
  protected
    { I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia }
    function Get_DiagQuimio: I341_XMLCt_diagnosticoOncologico;
    function Get_Tumor: WideString;
    function Get_Nodulo: WideString;
    function Get_Metastase: WideString;
    function Get_TipoQuimioterapia: WideString;
    function Get_PlanoTerapeutico: WideString;
    procedure Set_Tumor(Value: WideString);
    procedure Set_Nodulo(Value: WideString);
    procedure Set_Metastase(Value: WideString);
    procedure Set_TipoQuimioterapia(Value: WideString);
    procedure Set_PlanoTerapeutico(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_diagnosticoOncologico }

  T341_XMLCt_diagnosticoOncologico = class(TXMLNode, I341_XMLCt_diagnosticoOncologico)
  private
    FDiagnosticoCID: I341_XMLDm_diagnosticoCID10List341;
  protected
    { I341_XMLCt_diagnosticoOncologico }
    function Get_DataDiagnostico: WideString;
    function Get_DiagnosticoCID: I341_XMLDm_diagnosticoCID10List341;
    function Get_Estadiamento: WideString;
    function Get_Finalidade: WideString;
    function Get_Ecog: WideString;
    function Get_DiagnosticoHispatologico: WideString;
    function Get_InfoRelevantes: WideString;
    procedure Set_DataDiagnostico(Value: WideString);
    procedure Set_Estadiamento(Value: WideString);
    procedure Set_Finalidade(Value: WideString);
    procedure Set_Ecog(Value: WideString);
    procedure Set_DiagnosticoHispatologico(Value: WideString);
    procedure Set_InfoRelevantes(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoQuimio_drogasSolicitadas }

  T341_XMLCtm_autorizacaoQuimio_drogasSolicitadas = class(TXMLNodeCollection, I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas)
  protected
    { I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas }
    function Get_DrogaSolicitada(Index: Integer): I341_XMLCt_drogasSolicitadas;
    function Add: I341_XMLCt_drogasSolicitadas;
    function Insert(const Index: Integer): I341_XMLCt_drogasSolicitadas;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_drogasSolicitadas }

  T341_XMLCt_drogasSolicitadas = class(TXMLNode, I341_XMLCt_drogasSolicitadas)
  protected
    { I341_XMLCt_drogasSolicitadas }
    function Get_DataProvavel: WideString;
    function Get_Identificacao: I341_XMLCt_procedimentoDados;
    function Get_QtDoses: WideString;
    function Get_UnidadeMedida: WideString;
    function Get_ViaAdministracao: WideString;
    function Get_Frequencia: Integer;
    procedure Set_DataProvavel(Value: WideString);
    procedure Set_QtDoses(Value: WideString);
    procedure Set_UnidadeMedida(Value: WideString);
    procedure Set_ViaAdministracao(Value: WideString);
    procedure Set_Frequencia(Value: Integer);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores }

  T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores = class(TXMLNode, I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores)
  protected
    { I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores }
    function Get_Cirurgia: WideString;
    function Get_Datacirurgia: WideString;
    function Get_AreaIrradiada: WideString;
    function Get_DataIrradiacao: WideString;
    procedure Set_Cirurgia(Value: WideString);
    procedure Set_Datacirurgia(Value: WideString);
    procedure Set_AreaIrradiada(Value: WideString);
    procedure Set_DataIrradiacao(Value: WideString);
  end;

{ T341_XMLCtm_autorizacaoQuimio_motivosNegativa }

  T341_XMLCtm_autorizacaoQuimio_motivosNegativa = class(TXMLNodeCollection, I341_XMLCtm_autorizacaoQuimio_motivosNegativa)
  protected
    { I341_XMLCtm_autorizacaoQuimio_motivosNegativa }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoRadio }

  T341_XMLCtm_autorizacaoRadio = class(TXMLNode, I341_XMLCtm_autorizacaoRadio)
  protected
    { I341_XMLCtm_autorizacaoRadio }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_StatusSolicitacao: WideString;
    function Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiarioRadio;
    function Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_DiagnosticoOncologicoRadio: I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio;
    function Get_TratamentosAnteriores: I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores;
    function Get_NumeroCampos: Integer;
    function Get_DoseCampo: Integer;
    function Get_DoseTotal: Integer;
    function Get_NrDias: Integer;
    function Get_DtPrevistaInicio: WideString;
    function Get_MotivosNegativa: I341_XMLCtm_autorizacaoRadio_motivosNegativa;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_StatusSolicitacao(Value: WideString);
    procedure Set_NumeroCampos(Value: Integer);
    procedure Set_DoseCampo(Value: Integer);
    procedure Set_DoseTotal(Value: Integer);
    procedure Set_NrDias(Value: Integer);
    procedure Set_DtPrevistaInicio(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_dadosComplementaresBeneficiarioRadio }

  T341_XMLCt_dadosComplementaresBeneficiarioRadio = class(TXMLNode, I341_XMLCt_dadosComplementaresBeneficiarioRadio)
  protected
    { I341_XMLCt_dadosComplementaresBeneficiarioRadio }
    function Get_Idade: Integer;
    function Get_Sexo: WideString;
    procedure Set_Idade(Value: Integer);
    procedure Set_Sexo(Value: WideString);
  end;

{ T341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio }

  T341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio = class(TXMLNode, I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio)
  protected
    { I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio }
    function Get_DiagRadio: I341_XMLCt_diagnosticoOncologico;
    function Get_DiagnosticoImagem: WideString;
    procedure Set_DiagnosticoImagem(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores }

  T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores = class(TXMLNode, I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores)
  protected
    { I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores }
    function Get_Cirurgia: WideString;
    function Get_Datacirurgia: WideString;
    function Get_Quimioterapia: WideString;
    function Get_DataQuimioterapia: WideString;
    procedure Set_Cirurgia(Value: WideString);
    procedure Set_Datacirurgia(Value: WideString);
    procedure Set_Quimioterapia(Value: WideString);
    procedure Set_DataQuimioterapia(Value: WideString);
  end;

{ T341_XMLCtm_autorizacaoRadio_motivosNegativa }

  T341_XMLCtm_autorizacaoRadio_motivosNegativa = class(TXMLNodeCollection, I341_XMLCtm_autorizacaoRadio_motivosNegativa)
  protected
    { I341_XMLCtm_autorizacaoRadio_motivosNegativa }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_anexoSituacaoInicial }

  T341_XMLCto_anexoSituacaoInicial = class(TXMLNode, I341_XMLCto_anexoSituacaoInicial)
  protected
    { I341_XMLCto_anexoSituacaoInicial }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaAnexo: WideString;
    function Get_NumeroGuiaReferenciada: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_Ct_situacaoInicial: I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaAnexo(Value: WideString);
    procedure Set_NumeroGuiaReferenciada(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_anexoSituacaoInicialList341 }

  T341_XMLCto_anexoSituacaoInicialList341 = class(TXMLNodeCollection, I341_XMLCto_anexoSituacaoInicialList341)
  protected
    { I341_XMLCto_anexoSituacaoInicialList341 }
    function Add: I341_XMLCto_anexoSituacaoInicial;
    function Insert(const Index: Integer): I341_XMLCto_anexoSituacaoInicial;

    function Get_Item(Index: Integer): I341_XMLCto_anexoSituacaoInicial;
  end;

{ T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial }

  T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial = class(TXMLNode, I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial)
  protected
    { I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial }
    function Get_SituacaoClinica: I341_XMLCt_situacaoClinica;
    function Get_DoencaPeriodontal: Boolean;
    function Get_AlteracaoTecidoMole: Boolean;
    function Get_Observacao: WideString;
    procedure Set_DoencaPeriodontal(Value: Boolean);
    procedure Set_AlteracaoTecidoMole(Value: Boolean);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_situacaoClinica }

  T341_XMLCt_situacaoClinica = class(TXMLNodeCollection, I341_XMLCt_situacaoClinica)
  protected
    { I341_XMLCt_situacaoClinica }
    function Get_Dentes(Index: Integer): I341_XMLCt_situacaoClinica_dentes;
    function Add: I341_XMLCt_situacaoClinica_dentes;
    function Insert(const Index: Integer): I341_XMLCt_situacaoClinica_dentes;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_situacaoClinica_dentes }

  T341_XMLCt_situacaoClinica_dentes = class(TXMLNode, I341_XMLCt_situacaoClinica_dentes)
  protected
    { I341_XMLCt_situacaoClinica_dentes }
    function Get_ElementoDentario: WideString;
    function Get_CondicaoClinica: WideString;
    procedure Set_ElementoDentario(Value: WideString);
    procedure Set_CondicaoClinica(Value: WideString);
  end;

{ T341_XMLCt_recebimentoRecurso }

  T341_XMLCt_recebimentoRecurso = class(TXMLNode, I341_XMLCt_recebimentoRecurso)
  protected
    { I341_XMLCt_recebimentoRecurso }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ProtocoloRecebimento: I341_XMLCt_recursoGlosaRecebimento;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_recursoGlosaRecebimento }

  T341_XMLCt_recursoGlosaRecebimento = class(TXMLNode, I341_XMLCt_recursoGlosaRecebimento)
  private
    FGuiasRecurso: I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341;
  protected
    { I341_XMLCt_recursoGlosaRecebimento }
    function Get_NrProtocoloRecursoGlosa: WideString;
    function Get_DataEnvioRecurso: WideString;
    function Get_DataRecebimentoRecurso: WideString;
    function Get_NumeroLote: WideString;
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NrProtocoloRecursado: WideString;
    function Get_RecursoProtocolo: I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo;
    function Get_QtGuiasRecurso: Integer;
    function Get_GuiasRecurso: I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341;
    function Get_Observacao: WideString;
    function Get_ValorTotalRecursado: WideString;
    procedure Set_NrProtocoloRecursoGlosa(Value: WideString);
    procedure Set_DataEnvioRecurso(Value: WideString);
    procedure Set_DataRecebimentoRecurso(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NrProtocoloRecursado(Value: WideString);
    procedure Set_QtGuiasRecurso(Value: Integer);
    procedure Set_Observacao(Value: WideString);
    procedure Set_ValorTotalRecursado(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_recursoGlosaRecebimento_recursoProtocolo }

  T341_XMLCt_recursoGlosaRecebimento_recursoProtocolo = class(TXMLNode, I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo)
  protected
    { I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
  end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso }

  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso = class(TXMLNode, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso)
  protected
    { I341_XMLCt_recursoGlosaRecebimento_guiasRecurso }
    function Get_NumeroGuiaOrigem: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_OpcaoRecursoGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia;
    procedure Set_NumeroGuiaOrigem(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341 }

  T341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341 = class(TXMLNodeCollection, I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341)
  protected
    { I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341 }
    function Add: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
    function Insert(const Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;

    function Get_Item(Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
  end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia }

  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia = class(TXMLNode, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia)
  private
    FRecursoGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341;
    FItensGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341;
  protected
    { I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia }
    function Get_RecursoGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341;
    function Get_ItensGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia }

  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia = class(TXMLNode, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia)
  protected
    { I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia }
    function Get_CodGlosaGuia: WideString;
    function Get_JustificativaGuia: WideString;
    procedure Set_CodGlosaGuia(Value: WideString);
    procedure Set_JustificativaGuia(Value: WideString);
  end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341 }

  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341 = class(TXMLNodeCollection, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341)
  protected
    { I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341 }
    function Add: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
  end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia }

  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia = class(TXMLNode, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia)
  protected
    { I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia }
    function Get_SequencialItem: Integer;
    function Get_DataInicio: WideString;
    function Get_DataFim: WideString;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_CodGlosaItem: WideString;
    function Get_ValorRecursado: WideString;
    function Get_JustificativaItem: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataInicio(Value: WideString);
    procedure Set_DataFim(Value: WideString);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_CodGlosaItem(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
    procedure Set_JustificativaItem(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341 }

  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341 = class(TXMLNodeCollection, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341)
  protected
    { I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341 }
    function Add: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
    function Insert(const Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;

    function Get_Item(Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
  end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao }

  T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao = class(TXMLNode, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao)
  protected
    { I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
  end;

{ T341_XMLCt_demonstrativoRetorno }

  T341_XMLCt_demonstrativoRetorno = class(TXMLNode, I341_XMLCt_demonstrativoRetorno)
  private
    FDemonstrativoAnaliseConta: I341_XMLCtm_demonstrativoAnaliseContaList341;
  protected
    { I341_XMLCt_demonstrativoRetorno }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_DemonstrativoAnaliseConta: I341_XMLCtm_demonstrativoAnaliseContaList341;
    function Get_DemonstrativoPagamento: I341_XMLCtm_demonstrativoPagamento;
    function Get_DemonstrativoPagamentoOdonto: I341_XMLCto_demonstrativoOdontologia;
    function Get_SituacaoDemonstrativoRetorno: I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_demonstrativoAnaliseConta }

  T341_XMLCtm_demonstrativoAnaliseConta = class(TXMLNode, I341_XMLCtm_demonstrativoAnaliseConta)
  protected
    { I341_XMLCtm_demonstrativoAnaliseConta }
    function Get_CabecalhoDemonstrativo: I341_XMLCt_demonstrativoCabecalho;
    function Get_DadosPrestador: I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador;
    function Get_DadosConta: I341_XMLCtm_demonstrativoAnaliseConta_dadosConta;
    function Get_ValorInformadoGeral: WideString;
    function Get_ValorProcessadoGeral: WideString;
    function Get_ValorLiberadoGeral: WideString;
    function Get_ValorGlosaGeral: WideString;
    procedure Set_ValorInformadoGeral(Value: WideString);
    procedure Set_ValorProcessadoGeral(Value: WideString);
    procedure Set_ValorLiberadoGeral(Value: WideString);
    procedure Set_ValorGlosaGeral(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_demonstrativoAnaliseContaList341 }

  T341_XMLCtm_demonstrativoAnaliseContaList341 = class(TXMLNodeCollection, I341_XMLCtm_demonstrativoAnaliseContaList341)
  protected
    { I341_XMLCtm_demonstrativoAnaliseContaList341 }
    function Add: I341_XMLCtm_demonstrativoAnaliseConta;
    function Insert(const Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta;

    function Get_Item(Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta;
  end;

{ T341_XMLCt_demonstrativoCabecalho }

  T341_XMLCt_demonstrativoCabecalho = class(TXMLNode, I341_XMLCt_demonstrativoCabecalho)
  protected
    { I341_XMLCt_demonstrativoCabecalho }
    function Get_RegistroANS: WideString;
    function Get_NumeroDemonstrativo: WideString;
    function Get_NomeOperadora: WideString;
    function Get_NumeroCNPJ: WideString;
    function Get_DataEmissao: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroDemonstrativo(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_NumeroCNPJ(Value: WideString);
    procedure Set_DataEmissao(Value: WideString);
  end;

{ T341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador }

  T341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador = class(TXMLNode, I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador)
  protected
    { I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador }
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_demonstrativoAnaliseConta_dadosConta }

  T341_XMLCtm_demonstrativoAnaliseConta_dadosConta = class(TXMLNodeCollection, I341_XMLCtm_demonstrativoAnaliseConta_dadosConta)
  protected
    { I341_XMLCtm_demonstrativoAnaliseConta_dadosConta }
    function Get_DadosProtocolo(Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
    function Add: I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
    function Insert(const Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_contaMedicaResumo }

  T341_XMLCt_contaMedicaResumo = class(TXMLNode, I341_XMLCt_contaMedicaResumo)
  private
    FRelacaoGuias: I341_XMLCt_contaMedicaResumo_relacaoGuiasList341;
  protected
    { I341_XMLCt_contaMedicaResumo }
    function Get_NumeroLotePrestador: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_DataProtocolo: WideString;
    function Get_GlosaProtocolo: I341_XMLCt_motivoGlosa;
    function Get_SituacaoProtocolo: WideString;
    function Get_RelacaoGuias: I341_XMLCt_contaMedicaResumo_relacaoGuiasList341;
    function Get_ValorInformadoProtocolo: WideString;
    function Get_ValorProcessadoProtocolo: WideString;
    function Get_ValorLiberadoProtocolo: WideString;
    function Get_ValorGlosaProtocolo: WideString;
    procedure Set_NumeroLotePrestador(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_DataProtocolo(Value: WideString);
    procedure Set_SituacaoProtocolo(Value: WideString);
    procedure Set_ValorInformadoProtocolo(Value: WideString);
    procedure Set_ValorProcessadoProtocolo(Value: WideString);
    procedure Set_ValorLiberadoProtocolo(Value: WideString);
    procedure Set_ValorGlosaProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias }

  T341_XMLCt_contaMedicaResumo_relacaoGuias = class(TXMLNode, I341_XMLCt_contaMedicaResumo_relacaoGuias)
  private
    FMotivoGlosaGuia: I341_XMLCt_motivoGlosaList341;
    FDetalhesGuia: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341;
  protected
    { I341_XMLCt_contaMedicaResumo_relacaoGuias }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_DataInicioFat: WideString;
    function Get_HoraInicioFat: WideString;
    function Get_DataFimFat: WideString;
    function Get_HoraFimFat: WideString;
    function Get_MotivoGlosaGuia: I341_XMLCt_motivoGlosaList341;
    function Get_SituacaoGuia: WideString;
    function Get_DetalhesGuia: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341;
    function Get_ValorInformadoGuia: WideString;
    function Get_ValorProcessadoGuia: WideString;
    function Get_ValorLiberadoGuia: WideString;
    function Get_ValorGlosaGuia: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_DataInicioFat(Value: WideString);
    procedure Set_HoraInicioFat(Value: WideString);
    procedure Set_DataFimFat(Value: WideString);
    procedure Set_HoraFimFat(Value: WideString);
    procedure Set_SituacaoGuia(Value: WideString);
    procedure Set_ValorInformadoGuia(Value: WideString);
    procedure Set_ValorProcessadoGuia(Value: WideString);
    procedure Set_ValorLiberadoGuia(Value: WideString);
    procedure Set_ValorGlosaGuia(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuiasList341 }

  T341_XMLCt_contaMedicaResumo_relacaoGuiasList341 = class(TXMLNodeCollection, I341_XMLCt_contaMedicaResumo_relacaoGuiasList341)
  protected
    { I341_XMLCt_contaMedicaResumo_relacaoGuiasList341 }
    function Add: I341_XMLCt_contaMedicaResumo_relacaoGuias;
    function Insert(const Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias;

    function Get_Item(Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias;
  end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia }

  T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia = class(TXMLNode, I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia)
  private
    FRelacaoGlosa: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341;
  protected
    { I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia }
    function Get_SequencialItem: Integer;
    function Get_DataRealizacao: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_GrauParticipacao: WideString;
    function Get_ValorInformado: WideString;
    function Get_QtdExecutada: WideString;
    function Get_ValorProcessado: WideString;
    function Get_ValorLiberado: WideString;
    function Get_RelacaoGlosa: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_GrauParticipacao(Value: WideString);
    procedure Set_ValorInformado(Value: WideString);
    procedure Set_QtdExecutada(Value: WideString);
    procedure Set_ValorProcessado(Value: WideString);
    procedure Set_ValorLiberado(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341 }

  T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341 = class(TXMLNodeCollection, I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341)
  protected
    { I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341 }
    function Add: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
    function Insert(const Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;

    function Get_Item(Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
  end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa }

  T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa = class(TXMLNode, I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa)
  protected
    { I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa }
    function Get_ValorGlosa: WideString;
    function Get_TipoGlosa: WideString;
    procedure Set_ValorGlosa(Value: WideString);
    procedure Set_TipoGlosa(Value: WideString);
  end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341 }

  T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341 = class(TXMLNodeCollection, I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341)
  protected
    { I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341 }
    function Add: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;

    function Get_Item(Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
  end;

{ T341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo }

  T341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo = class(T341_XMLCt_contaMedicaResumo, I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo)
  protected
    { I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo }
  end;

{ T341_XMLCtm_demonstrativoPagamento }

  T341_XMLCtm_demonstrativoPagamento = class(TXMLNode, I341_XMLCtm_demonstrativoPagamento)
  protected
    { I341_XMLCtm_demonstrativoPagamento }
    function Get_CabecalhoDemonstrativo: I341_XMLCt_demonstrativoCabecalho;
    function Get_DadosContratado: I341_XMLCtm_demonstrativoPagamento_dadosContratado;
    function Get_Pagamentos: I341_XMLCtm_demonstrativoPagamento_pagamentos;
    function Get_TotaisDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo;
    function Get_Observacao: WideString;
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_demonstrativoPagamento_dadosContratado }

  T341_XMLCtm_demonstrativoPagamento_dadosContratado = class(TXMLNode, I341_XMLCtm_demonstrativoPagamento_dadosContratado)
  protected
    { I341_XMLCtm_demonstrativoPagamento_dadosContratado }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos }

  T341_XMLCtm_demonstrativoPagamento_pagamentos = class(TXMLNodeCollection, I341_XMLCtm_demonstrativoPagamento_pagamentos)
  protected
    { I341_XMLCtm_demonstrativoPagamento_pagamentos }
    function Get_PagamentosPorData(Index: Integer): I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
    function Add: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
    function Insert(const Index: Integer): I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData }

  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData = class(TXMLNode, I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData)
  protected
    { I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData }
    function Get_DadosPagamento: I341_XMLCt_pagamentoDados;
    function Get_DadosResumo: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo;
    function Get_TotaisBrutosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData;
    function Get_DebitosCreditosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData;
    function Get_TotaisLiquidosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_pagamentoDados }

  T341_XMLCt_pagamentoDados = class(TXMLNode, I341_XMLCt_pagamentoDados)
  protected
    { I341_XMLCt_pagamentoDados }
    function Get_DataPagamento: WideString;
    function Get_FormaPagamento: WideString;
    function Get_Banco: WideString;
    function Get_Agencia: WideString;
    function Get_NrContaCheque: WideString;
    procedure Set_DataPagamento(Value: WideString);
    procedure Set_FormaPagamento(Value: WideString);
    procedure Set_Banco(Value: WideString);
    procedure Set_Agencia(Value: WideString);
    procedure Set_NrContaCheque(Value: WideString);
  end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo }

  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo = class(TXMLNodeCollection, I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo)
  protected
    { I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo }
    function Get_RelacaoProtocolos(Index: Integer): I341_XMLCt_dadosResumoDemonstrativo;
    function Add: I341_XMLCt_dadosResumoDemonstrativo;
    function Insert(const Index: Integer): I341_XMLCt_dadosResumoDemonstrativo;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_dadosResumoDemonstrativo }

  T341_XMLCt_dadosResumoDemonstrativo = class(TXMLNode, I341_XMLCt_dadosResumoDemonstrativo)
  protected
    { I341_XMLCt_dadosResumoDemonstrativo }
    function Get_DataProtocolo: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_NumeroLote: WideString;
    function Get_ValorInformado: WideString;
    function Get_ValorProcessado: WideString;
    function Get_ValorLiberado: WideString;
    function Get_ValorGlosa: WideString;
    procedure Set_DataProtocolo(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_ValorInformado(Value: WideString);
    procedure Set_ValorProcessado(Value: WideString);
    procedure Set_ValorLiberado(Value: WideString);
    procedure Set_ValorGlosa(Value: WideString);
  end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData }

  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData = class(TXMLNode, I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData)
  protected
    { I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData }
    function Get_TotalInformadoPorData: WideString;
    function Get_TotalProcessadoPorData: WideString;
    function Get_TotaLiberadoPorData: WideString;
    function Get_TotalGlosaPorData: WideString;
    procedure Set_TotalInformadoPorData(Value: WideString);
    procedure Set_TotalProcessadoPorData(Value: WideString);
    procedure Set_TotaLiberadoPorData(Value: WideString);
    procedure Set_TotalGlosaPorData(Value: WideString);
  end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData }

  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData = class(TXMLNodeCollection, I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData)
  protected
    { I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData }
    function Get_DebitosCreditos(Index: Integer): I341_XMLCt_descontos;
    function Add: I341_XMLCt_descontos;
    function Insert(const Index: Integer): I341_XMLCt_descontos;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_descontos }

  T341_XMLCt_descontos = class(TXMLNode, I341_XMLCt_descontos)
  protected
    { I341_XMLCt_descontos }
    function Get_Indicador: WideString;
    function Get_TipoDebitoCredito: WideString;
    function Get_DescricaoDbCr: WideString;
    function Get_ValorDbCr: WideString;
    procedure Set_Indicador(Value: WideString);
    procedure Set_TipoDebitoCredito(Value: WideString);
    procedure Set_DescricaoDbCr(Value: WideString);
    procedure Set_ValorDbCr(Value: WideString);
  end;

{ T341_XMLCt_descontosList341 }

  T341_XMLCt_descontosList341 = class(TXMLNodeCollection, I341_XMLCt_descontosList341)
  protected
    { I341_XMLCt_descontosList341 }
    function Add: I341_XMLCt_descontos;
    function Insert(const Index: Integer): I341_XMLCt_descontos;

    function Get_Item(Index: Integer): I341_XMLCt_descontos;
  end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData }

  T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData = class(TXMLNode, I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData)
  protected
    { I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData }
    function Get_TotalDebitosPorData: WideString;
    function Get_TotalCreditosPorData: WideString;
    function Get_LiquidoPorData: WideString;
    procedure Set_TotalDebitosPorData(Value: WideString);
    procedure Set_TotalCreditosPorData(Value: WideString);
    procedure Set_LiquidoPorData(Value: WideString);
  end;

{ T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo }

  T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo = class(TXMLNode, I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo)
  private
    FDebitosCreditosDemonstrativo: I341_XMLCt_descontosList341;
  protected
    { I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo }
    function Get_TotaisBrutosDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo;
    function Get_DebitosCreditosDemonstrativo: I341_XMLCt_descontosList341;
    function Get_TotaisLiquidosDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo }

  T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo = class(TXMLNode, I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo)
  protected
    { I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo }
    function Get_ValorInformadoBruto: WideString;
    function Get_ValorProcessadoBruto: WideString;
    function Get_ValorLiberadoBruto: WideString;
    function Get_ValorGlosaBruto: WideString;
    procedure Set_ValorInformadoBruto(Value: WideString);
    procedure Set_ValorProcessadoBruto(Value: WideString);
    procedure Set_ValorLiberadoBruto(Value: WideString);
    procedure Set_ValorGlosaBruto(Value: WideString);
  end;

{ T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo }

  T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo = class(TXMLNode, I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo)
  protected
    { I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo }
    function Get_TotalDebitosDemonstrativo: WideString;
    function Get_TotalCreditosdemonstrativo: WideString;
    function Get_ValorLiberadoDemonstrativo: WideString;
    procedure Set_TotalDebitosDemonstrativo(Value: WideString);
    procedure Set_TotalCreditosdemonstrativo(Value: WideString);
    procedure Set_ValorLiberadoDemonstrativo(Value: WideString);
  end;

{ T341_XMLCto_demonstrativoOdontologia }

  T341_XMLCto_demonstrativoOdontologia = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia)
  private
    FDadosPagamentoPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341;
  protected
    { I341_XMLCto_demonstrativoOdontologia }
    function Get_CabecalhoDemonstrativoOdonto: I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto;
    function Get_DadosPrestador: I341_XMLCto_demonstrativoOdontologia_dadosPrestador;
    function Get_DadosPagamentoPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341;
    function Get_TotaisBrutoDemonstrativo: I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo;
    function Get_DebCredDemonstrativo: I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo;
    function Get_TotalDebitosDemonstativo: WideString;
    function Get_TotalCreditosDemonstrativo: WideString;
    function Get_ValorRecebidoDemonstrativo: WideString;
    function Get_Observacao: WideString;
    procedure Set_TotalDebitosDemonstativo(Value: WideString);
    procedure Set_TotalCreditosDemonstrativo(Value: WideString);
    procedure Set_ValorRecebidoDemonstrativo(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto }

  T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto)
  protected
    { I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto }
    function Get_RegistroANS: WideString;
    function Get_NumeroDemonstrativo: WideString;
    function Get_NomeOperadora: WideString;
    function Get_CnpjOper: WideString;
    function Get_PeriodoProc: I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroDemonstrativo(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_CnpjOper(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc }

  T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc)
  protected
    { I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc }
    function Get_Datainicio: WideString;
    function Get_Datafim: WideString;
    procedure Set_Datainicio(Value: WideString);
    procedure Set_Datafim(Value: WideString);
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPrestador }

  T341_XMLCto_demonstrativoOdontologia_dadosPrestador = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPrestador)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPrestador }
    function Get_CodigoPrestador: WideString;
    function Get_NomePrestador: WideString;
    function Get_CpfCNPJContratado: I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado;
    procedure Set_CodigoPrestador(Value: WideString);
    procedure Set_NomePrestador(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado }

  T341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado }
    function Get_CnpjPrestador: WideString;
    function Get_CpfContratado: WideString;
    procedure Set_CnpjPrestador(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData)
  private
    FProtocolos: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341;
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData }
    function Get_DadosPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento;
    function Get_Protocolos: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341;
    function Get_TotaisPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData;
    function Get_DebCredPorDataPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento;
    function Get_TotalLiquidoPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341 }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341 = class(TXMLNodeCollection, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341 }
    function Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
    function Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;

    function Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento }
    function Get_DataPagamento: WideString;
    function Get_Banco: WideString;
    function Get_Agencia: WideString;
    function Get_Conta: WideString;
    procedure Set_DataPagamento(Value: WideString);
    procedure Set_Banco(Value: WideString);
    procedure Set_Agencia(Value: WideString);
    procedure Set_Conta(Value: WideString);
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos)
  private
    FDadosPagamentoGuia: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341;
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos }
    function Get_NumeroLote: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_DadosPagamentoGuia: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341;
    function Get_TotaisPorProtocolo: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo;
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341 }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341 = class(TXMLNodeCollection, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341 }
    function Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
    function Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;

    function Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia)
  private
    FDadosPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341;
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Recurso: WideString;
    function Get_NomeExecutante: WideString;
    function Get_CarteiraBeneficiario: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_DadosPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341;
    function Get_ObservacaoGuia: WideString;
    function Get_ValorTotalInformadoGuia: WideString;
    function Get_ValorTotalProcessadoGuia: WideString;
    function Get_ValorTotalGlosaGuia: WideString;
    function Get_ValorTotalFranquiaGuia: WideString;
    function Get_ValorTotalLiberadoGuia: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Recurso(Value: WideString);
    procedure Set_NomeExecutante(Value: WideString);
    procedure Set_CarteiraBeneficiario(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_ObservacaoGuia(Value: WideString);
    procedure Set_ValorTotalInformadoGuia(Value: WideString);
    procedure Set_ValorTotalProcessadoGuia(Value: WideString);
    procedure Set_ValorTotalGlosaGuia(Value: WideString);
    procedure Set_ValorTotalFranquiaGuia(Value: WideString);
    procedure Set_ValorTotalLiberadoGuia(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341 }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341 = class(TXMLNodeCollection, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341 }
    function Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
    function Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;

    function Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento)
  private
    FCodigosGlosa: I341_XMLDm_tipoGlosaList341;
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento }
    function Get_SequencialItem: Integer;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_DataRealizacao: WideString;
    function Get_QtdProc: Integer;
    function Get_ValorInformado: WideString;
    function Get_ValorProcessado: WideString;
    function Get_ValorGlosaEstorno: WideString;
    function Get_ValorFranquia: WideString;
    function Get_ValorLiberado: WideString;
    function Get_CodigosGlosa: I341_XMLDm_tipoGlosaList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_ValorInformado(Value: WideString);
    procedure Set_ValorProcessado(Value: WideString);
    procedure Set_ValorGlosaEstorno(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_ValorLiberado(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341 }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341 = class(TXMLNodeCollection, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341 }
    function Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
    function Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;

    function Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo }
    function Get_ValorTotalInformadoPorProtocolo: WideString;
    function Get_ValorTotalProcessadoPorProtocolo: WideString;
    function Get_ValorTotalGlosaPorProtocolo: WideString;
    function Get_ValorTotalFranquiaPorProtocolo: WideString;
    function Get_ValorTotalLiberadoPorProtocolo: WideString;
    procedure Set_ValorTotalInformadoPorProtocolo(Value: WideString);
    procedure Set_ValorTotalProcessadoPorProtocolo(Value: WideString);
    procedure Set_ValorTotalGlosaPorProtocolo(Value: WideString);
    procedure Set_ValorTotalFranquiaPorProtocolo(Value: WideString);
    procedure Set_ValorTotalLiberadoPorProtocolo(Value: WideString);
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData }
    function Get_ValorBrutonformadoPorData: WideString;
    function Get_ValorBrutoProcessadoPorData: WideString;
    function Get_ValorBrutoGlosaPorData: WideString;
    function Get_ValorBrutoFranquiaPorData: WideString;
    function Get_ValorBrutoLiberadoPorData: WideString;
    procedure Set_ValorBrutonformadoPorData(Value: WideString);
    procedure Set_ValorBrutoProcessadoPorData(Value: WideString);
    procedure Set_ValorBrutoGlosaPorData(Value: WideString);
    procedure Set_ValorBrutoFranquiaPorData(Value: WideString);
    procedure Set_ValorBrutoLiberadoPorData(Value: WideString);
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento = class(TXMLNodeCollection, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento }
    function Get_Descontos(Index: Integer): I341_XMLCt_descontos;
    function Add: I341_XMLCt_descontos;
    function Insert(const Index: Integer): I341_XMLCt_descontos;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData }

  T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData)
  protected
    { I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData }
    function Get_ValorTotalDebitosPorData: WideString;
    function Get_ValorTotalCreditosPorData: WideString;
    function Get_ValorFinalAReceberPorData: WideString;
    procedure Set_ValorTotalDebitosPorData(Value: WideString);
    procedure Set_ValorTotalCreditosPorData(Value: WideString);
    procedure Set_ValorFinalAReceberPorData(Value: WideString);
  end;

{ T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo }

  T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo = class(TXMLNode, I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo)
  protected
    { I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo }
    function Get_ValorInformadoPorDemonstrativoData: WideString;
    function Get_ValorlProcessadoPorDemonstrativo: WideString;
    function Get_ValorlGlosaPorDemonstrativo: WideString;
    function Get_ValoFranquiaPorDemonstrativo: WideString;
    function Get_ValorLiberadoPorDemonstrativo: WideString;
    procedure Set_ValorInformadoPorDemonstrativoData(Value: WideString);
    procedure Set_ValorlProcessadoPorDemonstrativo(Value: WideString);
    procedure Set_ValorlGlosaPorDemonstrativo(Value: WideString);
    procedure Set_ValoFranquiaPorDemonstrativo(Value: WideString);
    procedure Set_ValorLiberadoPorDemonstrativo(Value: WideString);
  end;

{ T341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo }

  T341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo = class(TXMLNodeCollection, I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo)
  protected
    { I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo }
    function Get_Descontos(Index: Integer): I341_XMLCt_descontos;
    function Add: I341_XMLCt_descontos;
    function Insert(const Index: Integer): I341_XMLCt_descontos;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno }

  T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno = class(TXMLNode, I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno)
  protected
    { I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno }
    function Get_IdentificacaoOperadora: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroProtocolo: WideString;
    function Get_ProtocoloSolicitacaoDemonstrativo: WideString;
    function Get_TipoDemonstrativo: WideString;
    function Get_DataSituacaoDemonstrativo: WideString;
    function Get_SituacaoDemonstrativo: WideString;
    procedure Set_IdentificacaoOperadora(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_ProtocoloSolicitacaoDemonstrativo(Value: WideString);
    procedure Set_TipoDemonstrativo(Value: WideString);
    procedure Set_DataSituacaoDemonstrativo(Value: WideString);
    procedure Set_SituacaoDemonstrativo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_situacaoProtocolo }

  T341_XMLCt_situacaoProtocolo = class(TXMLNode, I341_XMLCt_situacaoProtocolo)
  protected
    { I341_XMLCt_situacaoProtocolo }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_SituacaoDoProtocolo: I341_XMLCt_protocoloStatus;
    function Get_SituacaoProtocoloAnexo: I341_XMLCt_protocoloAnexoStatus;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloStatus }

  T341_XMLCt_protocoloStatus = class(TXMLNode, I341_XMLCt_protocoloStatus)
  protected
    { I341_XMLCt_protocoloStatus }
    function Get_IdentificacaoOperadora: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_Lote: I341_XMLCt_protocoloStatus_lote;
    procedure Set_IdentificacaoOperadora(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloStatus_lote }

  T341_XMLCt_protocoloStatus_lote = class(TXMLNode, I341_XMLCt_protocoloStatus_lote)
  protected
    { I341_XMLCt_protocoloStatus_lote }
    function Get_DetalheLote: I341_XMLCt_loteStatus;
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_loteStatus }

  T341_XMLCt_loteStatus = class(TXMLNode, I341_XMLCt_loteStatus)
  protected
    { I341_XMLCt_loteStatus }
    function Get_StatusProtocolo: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_ValorTotalLote: I341_XMLCt_valorTotal;
    function Get_GuiasTISS: I341_XMLCt_loteStatus_guiasTISS;
    procedure Set_StatusProtocolo(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_loteStatus_guiasTISS }

  T341_XMLCt_loteStatus_guiasTISS = class(TXMLNode, I341_XMLCt_loteStatus_guiasTISS)
  private
    FGuiasMedicas: I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341;
    FGuiasOdonto: I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341;
  protected
    { I341_XMLCt_loteStatus_guiasTISS }
    function Get_GuiasMedicas: I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341;
    function Get_GuiasOdonto: I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_loteStatus_guiasTISS_guiasMedicas }

  T341_XMLCt_loteStatus_guiasTISS_guiasMedicas = class(TXMLNode, I341_XMLCt_loteStatus_guiasTISS_guiasMedicas)
  protected
    { I341_XMLCt_loteStatus_guiasTISS_guiasMedicas }
    function Get_Guias: I341_XMLCt_guiaDados;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341 }

  T341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341 = class(TXMLNodeCollection, I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341)
  protected
    { I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341 }
    function Add: I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
    function Insert(const Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;

    function Get_Item(Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
  end;

{ T341_XMLCt_loteStatus_guiasTISS_guiasOdonto }

  T341_XMLCt_loteStatus_guiasTISS_guiasOdonto = class(TXMLNode, I341_XMLCt_loteStatus_guiasTISS_guiasOdonto)
  protected
    { I341_XMLCt_loteStatus_guiasTISS_guiasOdonto }
    function Get_Guias: I341_XMLCt_guiaDadosOdonto;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341 }

  T341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341 = class(TXMLNodeCollection, I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341)
  protected
    { I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341 }
    function Add: I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
    function Insert(const Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;

    function Get_Item(Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
  end;

{ T341_XMLCt_protocoloAnexoStatus }

  T341_XMLCt_protocoloAnexoStatus = class(TXMLNode, I341_XMLCt_protocoloAnexoStatus)
  protected
    { I341_XMLCt_protocoloAnexoStatus }
    function Get_IdentificacaoOperadora: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_LoteAnexo: I341_XMLCt_protocoloAnexoStatus_loteAnexo;
    procedure Set_IdentificacaoOperadora(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloAnexoStatus_loteAnexo }

  T341_XMLCt_protocoloAnexoStatus_loteAnexo = class(TXMLNode, I341_XMLCt_protocoloAnexoStatus_loteAnexo)
  protected
    { I341_XMLCt_protocoloAnexoStatus_loteAnexo }
    function Get_DetalheLoteAnexo: I341_XMLCt_loteAnexoStatus;
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_loteAnexoStatus }

  T341_XMLCt_loteAnexoStatus = class(TXMLNode, I341_XMLCt_loteAnexoStatus)
  protected
    { I341_XMLCt_loteAnexoStatus }
    function Get_StatusProtocolo: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_AnexosClinicos: I341_XMLCt_loteAnexoStatus_anexosClinicos;
    procedure Set_StatusProtocolo(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_loteAnexoStatus_anexosClinicos }

  T341_XMLCt_loteAnexoStatus_anexosClinicos = class(TXMLNode, I341_XMLCt_loteAnexoStatus_anexosClinicos)
  protected
    { I341_XMLCt_loteAnexoStatus_anexosClinicos }
    function Get_AnexoOPME: I341_XMLCtm_autorizacaoOPME;
    function Get_AnexoQuimio: I341_XMLCtm_autorizacaoQuimio;
    function Get_AnexoRadio: I341_XMLCtm_autorizacaoRadio;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_situacaoAutorizacao }

  T341_XMLCt_situacaoAutorizacao = class(TXMLNode, I341_XMLCt_situacaoAutorizacao)
  protected
    { I341_XMLCt_situacaoAutorizacao }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_AutorizacaoInternacao: I341_XMLCtm_autorizacaoInternacao;
    function Get_AutorizacaoServico: I341_XMLCtm_autorizacaoServico;
    function Get_AutorizacaoProrrogacao: I341_XMLCtm_autorizacaoProrrogacao;
    function Get_AutorizacaoServicoOdonto: I341_XMLCto_autorizacaoServico;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoInternacao }

  T341_XMLCtm_autorizacaoInternacao = class(TXMLNode, I341_XMLCtm_autorizacaoInternacao)
  protected
    { I341_XMLCtm_autorizacaoInternacao }
    function Get_AutorizacaoDosServicos: I341_XMLCtm_autorizacaoServico;
    function Get_DataProvavelAdmissao: WideString;
    function Get_QtdDiariasAutorizadas: Integer;
    function Get_TipoAcomodacaoAutorizada: WideString;
    procedure Set_DataProvavelAdmissao(Value: WideString);
    procedure Set_QtdDiariasAutorizadas(Value: Integer);
    procedure Set_TipoAcomodacaoAutorizada(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoServico }

  T341_XMLCtm_autorizacaoServico = class(TXMLNode, I341_XMLCtm_autorizacaoServico)
  protected
    { I341_XMLCtm_autorizacaoServico }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_TipoEtapaAutorizacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_PrestadorAutorizado: I341_XMLCtm_autorizacaoServico_prestadorAutorizado;
    function Get_StatusSolicitacao: WideString;
    function Get_MotivosNegativa: I341_XMLCtm_autorizacaoServico_motivosNegativa;
    function Get_ServicosAutorizados: I341_XMLCtm_autorizacaoServico_servicosAutorizados;
    function Get_Observacao: WideString;
    function Get_AutorizacaoQuimio: I341_XMLCtm_autorizacaoQuimio;
    function Get_AutorizacaoRadio: I341_XMLCtm_autorizacaoRadio;
    procedure Set_TipoEtapaAutorizacao(Value: WideString);
    procedure Set_StatusSolicitacao(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoServico_prestadorAutorizado }

  T341_XMLCtm_autorizacaoServico_prestadorAutorizado = class(TXMLNode, I341_XMLCtm_autorizacaoServico_prestadorAutorizado)
  protected
    { I341_XMLCtm_autorizacaoServico_prestadorAutorizado }
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
    function Get_CnesContratado: WideString;
    procedure Set_CnesContratado(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoServico_motivosNegativa }

  T341_XMLCtm_autorizacaoServico_motivosNegativa = class(TXMLNodeCollection, I341_XMLCtm_autorizacaoServico_motivosNegativa)
  protected
    { I341_XMLCtm_autorizacaoServico_motivosNegativa }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoServico_servicosAutorizados }

  T341_XMLCtm_autorizacaoServico_servicosAutorizados = class(TXMLNodeCollection, I341_XMLCtm_autorizacaoServico_servicosAutorizados)
  protected
    { I341_XMLCtm_autorizacaoServico_servicosAutorizados }
    function Get_ServicoAutorizado(Index: Integer): I341_XMLCt_procedimentoAutorizado;
    function Add: I341_XMLCt_procedimentoAutorizado;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoAutorizado;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_autorizacaoProrrogacao }

  T341_XMLCtm_autorizacaoProrrogacao = class(TXMLNode, I341_XMLCtm_autorizacaoProrrogacao)
  protected
    { I341_XMLCtm_autorizacaoProrrogacao }
    function Get_AutorizacaoDosServicos: I341_XMLCtm_autorizacaoServico;
    function Get_DiariasAutorizadas: Integer;
    function Get_AcomodacaoAutorizada: WideString;
    function Get_JustificativaOperadora: WideString;
    procedure Set_DiariasAutorizadas(Value: Integer);
    procedure Set_AcomodacaoAutorizada(Value: WideString);
    procedure Set_JustificativaOperadora(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_autorizacaoServico }

  T341_XMLCto_autorizacaoServico = class(TXMLNode, I341_XMLCto_autorizacaoServico)
  private
    FProcedimentosAutorizados: I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341;
  protected
    { I341_XMLCto_autorizacaoServico }
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_StatusSolicitacao: WideString;
    function Get_PrestadorAutorizado: I341_XMLCt_contratadoDados;
    function Get_ProcedimentosAutorizados: I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341;
    function Get_MotivosNegativa: I341_XMLCto_autorizacaoServico_motivosNegativa;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    procedure Set_StatusSolicitacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_autorizacaoServico_procedimentosAutorizados }

  T341_XMLCto_autorizacaoServico_procedimentosAutorizados = class(TXMLNode, I341_XMLCto_autorizacaoServico_procedimentosAutorizados)
  private
    FMotivosNegativa: I341_XMLCt_motivoGlosaList341;
  protected
    { I341_XMLCto_autorizacaoServico_procedimentosAutorizados }
    function Get_SequencialItem: Integer;
    function Get_ProcSolic: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_QtdProc: Integer;
    function Get_QtdUS: WideString;
    function Get_ValorProc: WideString;
    function Get_ValorFranquia: WideString;
    function Get_Aut: WideString;
    function Get_MotivosNegativa: I341_XMLCt_motivoGlosaList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_QtdUS(Value: WideString);
    procedure Set_ValorProc(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_Aut(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341 }

  T341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341 = class(TXMLNodeCollection, I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341)
  protected
    { I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341 }
    function Add: I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
    function Insert(const Index: Integer): I341_XMLCto_autorizacaoServico_procedimentosAutorizados;

    function Get_Item(Index: Integer): I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
  end;

{ T341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao }

  T341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao = class(TXMLNode, I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao)
  protected
    { I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
  end;

{ T341_XMLCto_autorizacaoServico_motivosNegativa }

  T341_XMLCto_autorizacaoServico_motivosNegativa = class(TXMLNodeCollection, I341_XMLCto_autorizacaoServico_motivosNegativa)
  protected
    { I341_XMLCto_autorizacaoServico_motivosNegativa }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLOperadoraPrestador_respostaElegibilidade }

  T341_XMLOperadoraPrestador_respostaElegibilidade = class(TXMLNode, I341_XMLOperadoraPrestador_respostaElegibilidade)
  protected
    { I341_XMLOperadoraPrestador_respostaElegibilidade }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ReciboElegibilidade: I341_XMLCt_elegibilidadeRecibo;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_elegibilidadeRecibo }

  T341_XMLCt_elegibilidadeRecibo = class(TXMLNode, I341_XMLCt_elegibilidadeRecibo)
  protected
    { I341_XMLCt_elegibilidadeRecibo }
    function Get_RegistroANS: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_ValidadeCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_RespostaSolicitacao: WideString;
    function Get_MotivosNegativa: I341_XMLCt_elegibilidadeRecibo_motivosNegativa;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_ValidadeCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    procedure Set_RespostaSolicitacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_elegibilidadeRecibo_motivosNegativa }

  T341_XMLCt_elegibilidadeRecibo_motivosNegativa = class(TXMLNodeCollection, I341_XMLCt_elegibilidadeRecibo_motivosNegativa)
  protected
    { I341_XMLCt_elegibilidadeRecibo_motivosNegativa }
    function Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
    function Add: I341_XMLCt_motivoGlosa;
    function Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_reciboCancelaGuia }

  T341_XMLCt_reciboCancelaGuia = class(TXMLNode, I341_XMLCt_reciboCancelaGuia)
  protected
    { I341_XMLCt_reciboCancelaGuia }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ReciboCancelaGuia: I341_XMLCt_guiaCancelamentoRecibo;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaCancelamentoRecibo }

  T341_XMLCt_guiaCancelamentoRecibo = class(TXMLNode, I341_XMLCt_guiaCancelamentoRecibo)
  protected
    { I341_XMLCt_guiaCancelamentoRecibo }
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_GuiasCanceladas: I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas;
    procedure Set_RegistroANS(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas }

  T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas = class(TXMLNodeCollection, I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas)
  protected
    { I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas }
    function Get_DadosGuia(Index: Integer): I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
    function Add: I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
    function Insert(const Index: Integer): I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia }

  T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia = class(TXMLNode, I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia)
  protected
    { I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_TipoGuia: WideString;
    function Get_StatusCancelamento: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_TipoGuia(Value: WideString);
    procedure Set_StatusCancelamento(Value: WideString);
  end;

{ T341_XMLCt_reciboComunicacao }

  T341_XMLCt_reciboComunicacao = class(TXMLNode, I341_XMLCt_reciboComunicacao)
  protected
    { I341_XMLCt_reciboComunicacao }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ReciboComunicacao: I341_XMLCtm_beneficiarioComunicacaoRecibo;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_beneficiarioComunicacaoRecibo }

  T341_XMLCtm_beneficiarioComunicacaoRecibo = class(TXMLNode, I341_XMLCtm_beneficiarioComunicacaoRecibo)
  protected
    { I341_XMLCtm_beneficiarioComunicacaoRecibo }
    function Get_StatusComunicacao: WideString;
    function Get_BeneficiarioComunicacao: I341_XMLCtm_beneficiarioComunicacao;
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    procedure Set_StatusComunicacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_beneficiarioComunicacao }

  T341_XMLCtm_beneficiarioComunicacao = class(TXMLNode, I341_XMLCtm_beneficiarioComunicacao)
  protected
    { I341_XMLCtm_beneficiarioComunicacao }
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DataEvento: WideString;
    function Get_TipoEvento: WideString;
    function Get_DadosInternacao: I341_XMLCtm_beneficiarioComunicacao_dadosInternacao;
    procedure Set_DataEvento(Value: WideString);
    procedure Set_TipoEvento(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_beneficiarioComunicacao_dadosInternacao }

  T341_XMLCtm_beneficiarioComunicacao_dadosInternacao = class(TXMLNode, I341_XMLCtm_beneficiarioComunicacao_dadosInternacao)
  protected
    { I341_XMLCtm_beneficiarioComunicacao_dadosInternacao }
    function Get_MotivoEncerramento: WideString;
    function Get_TipoInternacao: WideString;
    procedure Set_MotivoEncerramento(Value: WideString);
    procedure Set_TipoInternacao(Value: WideString);
  end;

{ T341_XMLCt_respostaGlosa }

  T341_XMLCt_respostaGlosa = class(TXMLNode, I341_XMLCt_respostaGlosa)
  protected
    { I341_XMLCt_respostaGlosa }
    function Get_ReciboGlosa: I341_XMLCt_glosaRecibo;
    function Get_ReciboGlosaOdonto: I341_XMLCt_glosaReciboOdonto;
    function Get_ReciboGlosaStatus: I341_XMLCt_respostaGlosa_reciboGlosaStatus;
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_glosaRecibo }

  T341_XMLCt_glosaRecibo = class(TXMLNode, I341_XMLCt_glosaRecibo)
  protected
    { I341_XMLCt_glosaRecibo }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaRecGlosaPrestador: WideString;
    function Get_NumeroGuiaRecGlosaOperadora: WideString;
    function Get_NomeOperadora: WideString;
    function Get_ObjetoRecurso: WideString;
    function Get_DadosContratado: I341_XMLCt_glosaRecibo_dadosContratado;
    function Get_NumeroLote: Integer;
    function Get_NumeroProtocolo: Integer;
    function Get_OpcaoRecurso: I341_XMLCt_glosaRecibo_opcaoRecurso;
    function Get_DataRecurso: WideString;
    function Get_ValorTotalRecursado: WideString;
    function Get_ValorTotalAcatado: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_ObjetoRecurso(Value: WideString);
    procedure Set_NumeroLote(Value: Integer);
    procedure Set_NumeroProtocolo(Value: Integer);
    procedure Set_DataRecurso(Value: WideString);
    procedure Set_ValorTotalRecursado(Value: WideString);
    procedure Set_ValorTotalAcatado(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_glosaRecibo_dadosContratado }

  T341_XMLCt_glosaRecibo_dadosContratado = class(TXMLNode, I341_XMLCt_glosaRecibo_dadosContratado)
  protected
    { I341_XMLCt_glosaRecibo_dadosContratado }
    function Get_CodigoPrestador: WideString;
    function Get_NomePrestador: WideString;
    procedure Set_CodigoPrestador(Value: WideString);
    procedure Set_NomePrestador(Value: WideString);
  end;

{ T341_XMLCt_glosaRecibo_opcaoRecurso }

  T341_XMLCt_glosaRecibo_opcaoRecurso = class(TXMLNode, I341_XMLCt_glosaRecibo_opcaoRecurso)
  private
    FRecursoGuia: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341;
  protected
    { I341_XMLCt_glosaRecibo_opcaoRecurso }
    function Get_RecursoProtocolo: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo;
    function Get_RecursoGuia: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo }

  T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo = class(TXMLNode, I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo)
  protected
    { I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    function Get_RecursoAcatado: WideString;
    function Get_JustificativaOPSnaoAcatadoProt: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
    procedure Set_RecursoAcatado(Value: WideString);
    procedure Set_JustificativaOPSnaoAcatadoProt(Value: WideString);
  end;

{ T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia }

  T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia = class(TXMLNode, I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia)
  protected
    { I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia }
    function Get_RespostaGuia: I341_XMLCt_respostaGlosaGuiaMedica;
    function Get_RespostaGuiaItens: I341_XMLCt_respostaGlosaItemMedico;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341 }

  T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341 = class(TXMLNodeCollection, I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341)
  protected
    { I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341 }
    function Add: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
  end;

{ T341_XMLCt_respostaGlosaGuiaMedica }

  T341_XMLCt_respostaGlosaGuiaMedica = class(TXMLNode, I341_XMLCt_respostaGlosaGuiaMedica)
  protected
    { I341_XMLCt_respostaGlosaGuiaMedica }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_CodGlosa: WideString;
    function Get_JustificativaPrestador: WideString;
    function Get_RecursoGuiaAcatado: WideString;
    function Get_JustificativaOPSnaoAcatadoGuia: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_CodGlosa(Value: WideString);
    procedure Set_JustificativaPrestador(Value: WideString);
    procedure Set_RecursoGuiaAcatado(Value: WideString);
    procedure Set_JustificativaOPSnaoAcatadoGuia(Value: WideString);
  end;

{ T341_XMLCt_respostaGlosaItemMedico }

  T341_XMLCt_respostaGlosaItemMedico = class(TXMLNode, I341_XMLCt_respostaGlosaItemMedico)
  protected
    { I341_XMLCt_respostaGlosaItemMedico }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_DataRealizacao: WideString;
    function Get_DataFim: WideString;
    function Get_SequencialItem: Integer;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_CodGlosa: WideString;
    function Get_ValorRecursado: WideString;
    function Get_JustificativaPrestador: WideString;
    function Get_ValorAcatadado: WideString;
    function Get_JustificativaOperadora: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_DataFim(Value: WideString);
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_CodGlosa(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
    procedure Set_JustificativaPrestador(Value: WideString);
    procedure Set_ValorAcatadado(Value: WideString);
    procedure Set_JustificativaOperadora(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_glosaReciboOdonto }

  T341_XMLCt_glosaReciboOdonto = class(TXMLNode, I341_XMLCt_glosaReciboOdonto)
  protected
    { I341_XMLCt_glosaReciboOdonto }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaRecGlosaPrestador: WideString;
    function Get_NomeOperadora: WideString;
    function Get_NumeroGuiaRecGlosaOperadora: WideString;
    function Get_ObjetoRecurso: WideString;
    function Get_DadosContratado: I341_XMLCt_glosaReciboOdonto_dadosContratado;
    function Get_NumeroLote: Integer;
    function Get_NumeroProtocolo: Integer;
    function Get_OpcaoRecurso: I341_XMLCt_glosaReciboOdonto_opcaoRecurso;
    function Get_DataRecurso: WideString;
    function Get_ValorTotalRecursado: WideString;
    function Get_ValorTotalAcatado: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
    procedure Set_ObjetoRecurso(Value: WideString);
    procedure Set_NumeroLote(Value: Integer);
    procedure Set_NumeroProtocolo(Value: Integer);
    procedure Set_DataRecurso(Value: WideString);
    procedure Set_ValorTotalRecursado(Value: WideString);
    procedure Set_ValorTotalAcatado(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_glosaReciboOdonto_dadosContratado }

  T341_XMLCt_glosaReciboOdonto_dadosContratado = class(TXMLNode, I341_XMLCt_glosaReciboOdonto_dadosContratado)
  protected
    { I341_XMLCt_glosaReciboOdonto_dadosContratado }
    function Get_CodigoPrestador: WideString;
    function Get_NomePrestador: WideString;
    procedure Set_CodigoPrestador(Value: WideString);
    procedure Set_NomePrestador(Value: WideString);
  end;

{ T341_XMLCt_glosaReciboOdonto_opcaoRecurso }

  T341_XMLCt_glosaReciboOdonto_opcaoRecurso = class(TXMLNode, I341_XMLCt_glosaReciboOdonto_opcaoRecurso)
  private
    FRecursoGuia: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341;
  protected
    { I341_XMLCt_glosaReciboOdonto_opcaoRecurso }
    function Get_RecursoProtocolo: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo;
    function Get_RecursoGuia: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo }

  T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo = class(TXMLNode, I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo)
  protected
    { I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    function Get_RecursoAcatado: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
    procedure Set_RecursoAcatado(Value: WideString);
  end;

{ T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia }

  T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia = class(TXMLNode, I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia)
  protected
    { I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia }
    function Get_RespostaRecursoGuiaOdonto: I341_XMLCt_respostaRecursoGuiaOdonto;
    function Get_RespostaRecursoItemOdonto: I341_XMLCt_respostaRecursoItemOdonto;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341 }

  T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341 = class(TXMLNodeCollection, I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341)
  protected
    { I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341 }
    function Add: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
  end;

{ T341_XMLCt_respostaRecursoGuiaOdonto }

  T341_XMLCt_respostaRecursoGuiaOdonto = class(TXMLNode, I341_XMLCt_respostaRecursoGuiaOdonto)
  protected
    { I341_XMLCt_respostaRecursoGuiaOdonto }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_CodGlosaGuia: WideString;
    function Get_JustificativaGuia: WideString;
    function Get_RecursoAcatadoGuia: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_CodGlosaGuia(Value: WideString);
    procedure Set_JustificativaGuia(Value: WideString);
    procedure Set_RecursoAcatadoGuia(Value: WideString);
  end;

{ T341_XMLCt_respostaRecursoItemOdonto }

  T341_XMLCt_respostaRecursoItemOdonto = class(TXMLNode, I341_XMLCt_respostaRecursoItemOdonto)
  private
    FRecursoProcedimento: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341;
  protected
    { I341_XMLCt_respostaRecursoItemOdonto }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_RecursoProcedimento: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento }

  T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento = class(TXMLNode, I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento)
  protected
    { I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento }
    function Get_SequencialItem: Integer;
    function Get_DataRealizacao: WideString;
    function Get_DenteRegiao: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_Quantidade: Integer;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_CodGlosaProc: WideString;
    function Get_ValorRecursado: WideString;
    function Get_JustificativaPrestador: WideString;
    function Get_ValorAcatado: WideString;
    function Get_JustificativaOperadora: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_Quantidade(Value: Integer);
    procedure Set_CodGlosaProc(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
    procedure Set_JustificativaPrestador(Value: WideString);
    procedure Set_ValorAcatado(Value: WideString);
    procedure Set_JustificativaOperadora(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341 }

  T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341 = class(TXMLNodeCollection, I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341)
  protected
    { I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341 }
    function Add: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
    function Insert(const Index: Integer): I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;

    function Get_Item(Index: Integer): I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
  end;

{ T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao }

  T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao = class(TXMLNode, I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao)
  protected
    { I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
  end;

{ T341_XMLCt_respostaGlosa_reciboGlosaStatus }

  T341_XMLCt_respostaGlosa_reciboGlosaStatus = class(TXMLNode, I341_XMLCt_respostaGlosa_reciboGlosaStatus)
  protected
    { I341_XMLCt_respostaGlosa_reciboGlosaStatus }
    function Get_NrProtocoloRecursoGlosa: WideString;
    function Get_DataEnvioRecurso: WideString;
    function Get_DataRecebimentoRecurso: WideString;
    function Get_NumeroLote: WideString;
    function Get_RegistroANS: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NrProtocoloSituacaoRecursoGlosa: WideString;
    function Get_DataSituacao: WideString;
    function Get_SituacaoProtocolo: WideString;
    procedure Set_NrProtocoloRecursoGlosa(Value: WideString);
    procedure Set_DataEnvioRecurso(Value: WideString);
    procedure Set_DataRecebimentoRecurso(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NrProtocoloSituacaoRecursoGlosa(Value: WideString);
    procedure Set_DataSituacao(Value: WideString);
    procedure Set_SituacaoProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLPrestadorOperadora }

  T341_XMLPrestadorOperadora = class(TXMLNode, I341_XMLPrestadorOperadora)
  protected
    { I341_XMLPrestadorOperadora }
    function Get_LoteGuias: I341_XMLCtm_guiaLote;
    function Get_LoteAnexos: I341_XMLCt_anexoLote;
    function Get_SolicitacaoDemonstrativoRetorno: I341_XMLCt_demonstrativoSolicitacao;
    function Get_SolicitacaoStatusProtocolo: I341_XMLCt_protocoloSolicitacaoStatus;
    function Get_SolicitacaoProcedimento: I341_XMLCt_solicitacaoProcedimento;
    function Get_SolicitaStatusAutorizacao: I341_XMLCt_autorizacaoSolicitaStatus;
    function Get_VerificaElegibilidade: I341_XMLCt_elegibilidadeVerifica;
    function Get_CancelaGuia: I341_XMLCt_guiaCancelamento;
    function Get_ComunicacaoInternacao: I341_XMLCtm_beneficiarioComunicacao;
    function Get_RecursoGlosa: I341_XMLCt_guiaRecursoLote;
    function Get_SolicitacaoStatusRecursoGlosa: I341_XMLCt_protocoloSolicitacaoStatus;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_guiaLote }

  T341_XMLCtm_guiaLote = class(TXMLNode, I341_XMLCtm_guiaLote)
  protected
    { I341_XMLCtm_guiaLote }
    function Get_NumeroLote: WideString;
    function Get_GuiasTISS: I341_XMLCtm_guiaLote_guiasTISS;
    procedure Set_NumeroLote(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_guiaLote_guiasTISS }

  T341_XMLCtm_guiaLote_guiasTISS = class(TXMLNode, I341_XMLCtm_guiaLote_guiasTISS)
  private
    FGuiaSPSADT: I341_XMLCtm_spsadtGuiaList341;
    FGuiaResumoInternacao: I341_XMLCtm_internacaoResumoGuiaList341;
    FGuiaHonorarios: I341_XMLCtm_honorarioIndividualGuiaList341;
    FGuiaConsulta: I341_XMLCtm_consultaGuiaList341;
    FGuiaOdonto: I341_XMLCto_guiaOdontologiaList341;
  protected
    { I341_XMLCtm_guiaLote_guiasTISS }
    function Get_GuiaSPSADT: I341_XMLCtm_spsadtGuiaList341;
    function Get_GuiaResumoInternacao: I341_XMLCtm_internacaoResumoGuiaList341;
    function Get_GuiaHonorarios: I341_XMLCtm_honorarioIndividualGuiaList341;
    function Get_GuiaConsulta: I341_XMLCtm_consultaGuiaList341;
    function Get_GuiaOdonto: I341_XMLCto_guiaOdontologiaList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_spsadtGuia }

  T341_XMLCtm_spsadtGuia = class(TXMLNode, I341_XMLCtm_spsadtGuia)
  protected
    { I341_XMLCtm_spsadtGuia }
    function Get_CabecalhoGuia: I341_XMLCtm_spsadtGuia_cabecalhoGuia;
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoSADT;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosSolicitante: I341_XMLCtm_spsadtGuia_dadosSolicitante;
    function Get_DadosSolicitacao: I341_XMLCtm_spsadtGuia_dadosSolicitacao;
    function Get_DadosExecutante: I341_XMLCtm_spsadtGuia_dadosExecutante;
    function Get_DadosAtendimento: I341_XMLCtm_spsadtAtendimento;
    function Get_ProcedimentosExecutados: I341_XMLCtm_spsadtGuia_procedimentosExecutados;
    function Get_OutrasDespesas: I341_XMLCt_outrasDespesas;
    function Get_Observacao: WideString;
    function Get_ValorTotal: I341_XMLCt_guiaValorTotal;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_spsadtGuiaList341 }

  T341_XMLCtm_spsadtGuiaList341 = class(TXMLNodeCollection, I341_XMLCtm_spsadtGuiaList341)
  protected
    { I341_XMLCtm_spsadtGuiaList341 }
    function Add: I341_XMLCtm_spsadtGuia;
    function Insert(const Index: Integer): I341_XMLCtm_spsadtGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_spsadtGuia;
  end;

{ T341_XMLCt_guiaCabecalho }

  T341_XMLCt_guiaCabecalho = class(TXMLNode, I341_XMLCt_guiaCabecalho)
  protected
    { I341_XMLCt_guiaCabecalho }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
  end;

{ T341_XMLCtm_spsadtGuia_cabecalhoGuia }

  T341_XMLCtm_spsadtGuia_cabecalhoGuia = class(T341_XMLCt_guiaCabecalho, I341_XMLCtm_spsadtGuia_cabecalhoGuia)
  protected
    { I341_XMLCtm_spsadtGuia_cabecalhoGuia }
    function Get_GuiaPrincipal: WideString;
    procedure Set_GuiaPrincipal(Value: WideString);
  end;

{ T341_XMLCt_autorizacaoSADT }

  T341_XMLCt_autorizacaoSADT = class(TXMLNode, I341_XMLCt_autorizacaoSADT)
  protected
    { I341_XMLCt_autorizacaoSADT }
    function Get_NumeroGuiaOperadora: WideString;
    function Get_DataAutorizacao: WideString;
    function Get_Senha: WideString;
    function Get_DataValidadeSenha: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataValidadeSenha(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
  end;

{ T341_XMLCtm_spsadtGuia_dadosSolicitante }

  T341_XMLCtm_spsadtGuia_dadosSolicitante = class(TXMLNode, I341_XMLCtm_spsadtGuia_dadosSolicitante)
  protected
    { I341_XMLCtm_spsadtGuia_dadosSolicitante }
    function Get_ContratadoSolicitante: I341_XMLCt_contratadoDados;
    function Get_ProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_contratadoProfissionalDados }

  T341_XMLCt_contratadoProfissionalDados = class(TXMLNode, I341_XMLCt_contratadoProfissionalDados)
  protected
    { I341_XMLCt_contratadoProfissionalDados }
    function Get_NomeProfissional: WideString;
    function Get_ConselhoProfissional: WideString;
    function Get_NumeroConselhoProfissional: WideString;
    function Get_UF: WideString;
    function Get_CBOS: WideString;
    procedure Set_NomeProfissional(Value: WideString);
    procedure Set_ConselhoProfissional(Value: WideString);
    procedure Set_NumeroConselhoProfissional(Value: WideString);
    procedure Set_UF(Value: WideString);
    procedure Set_CBOS(Value: WideString);
  end;

{ T341_XMLCtm_spsadtGuia_dadosSolicitacao }

  T341_XMLCtm_spsadtGuia_dadosSolicitacao = class(TXMLNode, I341_XMLCtm_spsadtGuia_dadosSolicitacao)
  protected
    { I341_XMLCtm_spsadtGuia_dadosSolicitacao }
    function Get_DataSolicitacao: WideString;
    function Get_CaraterAtendimento: WideString;
    function Get_IndicacaoClinica: WideString;
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_CaraterAtendimento(Value: WideString);
    procedure Set_IndicacaoClinica(Value: WideString);
  end;

{ T341_XMLCtm_spsadtGuia_dadosExecutante }

  T341_XMLCtm_spsadtGuia_dadosExecutante = class(TXMLNode, I341_XMLCtm_spsadtGuia_dadosExecutante)
  protected
    { I341_XMLCtm_spsadtGuia_dadosExecutante }
    function Get_ContratadoExecutante: I341_XMLCt_contratadoDados;
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_spsadtAtendimento }

  T341_XMLCtm_spsadtAtendimento = class(TXMLNode, I341_XMLCtm_spsadtAtendimento)
  protected
    { I341_XMLCtm_spsadtAtendimento }
    function Get_TipoAtendimento: WideString;
    function Get_IndicacaoAcidente: WideString;
    function Get_TipoConsulta: WideString;
    function Get_MotivoEncerramento: WideString;
    procedure Set_TipoAtendimento(Value: WideString);
    procedure Set_IndicacaoAcidente(Value: WideString);
    procedure Set_TipoConsulta(Value: WideString);
    procedure Set_MotivoEncerramento(Value: WideString);
  end;

{ T341_XMLCtm_spsadtGuia_procedimentosExecutados }

  T341_XMLCtm_spsadtGuia_procedimentosExecutados = class(TXMLNodeCollection, I341_XMLCtm_spsadtGuia_procedimentosExecutados)
  protected
    { I341_XMLCtm_spsadtGuia_procedimentosExecutados }
    function Get_ProcedimentoExecutado(Index: Integer): I341_XMLCt_procedimentoExecutadoSadt;
    function Add: I341_XMLCt_procedimentoExecutadoSadt;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoSadt;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoSadt }

  T341_XMLCt_procedimentoExecutadoSadt = class(TXMLNode, I341_XMLCt_procedimentoExecutadoSadt)
  private
    FEquipeSadt: I341_XMLCt_identEquipeSADTList341;
  protected
    { I341_XMLCt_procedimentoExecutadoSadt }
    function Get_SequencialItem: Integer;
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeExecutada: Integer;
    function Get_ViaAcesso: WideString;
    function Get_TecnicaUtilizada: WideString;
    function Get_ReducaoAcrescimo: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_EquipeSadt: I341_XMLCt_identEquipeSADTList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: Integer);
    procedure Set_ViaAcesso(Value: WideString);
    procedure Set_TecnicaUtilizada(Value: WideString);
    procedure Set_ReducaoAcrescimo(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_identEquipeSADT }

  T341_XMLCt_identEquipeSADT = class(TXMLNode, I341_XMLCt_identEquipeSADT)
  protected
    { I341_XMLCt_identEquipeSADT }
    function Get_GrauPart: WideString;
    function Get_CodProfissional: I341_XMLCt_identEquipeSADT_codProfissional;
    function Get_NomeProf: WideString;
    function Get_Conselho: WideString;
    function Get_NumeroConselhoProfissional: WideString;
    function Get_UF: WideString;
    function Get_CBOS: WideString;
    procedure Set_GrauPart(Value: WideString);
    procedure Set_NomeProf(Value: WideString);
    procedure Set_Conselho(Value: WideString);
    procedure Set_NumeroConselhoProfissional(Value: WideString);
    procedure Set_UF(Value: WideString);
    procedure Set_CBOS(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_identEquipeSADTList341 }

  T341_XMLCt_identEquipeSADTList341 = class(TXMLNodeCollection, I341_XMLCt_identEquipeSADTList341)
  protected
    { I341_XMLCt_identEquipeSADTList341 }
    function Add: I341_XMLCt_identEquipeSADT;
    function Insert(const Index: Integer): I341_XMLCt_identEquipeSADT;

    function Get_Item(Index: Integer): I341_XMLCt_identEquipeSADT;
  end;

{ T341_XMLCt_identEquipeSADT_codProfissional }

  T341_XMLCt_identEquipeSADT_codProfissional = class(TXMLNode, I341_XMLCt_identEquipeSADT_codProfissional)
  protected
    { I341_XMLCt_identEquipeSADT_codProfissional }
    function Get_CodigoPrestadorNaOperadora: WideString;
    function Get_CpfContratado: WideString;
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
  end;

{ T341_XMLCt_outrasDespesas }

  T341_XMLCt_outrasDespesas = class(TXMLNodeCollection, I341_XMLCt_outrasDespesas)
  protected
    { I341_XMLCt_outrasDespesas }
    function Get_Despesa(Index: Integer): I341_XMLCt_outrasDespesas_despesa;
    function Add: I341_XMLCt_outrasDespesas_despesa;
    function Insert(const Index: Integer): I341_XMLCt_outrasDespesas_despesa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_outrasDespesas_despesa }

  T341_XMLCt_outrasDespesas_despesa = class(TXMLNode, I341_XMLCt_outrasDespesas_despesa)
  protected
    { I341_XMLCt_outrasDespesas_despesa }
    function Get_SequencialItem: Integer;
    function Get_CodigoDespesa: WideString;
    function Get_ServicosExecutados: I341_XMLCt_procedimentoExecutadoOutras;
    function Get_ItemVinculado: Integer;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_CodigoDespesa(Value: WideString);
    procedure Set_ItemVinculado(Value: Integer);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoOutras }

  T341_XMLCt_procedimentoExecutadoOutras = class(TXMLNode, I341_XMLCt_procedimentoExecutadoOutras)
  protected
    { I341_XMLCt_procedimentoExecutadoOutras }
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_CodigoTabela: WideString;
    function Get_CodigoProcedimento: WideString;
    function Get_QuantidadeExecutada: WideString;
    function Get_UnidadeMedida: WideString;
    function Get_ReducaoAcrescimo: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_DescricaoProcedimento: WideString;
    function Get_RegistroANVISA: WideString;
    function Get_CodigoRefFabricante: WideString;
    function Get_AutorizacaoFuncionamento: WideString;
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_CodigoTabela(Value: WideString);
    procedure Set_CodigoProcedimento(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: WideString);
    procedure Set_UnidadeMedida(Value: WideString);
    procedure Set_ReducaoAcrescimo(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
    procedure Set_DescricaoProcedimento(Value: WideString);
    procedure Set_RegistroANVISA(Value: WideString);
    procedure Set_CodigoRefFabricante(Value: WideString);
    procedure Set_AutorizacaoFuncionamento(Value: WideString);
  end;

{ T341_XMLCt_guiaValorTotal }

  T341_XMLCt_guiaValorTotal = class(TXMLNode, I341_XMLCt_guiaValorTotal)
  protected
    { I341_XMLCt_guiaValorTotal }
    function Get_ValorProcedimentos: WideString;
    function Get_ValorDiarias: WideString;
    function Get_ValorTaxasAlugueis: WideString;
    function Get_ValorMateriais: WideString;
    function Get_ValorMedicamentos: WideString;
    function Get_ValorOPME: WideString;
    function Get_ValorGasesMedicinais: WideString;
    function Get_ValorTotalGeral: WideString;
    procedure Set_ValorProcedimentos(Value: WideString);
    procedure Set_ValorDiarias(Value: WideString);
    procedure Set_ValorTaxasAlugueis(Value: WideString);
    procedure Set_ValorMateriais(Value: WideString);
    procedure Set_ValorMedicamentos(Value: WideString);
    procedure Set_ValorOPME(Value: WideString);
    procedure Set_ValorGasesMedicinais(Value: WideString);
    procedure Set_ValorTotalGeral(Value: WideString);
  end;

{ T341_XMLIXMLSignatureType_ds }

  T341_XMLIXMLSignatureType_ds = class(TXMLNode, IXMLSignatureType_ds)
  private
    FObject_: IXMLObjectType_dsList341;
  protected
    { IXMLSignatureType_ds }
    function Get_Id: WideString;
    function Get_SignedInfo: IXMLSignedInfoType_ds;
    function Get_SignatureValue: IXMLSignatureValueType_ds;
    function Get_KeyInfo: IXMLKeyInfoType_ds;
    function Get_Object_: IXMLObjectType_dsList341;
    procedure Set_Id(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLSignedInfoType_ds }

  T341_XMLIXMLSignedInfoType_ds = class(TXMLNode, IXMLSignedInfoType_ds)
  private
    FReference: IXMLReferenceType_dsList341;
  protected
    { IXMLSignedInfoType_ds }
    function Get_Id: WideString;
    function Get_CanonicalizationMethod: IXMLCanonicalizationMethodType_ds;
    function Get_SignatureMethod: IXMLSignatureMethodType_ds;
    function Get_Reference: IXMLReferenceType_dsList341;
    procedure Set_Id(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLCanonicalizationMethodType_ds }

  T341_XMLIXMLCanonicalizationMethodType_ds = class(TXMLNode, IXMLCanonicalizationMethodType_ds)
  protected
    { IXMLCanonicalizationMethodType_ds }
    function Get_Algorithm: WideString;
    procedure Set_Algorithm(Value: WideString);
  end;

{ T341_XMLIXMLSignatureMethodType_ds }

  T341_XMLIXMLSignatureMethodType_ds = class(TXMLNode, IXMLSignatureMethodType_ds)
  protected
    { IXMLSignatureMethodType_ds }
    function Get_Algorithm: WideString;
    function Get_HMACOutputLength: Integer;
    procedure Set_Algorithm(Value: WideString);
    procedure Set_HMACOutputLength(Value: Integer);
  end;

{ T341_XMLIXMLReferenceType_ds }

  T341_XMLIXMLReferenceType_ds = class(TXMLNode, IXMLReferenceType_ds)
  protected
    { IXMLReferenceType_ds }
    function Get_Id: WideString;
    function Get_URI: WideString;
    function Get_Type_: WideString;
    function Get_Transforms: IXMLTransformsType_ds;
    function Get_DigestMethod: IXMLDigestMethodType_ds;
    function Get_DigestValue: WideString;
    procedure Set_Id(Value: WideString);
    procedure Set_URI(Value: WideString);
    procedure Set_Type_(Value: WideString);
    procedure Set_DigestValue(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLReferenceType_dsList341 }

  T341_XMLIXMLReferenceType_dsList341 = class(TXMLNodeCollection, IXMLReferenceType_dsList341)
  protected
    { IXMLReferenceType_dsList341 }
    function Add: IXMLReferenceType_ds;
    function Insert(const Index: Integer): IXMLReferenceType_ds;

    function Get_Item(Index: Integer): IXMLReferenceType_ds;
  end;

{ T341_XMLIXMLTransformsType_ds }

  T341_XMLIXMLTransformsType_ds = class(TXMLNodeCollection, IXMLTransformsType_ds)
  protected
    { IXMLTransformsType_ds }
    function Get_Transform(Index: Integer): IXMLTransformType_ds;
    function Add: IXMLTransformType_ds;
    function Insert(const Index: Integer): IXMLTransformType_ds;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLTransformType_ds }

  T341_XMLIXMLTransformType_ds = class(TXMLNodeCollection, IXMLTransformType_ds)
  protected
    { IXMLTransformType_ds }
    function Get_Algorithm: WideString;
    function Get_XPath(Index: Integer): WideString;
    procedure Set_Algorithm(Value: WideString);
    function Add(const XPath: WideString): IXMLNode;
    function Insert(const Index: Integer; const XPath: WideString): IXMLNode;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLDigestMethodType_ds }

  T341_XMLIXMLDigestMethodType_ds = class(TXMLNode, IXMLDigestMethodType_ds)
  protected
    { IXMLDigestMethodType_ds }
    function Get_Algorithm: WideString;
    procedure Set_Algorithm(Value: WideString);
  end;

{ T341_XMLIXMLSignatureValueType_ds }

  T341_XMLIXMLSignatureValueType_ds = class(TXMLNode, IXMLSignatureValueType_ds)
  protected
    { IXMLSignatureValueType_ds }
    function Get_Id: WideString;
    procedure Set_Id(Value: WideString);
  end;

{ T341_XMLIXMLKeyInfoType_ds }

  T341_XMLIXMLKeyInfoType_ds = class(TXMLNode, IXMLKeyInfoType_ds)
  private
    FKeyName: I341_XMLString_List341;
    FKeyValue: IXMLKeyValueType_dsList341;
    FRetrievalMethod: IXMLRetrievalMethodType_dsList341;
    FX509Data: IXMLX509DataType_dsList341;
    FPGPData: IXMLPGPDataType_dsList341;
    FSPKIData: IXMLSPKIDataType_dsList341;
    FMgmtData: I341_XMLString_List341;
  protected
    { IXMLKeyInfoType_ds }
    function Get_Id: WideString;
    function Get_KeyName: I341_XMLString_List341;
    function Get_KeyValue: IXMLKeyValueType_dsList341;
    function Get_RetrievalMethod: IXMLRetrievalMethodType_dsList341;
    function Get_X509Data: IXMLX509DataType_dsList341;
    function Get_PGPData: IXMLPGPDataType_dsList341;
    function Get_SPKIData: IXMLSPKIDataType_dsList341;
    function Get_MgmtData: I341_XMLString_List341;
    procedure Set_Id(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLKeyValueType_ds }

  T341_XMLIXMLKeyValueType_ds = class(TXMLNode, IXMLKeyValueType_ds)
  protected
    { IXMLKeyValueType_ds }
    function Get_DSAKeyValue: IXMLDSAKeyValueType_ds;
    function Get_RSAKeyValue: IXMLRSAKeyValueType_ds;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLKeyValueType_dsList341 }

  T341_XMLIXMLKeyValueType_dsList341 = class(TXMLNodeCollection, IXMLKeyValueType_dsList341)
  protected
    { IXMLKeyValueType_dsList341 }
    function Add: IXMLKeyValueType_ds;
    function Insert(const Index: Integer): IXMLKeyValueType_ds;

    function Get_Item(Index: Integer): IXMLKeyValueType_ds;
  end;

{ T341_XMLIXMLDSAKeyValueType_ds }

  T341_XMLIXMLDSAKeyValueType_ds = class(TXMLNode, IXMLDSAKeyValueType_ds)
  protected
    { IXMLDSAKeyValueType_ds }
    function Get_P: WideString;
    function Get_Q: WideString;
    function Get_G: WideString;
    function Get_Y: WideString;
    function Get_J: WideString;
    function Get_Seed: WideString;
    function Get_PgenCounter: WideString;
    procedure Set_P(Value: WideString);
    procedure Set_Q(Value: WideString);
    procedure Set_G(Value: WideString);
    procedure Set_Y(Value: WideString);
    procedure Set_J(Value: WideString);
    procedure Set_Seed(Value: WideString);
    procedure Set_PgenCounter(Value: WideString);
  end;

{ T341_XMLIXMLRSAKeyValueType_ds }

  T341_XMLIXMLRSAKeyValueType_ds = class(TXMLNode, IXMLRSAKeyValueType_ds)
  protected
    { IXMLRSAKeyValueType_ds }
    function Get_Modulus: WideString;
    function Get_Exponent: WideString;
    procedure Set_Modulus(Value: WideString);
    procedure Set_Exponent(Value: WideString);
  end;

{ T341_XMLIXMLRetrievalMethodType_ds }

  T341_XMLIXMLRetrievalMethodType_ds = class(TXMLNode, IXMLRetrievalMethodType_ds)
  protected
    { IXMLRetrievalMethodType_ds }
    function Get_URI: WideString;
    function Get_Type_: WideString;
    function Get_Transforms: IXMLTransformsType_ds;
    procedure Set_URI(Value: WideString);
    procedure Set_Type_(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLRetrievalMethodType_dsList341 }

  T341_XMLIXMLRetrievalMethodType_dsList341 = class(TXMLNodeCollection, IXMLRetrievalMethodType_dsList341)
  protected
    { IXMLRetrievalMethodType_dsList341 }
    function Add: IXMLRetrievalMethodType_ds;
    function Insert(const Index: Integer): IXMLRetrievalMethodType_ds;

    function Get_Item(Index: Integer): IXMLRetrievalMethodType_ds;
  end;

{ T341_XMLIXMLX509DataType_ds }

  T341_XMLIXMLX509DataType_ds = class(TXMLNode, IXMLX509DataType_ds)
  private
    FX509IssuerSerial: IXMLX509IssuerSerialType_dsList341;
    FX509SKI: I341_XMLBase64BinaryList341;
    FX509SubjectName: I341_XMLString_List341;
    FX509Certificate: I341_XMLBase64BinaryList341;
    FX509CRL: I341_XMLBase64BinaryList341;
  protected
    { IXMLX509DataType_ds }
    function Get_X509IssuerSerial: IXMLX509IssuerSerialType_dsList341;
    function Get_X509SKI: I341_XMLBase64BinaryList341;
    function Get_X509SubjectName: I341_XMLString_List341;
    function Get_X509Certificate: I341_XMLBase64BinaryList341;
    function Get_X509CRL: I341_XMLBase64BinaryList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLX509DataType_dsList341 }

  T341_XMLIXMLX509DataType_dsList341 = class(TXMLNodeCollection, IXMLX509DataType_dsList341)
  protected
    { IXMLX509DataType_dsList341 }
    function Add: IXMLX509DataType_ds;
    function Insert(const Index: Integer): IXMLX509DataType_ds;

    function Get_Item(Index: Integer): IXMLX509DataType_ds;
  end;

{ T341_XMLIXMLX509IssuerSerialType_ds }

  T341_XMLIXMLX509IssuerSerialType_ds = class(TXMLNode, IXMLX509IssuerSerialType_ds)
  protected
    { IXMLX509IssuerSerialType_ds }
    function Get_X509IssuerName: WideString;
    function Get_X509SerialNumber: Integer;
    procedure Set_X509IssuerName(Value: WideString);
    procedure Set_X509SerialNumber(Value: Integer);
  end;

{ T341_XMLIXMLX509IssuerSerialType_dsList341 }

  T341_XMLIXMLX509IssuerSerialType_dsList341 = class(TXMLNodeCollection, IXMLX509IssuerSerialType_dsList341)
  protected
    { IXMLX509IssuerSerialType_dsList341 }
    function Add: IXMLX509IssuerSerialType_ds;
    function Insert(const Index: Integer): IXMLX509IssuerSerialType_ds;

    function Get_Item(Index: Integer): IXMLX509IssuerSerialType_ds;
  end;

{ T341_XMLIXMLPGPDataType_ds }

  T341_XMLIXMLPGPDataType_ds = class(TXMLNode, IXMLPGPDataType_ds)
  protected
    { IXMLPGPDataType_ds }
    function Get_PGPKeyID: WideString;
    function Get_PGPKeyPacket: WideString;
    procedure Set_PGPKeyID(Value: WideString);
    procedure Set_PGPKeyPacket(Value: WideString);
  end;

{ T341_XMLIXMLPGPDataType_dsList341 }

  T341_XMLIXMLPGPDataType_dsList341 = class(TXMLNodeCollection, IXMLPGPDataType_dsList341)
  protected
    { IXMLPGPDataType_dsList341 }
    function Add: IXMLPGPDataType_ds;
    function Insert(const Index: Integer): IXMLPGPDataType_ds;

    function Get_Item(Index: Integer): IXMLPGPDataType_ds;
  end;

{ T341_XMLIXMLSPKIDataType_ds }

  T341_XMLIXMLSPKIDataType_ds = class(TXMLNodeCollection, IXMLSPKIDataType_ds)
  protected
    { IXMLSPKIDataType_ds }
    function Get_SPKISexp(Index: Integer): WideString;
    function Add(const SPKISexp: WideString): IXMLNode;
    function Insert(const Index: Integer; const SPKISexp: WideString): IXMLNode;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLIXMLSPKIDataType_dsList341 }

  T341_XMLIXMLSPKIDataType_dsList341 = class(TXMLNodeCollection, IXMLSPKIDataType_dsList341)
  protected
    { IXMLSPKIDataType_dsList341 }
    function Add: IXMLSPKIDataType_ds;
    function Insert(const Index: Integer): IXMLSPKIDataType_ds;

    function Get_Item(Index: Integer): IXMLSPKIDataType_ds;
  end;

{ T341_XMLIXMLObjectType_ds }

  T341_XMLIXMLObjectType_ds = class(TXMLNode, IXMLObjectType_ds)
  protected
    { IXMLObjectType_ds }
    function Get_Id: WideString;
    function Get_MimeType: WideString;
    function Get_Encoding: WideString;
    procedure Set_Id(Value: WideString);
    procedure Set_MimeType(Value: WideString);
    procedure Set_Encoding(Value: WideString);
  end;

{ T341_XMLIXMLObjectType_dsList341 }

  T341_XMLIXMLObjectType_dsList341 = class(TXMLNodeCollection, IXMLObjectType_dsList341)
  protected
    { IXMLObjectType_dsList341 }
    function Add: IXMLObjectType_ds;
    function Insert(const Index: Integer): IXMLObjectType_ds;

    function Get_Item(Index: Integer): IXMLObjectType_ds;
  end;

{ T341_XMLSignature }

  T341_XMLSignature = class(T341_XMLIXMLSignatureType_ds, I341_XMLSignature)
  protected
    { I341_XMLSignature }
  end;

{ T341_XMLCtm_internacaoResumoGuia }

  T341_XMLCtm_internacaoResumoGuia = class(TXMLNode, I341_XMLCtm_internacaoResumoGuia)
  protected
    { I341_XMLCtm_internacaoResumoGuia }
    function Get_CabecalhoGuia: I341_XMLCt_guiaCabecalho;
    function Get_NumeroGuiaSolicitacaoInternacao: WideString;
    function Get_DadosAutorizacao: I341_XMLCt_autorizacaoInternacao;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosExecutante: I341_XMLCtm_internacaoResumoGuia_dadosExecutante;
    function Get_DadosInternacao: I341_XMLCtm_internacaoDados;
    function Get_DadosSaidaInternacao: I341_XMLCtm_internacaoDadosSaida;
    function Get_ProcedimentosExecutados: I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados;
    function Get_ValorTotal: I341_XMLCt_guiaValorTotal;
    function Get_OutrasDespesas: I341_XMLCt_outrasDespesas;
    function Get_Observacao: WideString;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_NumeroGuiaSolicitacaoInternacao(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_internacaoResumoGuiaList341 }

  T341_XMLCtm_internacaoResumoGuiaList341 = class(TXMLNodeCollection, I341_XMLCtm_internacaoResumoGuiaList341)
  protected
    { I341_XMLCtm_internacaoResumoGuiaList341 }
    function Add: I341_XMLCtm_internacaoResumoGuia;
    function Insert(const Index: Integer): I341_XMLCtm_internacaoResumoGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_internacaoResumoGuia;
  end;

{ T341_XMLCt_autorizacaoInternacao }

  T341_XMLCt_autorizacaoInternacao = class(TXMLNode, I341_XMLCt_autorizacaoInternacao)
  protected
    { I341_XMLCt_autorizacaoInternacao }
    function Get_NumeroGuiaOperadora: WideString;
    function Get_DataAutorizacao: WideString;
    function Get_Senha: WideString;
    function Get_DataValidadeSenha: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataValidadeSenha(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
  end;

{ T341_XMLCtm_internacaoResumoGuia_dadosExecutante }

  T341_XMLCtm_internacaoResumoGuia_dadosExecutante = class(TXMLNode, I341_XMLCtm_internacaoResumoGuia_dadosExecutante)
  protected
    { I341_XMLCtm_internacaoResumoGuia_dadosExecutante }
    function Get_ContratadoExecutante: I341_XMLCt_contratadoDados;
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_internacaoDados }

  T341_XMLCtm_internacaoDados = class(TXMLNode, I341_XMLCtm_internacaoDados)
  private
    FDeclaracoes: I341_XMLCtm_internacaoDados_declaracoesList341;
  protected
    { I341_XMLCtm_internacaoDados }
    function Get_CaraterAtendimento: WideString;
    function Get_TipoFaturamento: WideString;
    function Get_DataInicioFaturamento: WideString;
    function Get_HoraInicioFaturamento: WideString;
    function Get_DataFinalFaturamento: WideString;
    function Get_HoraFinalFaturamento: WideString;
    function Get_TipoInternacao: WideString;
    function Get_RegimeInternacao: WideString;
    function Get_Declaracoes: I341_XMLCtm_internacaoDados_declaracoesList341;
    procedure Set_CaraterAtendimento(Value: WideString);
    procedure Set_TipoFaturamento(Value: WideString);
    procedure Set_DataInicioFaturamento(Value: WideString);
    procedure Set_HoraInicioFaturamento(Value: WideString);
    procedure Set_DataFinalFaturamento(Value: WideString);
    procedure Set_HoraFinalFaturamento(Value: WideString);
    procedure Set_TipoInternacao(Value: WideString);
    procedure Set_RegimeInternacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_internacaoDados_declaracoes }

  T341_XMLCtm_internacaoDados_declaracoes = class(TXMLNode, I341_XMLCtm_internacaoDados_declaracoes)
  protected
    { I341_XMLCtm_internacaoDados_declaracoes }
    function Get_DeclaracaoNascido: WideString;
    function Get_DiagnosticoObito: WideString;
    function Get_DeclaracaoObito: WideString;
    function Get_IndicadorDORN: WideString;
    procedure Set_DeclaracaoNascido(Value: WideString);
    procedure Set_DiagnosticoObito(Value: WideString);
    procedure Set_DeclaracaoObito(Value: WideString);
    procedure Set_IndicadorDORN(Value: WideString);
  end;

{ T341_XMLCtm_internacaoDados_declaracoesList341 }

  T341_XMLCtm_internacaoDados_declaracoesList341 = class(TXMLNodeCollection, I341_XMLCtm_internacaoDados_declaracoesList341)
  protected
    { I341_XMLCtm_internacaoDados_declaracoesList341 }
    function Add: I341_XMLCtm_internacaoDados_declaracoes;
    function Insert(const Index: Integer): I341_XMLCtm_internacaoDados_declaracoes;

    function Get_Item(Index: Integer): I341_XMLCtm_internacaoDados_declaracoes;
  end;

{ T341_XMLCtm_internacaoDadosSaida }

  T341_XMLCtm_internacaoDadosSaida = class(TXMLNode, I341_XMLCtm_internacaoDadosSaida)
  private
    FDiagnostico: I341_XMLSt_texto4List341;
  protected
    { I341_XMLCtm_internacaoDadosSaida }
    function Get_Diagnostico: I341_XMLSt_texto4List341;
    function Get_IndicadorAcidente: WideString;
    function Get_MotivoEncerramento: WideString;
    procedure Set_IndicadorAcidente(Value: WideString);
    procedure Set_MotivoEncerramento(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_internacaoResumoGuia_procedimentosExecutados }

  T341_XMLCtm_internacaoResumoGuia_procedimentosExecutados = class(TXMLNodeCollection, I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados)
  protected
    { I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados }
    function Get_ProcedimentoExecutado(Index: Integer): I341_XMLCt_procedimentoExecutadoInt;
    function Add: I341_XMLCt_procedimentoExecutadoInt;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoInt;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoInt }

  T341_XMLCt_procedimentoExecutadoInt = class(TXMLNode, I341_XMLCt_procedimentoExecutadoInt)
  private
    FIdentEquipe: I341_XMLCt_procedimentoExecutadoInt_identEquipeList341;
  protected
    { I341_XMLCt_procedimentoExecutadoInt }
    function Get_SequencialItem: Integer;
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeExecutada: Integer;
    function Get_ViaAcesso: WideString;
    function Get_TecnicaUtilizada: WideString;
    function Get_ReducaoAcrescimo: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_IdentEquipe: I341_XMLCt_procedimentoExecutadoInt_identEquipeList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: Integer);
    procedure Set_ViaAcesso(Value: WideString);
    procedure Set_TecnicaUtilizada(Value: WideString);
    procedure Set_ReducaoAcrescimo(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoInt_identEquipe }

  T341_XMLCt_procedimentoExecutadoInt_identEquipe = class(TXMLNode, I341_XMLCt_procedimentoExecutadoInt_identEquipe)
  protected
    { I341_XMLCt_procedimentoExecutadoInt_identEquipe }
    function Get_IdentificacaoEquipe: I341_XMLCt_identEquipe;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoInt_identEquipeList341 }

  T341_XMLCt_procedimentoExecutadoInt_identEquipeList341 = class(TXMLNodeCollection, I341_XMLCt_procedimentoExecutadoInt_identEquipeList341)
  protected
    { I341_XMLCt_procedimentoExecutadoInt_identEquipeList341 }
    function Add: I341_XMLCt_procedimentoExecutadoInt_identEquipe;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoInt_identEquipe;

    function Get_Item(Index: Integer): I341_XMLCt_procedimentoExecutadoInt_identEquipe;
  end;

{ T341_XMLCt_identEquipe }

  T341_XMLCt_identEquipe = class(TXMLNode, I341_XMLCt_identEquipe)
  protected
    { I341_XMLCt_identEquipe }
    function Get_GrauPart: WideString;
    function Get_CodProfissional: I341_XMLCt_identEquipe_codProfissional;
    function Get_NomeProf: WideString;
    function Get_Conselho: WideString;
    function Get_NumeroConselhoProfissional: WideString;
    function Get_UF: WideString;
    function Get_CBOS: WideString;
    procedure Set_GrauPart(Value: WideString);
    procedure Set_NomeProf(Value: WideString);
    procedure Set_Conselho(Value: WideString);
    procedure Set_NumeroConselhoProfissional(Value: WideString);
    procedure Set_UF(Value: WideString);
    procedure Set_CBOS(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_identEquipe_codProfissional }

  T341_XMLCt_identEquipe_codProfissional = class(TXMLNode, I341_XMLCt_identEquipe_codProfissional)
  protected
    { I341_XMLCt_identEquipe_codProfissional }
    function Get_CodigoPrestadorNaOperadora: WideString;
    function Get_CpfContratado: WideString;
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
  end;

{ T341_XMLCtm_honorarioIndividualGuia }

  T341_XMLCtm_honorarioIndividualGuia = class(TXMLNode, I341_XMLCtm_honorarioIndividualGuia)
  protected
    { I341_XMLCtm_honorarioIndividualGuia }
    function Get_CabecalhoGuia: I341_XMLCt_guiaCabecalho;
    function Get_GuiaSolicInternacao: WideString;
    function Get_Senha: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Beneficiario: I341_XMLCtm_honorarioIndividualGuia_beneficiario;
    function Get_LocalContratado: I341_XMLCtm_honorarioIndividualGuia_localContratado;
    function Get_DadosContratadoExecutante: I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante;
    function Get_DadosInternacao: I341_XMLCtm_honorarioIndividualGuia_dadosInternacao;
    function Get_ProcedimentosRealizados: I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados;
    function Get_Observacao: WideString;
    function Get_ValorTotalHonorarios: WideString;
    function Get_DataEmissaoGuia: WideString;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_GuiaSolicInternacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    procedure Set_ValorTotalHonorarios(Value: WideString);
    procedure Set_DataEmissaoGuia(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_honorarioIndividualGuiaList341 }

  T341_XMLCtm_honorarioIndividualGuiaList341 = class(TXMLNodeCollection, I341_XMLCtm_honorarioIndividualGuiaList341)
  protected
    { I341_XMLCtm_honorarioIndividualGuiaList341 }
    function Add: I341_XMLCtm_honorarioIndividualGuia;
    function Insert(const Index: Integer): I341_XMLCtm_honorarioIndividualGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_honorarioIndividualGuia;
  end;

{ T341_XMLCtm_honorarioIndividualGuia_beneficiario }

  T341_XMLCtm_honorarioIndividualGuia_beneficiario = class(TXMLNode, I341_XMLCtm_honorarioIndividualGuia_beneficiario)
  protected
    { I341_XMLCtm_honorarioIndividualGuia_beneficiario }
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_AtendimentoRN: WideString;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_AtendimentoRN(Value: WideString);
  end;

{ T341_XMLCtm_honorarioIndividualGuia_localContratado }

  T341_XMLCtm_honorarioIndividualGuia_localContratado = class(TXMLNode, I341_XMLCtm_honorarioIndividualGuia_localContratado)
  protected
    { I341_XMLCtm_honorarioIndividualGuia_localContratado }
    function Get_CodigoContratado: I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado;
    function Get_NomeContratado: WideString;
    function Get_Cnes: WideString;
    procedure Set_NomeContratado(Value: WideString);
    procedure Set_Cnes(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado }

  T341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado = class(TXMLNode, I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado)
  protected
    { I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado }
    function Get_CodigoNaOperadora: WideString;
    function Get_CnpjLocalExecutante: WideString;
    procedure Set_CodigoNaOperadora(Value: WideString);
    procedure Set_CnpjLocalExecutante(Value: WideString);
  end;

{ T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante }

  T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante = class(TXMLNode, I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante)
  protected
    { I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante }
    function Get_CodigonaOperadora: WideString;
    function Get_NomeContratadoExecutante: WideString;
    function Get_CnesContratadoExecutante: WideString;
    procedure Set_CodigonaOperadora(Value: WideString);
    procedure Set_NomeContratadoExecutante(Value: WideString);
    procedure Set_CnesContratadoExecutante(Value: WideString);
  end;

{ T341_XMLCtm_honorarioIndividualGuia_dadosInternacao }

  T341_XMLCtm_honorarioIndividualGuia_dadosInternacao = class(TXMLNode, I341_XMLCtm_honorarioIndividualGuia_dadosInternacao)
  protected
    { I341_XMLCtm_honorarioIndividualGuia_dadosInternacao }
    function Get_DataInicioFaturamento: WideString;
    function Get_DataFimFaturamento: WideString;
    procedure Set_DataInicioFaturamento(Value: WideString);
    procedure Set_DataFimFaturamento(Value: WideString);
  end;

{ T341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados }

  T341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados = class(TXMLNodeCollection, I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados)
  protected
    { I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados }
    function Get_ProcedimentoRealizado(Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv;
    function Add: I341_XMLCt_procedimentoExecutadoHonorIndiv;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoHonorIndiv }

  T341_XMLCt_procedimentoExecutadoHonorIndiv = class(TXMLNode, I341_XMLCt_procedimentoExecutadoHonorIndiv)
  private
    FProfissionais: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341;
  protected
    { I341_XMLCt_procedimentoExecutadoHonorIndiv }
    function Get_SequencialItem: Integer;
    function Get_DataExecucao: WideString;
    function Get_HoraInicial: WideString;
    function Get_HoraFinal: WideString;
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeExecutada: Integer;
    function Get_ViaAcesso: WideString;
    function Get_TecnicaUtilizada: WideString;
    function Get_ReducaoAcrescimo: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    function Get_Profissionais: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataExecucao(Value: WideString);
    procedure Set_HoraInicial(Value: WideString);
    procedure Set_HoraFinal(Value: WideString);
    procedure Set_QuantidadeExecutada(Value: Integer);
    procedure Set_ViaAcesso(Value: WideString);
    procedure Set_TecnicaUtilizada(Value: WideString);
    procedure Set_ReducaoAcrescimo(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais }

  T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais = class(TXMLNode, I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais)
  protected
    { I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais }
    function Get_GrauParticipacao: WideString;
    function Get_CodProfissional: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional;
    function Get_NomeProfissional: WideString;
    function Get_ConselhoProfissional: WideString;
    function Get_NumeroConselhoProfissional: WideString;
    function Get_UF: WideString;
    function Get_CBO: WideString;
    procedure Set_GrauParticipacao(Value: WideString);
    procedure Set_NomeProfissional(Value: WideString);
    procedure Set_ConselhoProfissional(Value: WideString);
    procedure Set_NumeroConselhoProfissional(Value: WideString);
    procedure Set_UF(Value: WideString);
    procedure Set_CBO(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341 }

  T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341 = class(TXMLNodeCollection, I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341)
  protected
    { I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341 }
    function Add: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
    function Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;

    function Get_Item(Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
  end;

{ T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional }

  T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional = class(TXMLNode, I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional)
  protected
    { I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional }
    function Get_CodigoPrestadorNaOperadora: WideString;
    function Get_CpfContratado: WideString;
    procedure Set_CodigoPrestadorNaOperadora(Value: WideString);
    procedure Set_CpfContratado(Value: WideString);
  end;

{ T341_XMLCtm_consultaGuia }

  T341_XMLCtm_consultaGuia = class(TXMLNode, I341_XMLCtm_consultaGuia)
  protected
    { I341_XMLCtm_consultaGuia }
    function Get_CabecalhoConsulta: I341_XMLCt_guiaCabecalho;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_ContratadoExecutante: I341_XMLCtm_consultaGuia_contratadoExecutante;
    function Get_ProfissionalExecutante: I341_XMLCt_contratadoProfissionalDados;
    function Get_IndicacaoAcidente: WideString;
    function Get_DadosAtendimento: I341_XMLCtm_consultaAtendimento;
    function Get_Observacao: WideString;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_IndicacaoAcidente(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_consultaGuiaList341 }

  T341_XMLCtm_consultaGuiaList341 = class(TXMLNodeCollection, I341_XMLCtm_consultaGuiaList341)
  protected
    { I341_XMLCtm_consultaGuiaList341 }
    function Add: I341_XMLCtm_consultaGuia;
    function Insert(const Index: Integer): I341_XMLCtm_consultaGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_consultaGuia;
  end;

{ T341_XMLCtm_consultaGuia_contratadoExecutante }

  T341_XMLCtm_consultaGuia_contratadoExecutante = class(T341_XMLCt_contratadoDados, I341_XMLCtm_consultaGuia_contratadoExecutante)
  protected
    { I341_XMLCtm_consultaGuia_contratadoExecutante }
    function Get_CNES: WideString;
    procedure Set_CNES(Value: WideString);
  end;

{ T341_XMLCtm_consultaAtendimento }

  T341_XMLCtm_consultaAtendimento = class(TXMLNode, I341_XMLCtm_consultaAtendimento)
  protected
    { I341_XMLCtm_consultaAtendimento }
    function Get_DataAtendimento: WideString;
    function Get_TipoConsulta: WideString;
    function Get_Procedimento: I341_XMLCtm_consultaAtendimento_procedimento;
    procedure Set_DataAtendimento(Value: WideString);
    procedure Set_TipoConsulta(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_consultaAtendimento_procedimento }

  T341_XMLCtm_consultaAtendimento_procedimento = class(TXMLNode, I341_XMLCtm_consultaAtendimento_procedimento)
  protected
    { I341_XMLCtm_consultaAtendimento_procedimento }
    function Get_CodigoTabela: WideString;
    function Get_CodigoProcedimento: WideString;
    function Get_ValorProcedimento: WideString;
    procedure Set_CodigoTabela(Value: WideString);
    procedure Set_CodigoProcedimento(Value: WideString);
    procedure Set_ValorProcedimento(Value: WideString);
  end;

{ T341_XMLCto_guiaOdontologia }

  T341_XMLCto_guiaOdontologia = class(TXMLNode, I341_XMLCto_guiaOdontologia)
  private
    FProcedimentosExecutados: I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341;
  protected
    { I341_XMLCto_guiaOdontologia }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaPrincipal: WideString;
    function Get_DataAutorizacao: WideString;
    function Get_SenhaAutorizacao: WideString;
    function Get_ValidadeSenha: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_PlanoBeneficiario: WideString;
    function Get_NomeEmpresa: WideString;
    function Get_NumeroTelefone: WideString;
    function Get_NomeTitular: WideString;
    function Get_DadosProfissionaisResponsaveis: I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis;
    function Get_ProcedimentosExecutados: I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341;
    function Get_DataTerminoTrat: WideString;
    function Get_TipoAtendimento: WideString;
    function Get_TipoFaturamento: WideString;
    function Get_QtdTotalUS: WideString;
    function Get_ValorTotalProc: WideString;
    function Get_ValorTotalFranquia: WideString;
    function Get_Observacao: WideString;
    function Get_OdontoInicial: I341_XMLCto_anexoSituacaoInicialnaGTO;
    function Get_AssinaturaDigitalGuia: I341_XMLSignature;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaPrincipal(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
    procedure Set_SenhaAutorizacao(Value: WideString);
    procedure Set_ValidadeSenha(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_PlanoBeneficiario(Value: WideString);
    procedure Set_NomeEmpresa(Value: WideString);
    procedure Set_NumeroTelefone(Value: WideString);
    procedure Set_NomeTitular(Value: WideString);
    procedure Set_DataTerminoTrat(Value: WideString);
    procedure Set_TipoAtendimento(Value: WideString);
    procedure Set_TipoFaturamento(Value: WideString);
    procedure Set_QtdTotalUS(Value: WideString);
    procedure Set_ValorTotalProc(Value: WideString);
    procedure Set_ValorTotalFranquia(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_guiaOdontologiaList341 }

  T341_XMLCto_guiaOdontologiaList341 = class(TXMLNodeCollection, I341_XMLCto_guiaOdontologiaList341)
  protected
    { I341_XMLCto_guiaOdontologiaList341 }
    function Add: I341_XMLCto_guiaOdontologia;
    function Insert(const Index: Integer): I341_XMLCto_guiaOdontologia;

    function Get_Item(Index: Integer): I341_XMLCto_guiaOdontologia;
  end;

{ T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis }

  T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis = class(TXMLNode, I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis)
  protected
    { I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis }
    function Get_NomeProfSolic: WideString;
    function Get_CroSolic: WideString;
    function Get_UfSolic: WideString;
    function Get_CbosSolic: WideString;
    function Get_CodigoProfExec: WideString;
    function Get_NomeProfExec: WideString;
    function Get_CroExec: WideString;
    function Get_UfExec: WideString;
    function Get_CnesExec: WideString;
    function Get_NomeProfExec2: WideString;
    function Get_CroExec2: WideString;
    function Get_UfExec2: WideString;
    function Get_CbosExec2: WideString;
    procedure Set_NomeProfSolic(Value: WideString);
    procedure Set_CroSolic(Value: WideString);
    procedure Set_UfSolic(Value: WideString);
    procedure Set_CbosSolic(Value: WideString);
    procedure Set_CodigoProfExec(Value: WideString);
    procedure Set_NomeProfExec(Value: WideString);
    procedure Set_CroExec(Value: WideString);
    procedure Set_UfExec(Value: WideString);
    procedure Set_CnesExec(Value: WideString);
    procedure Set_NomeProfExec2(Value: WideString);
    procedure Set_CroExec2(Value: WideString);
    procedure Set_UfExec2(Value: WideString);
    procedure Set_CbosExec2(Value: WideString);
  end;

{ T341_XMLCto_guiaOdontologia_procedimentosExecutados }

  T341_XMLCto_guiaOdontologia_procedimentosExecutados = class(TXMLNode, I341_XMLCto_guiaOdontologia_procedimentosExecutados)
  protected
    { I341_XMLCto_guiaOdontologia_procedimentosExecutados }
    function Get_SequencialItem: Integer;
    function Get_ProcSolic: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_QtdProc: Integer;
    function Get_QtdUS: WideString;
    function Get_ValorProc: WideString;
    function Get_ValorFranquia: WideString;
    function Get_Autorizado: Boolean;
    function Get_DataRealizacao: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_QtdUS(Value: WideString);
    procedure Set_ValorProc(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_Autorizado(Value: Boolean);
    procedure Set_DataRealizacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_guiaOdontologia_procedimentosExecutadosList341 }

  T341_XMLCto_guiaOdontologia_procedimentosExecutadosList341 = class(TXMLNodeCollection, I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341)
  protected
    { I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341 }
    function Add: I341_XMLCto_guiaOdontologia_procedimentosExecutados;
    function Insert(const Index: Integer): I341_XMLCto_guiaOdontologia_procedimentosExecutados;

    function Get_Item(Index: Integer): I341_XMLCto_guiaOdontologia_procedimentosExecutados;
  end;

{ T341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao }

  T341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao = class(TXMLNode, I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao)
  protected
    { I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
  end;

{ T341_XMLCto_anexoSituacaoInicialnaGTO }

  T341_XMLCto_anexoSituacaoInicialnaGTO = class(TXMLNode, I341_XMLCto_anexoSituacaoInicialnaGTO)
  protected
    { I341_XMLCto_anexoSituacaoInicialnaGTO }
    function Get_NumeroGuiaAnexo: WideString;
    function Get_NumeroGuiaReferenciada: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Ct_situacaoInicial: I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial;
    procedure Set_NumeroGuiaAnexo(Value: WideString);
    procedure Set_NumeroGuiaReferenciada(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial }

  T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial = class(TXMLNode, I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial)
  protected
    { I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial }
    function Get_SituacaoClinica: I341_XMLCt_situacaoClinica;
    function Get_DoencaPeriodontal: Boolean;
    function Get_AlteracaoTecidoMole: Boolean;
    function Get_Observacao: WideString;
    procedure Set_DoencaPeriodontal(Value: Boolean);
    procedure Set_AlteracaoTecidoMole(Value: Boolean);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_anexoLote }

  T341_XMLCt_anexoLote = class(TXMLNode, I341_XMLCt_anexoLote)
  protected
    { I341_XMLCt_anexoLote }
    function Get_NumeroLote: WideString;
    function Get_AnexosGuiasTISS: I341_XMLCt_anexoLote_AnexosGuiasTISS;
    procedure Set_NumeroLote(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_anexoLote_AnexosGuiasTISS }

  T341_XMLCt_anexoLote_AnexosGuiasTISS = class(TXMLNode, I341_XMLCt_anexoLote_AnexosGuiasTISS)
  private
    FAnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341;
  protected
    { I341_XMLCt_anexoLote_AnexosGuiasTISS }
    function Get_AnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341;
    function Get_AnexoSolicitacaoRadio: I341_XMLCtm_anexoSolicitacaoRadio;
    function Get_AnexoSolicitacaoQuimio: I341_XMLCtm_anexoSolicitacaoQuimio;
    function Get_AnexoSolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_anexoSolicitacaoRadio }

  T341_XMLCtm_anexoSolicitacaoRadio = class(TXMLNode, I341_XMLCtm_anexoSolicitacaoRadio)
  protected
    { I341_XMLCtm_anexoSolicitacaoRadio }
    function Get_CabecalhoAnexo: I341_XMLCt_anexoCabecalho;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiarioRadio;
    function Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_DiagnosticoOncologicoRadio: I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio;
    function Get_TratamentosAnteriores: I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores;
    function Get_NumeroCampos: Integer;
    function Get_DoseCampo: Integer;
    function Get_DoseTotal: Integer;
    function Get_NrDias: Integer;
    function Get_DtPrevistaInicio: WideString;
    function Get_Observacao: WideString;
    procedure Set_NumeroCampos(Value: Integer);
    procedure Set_DoseCampo(Value: Integer);
    procedure Set_DoseTotal(Value: Integer);
    procedure Set_NrDias(Value: Integer);
    procedure Set_DtPrevistaInicio(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_anexoCabecalho }

  T341_XMLCt_anexoCabecalho = class(TXMLNode, I341_XMLCt_anexoCabecalho)
  protected
    { I341_XMLCt_anexoCabecalho }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaAnexo: WideString;
    function Get_NumeroGuiaReferenciada: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_DataSolicitacao: WideString;
    function Get_Senha: WideString;
    function Get_DataAutorizacao: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaAnexo(Value: WideString);
    procedure Set_NumeroGuiaReferenciada(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_DataAutorizacao(Value: WideString);
  end;

{ T341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio }

  T341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio = class(TXMLNode, I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio)
  protected
    { I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio }
    function Get_DiagRadio: I341_XMLCt_diagnosticoOncologico;
    function Get_DiagnosticoImagem: WideString;
    procedure Set_DiagnosticoImagem(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores }

  T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores = class(TXMLNode, I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores)
  protected
    { I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores }
    function Get_Cirurgia: WideString;
    function Get_Datacirurgia: WideString;
    function Get_Quimioterapia: WideString;
    function Get_DataQuimioterapia: WideString;
    procedure Set_Cirurgia(Value: WideString);
    procedure Set_Datacirurgia(Value: WideString);
    procedure Set_Quimioterapia(Value: WideString);
    procedure Set_DataQuimioterapia(Value: WideString);
  end;

{ T341_XMLCtm_anexoSolicitacaoQuimio }

  T341_XMLCtm_anexoSolicitacaoQuimio = class(TXMLNode, I341_XMLCtm_anexoSolicitacaoQuimio)
  protected
    { I341_XMLCtm_anexoSolicitacaoQuimio }
    function Get_CabecalhoAnexo: I341_XMLCt_anexoCabecalho;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiario;
    function Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_DiagnosticoOncologicoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia;
    function Get_DrogasSolicitadas: I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas;
    function Get_TratamentosAnteriores: I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores;
    function Get_NumeroCiclos: Integer;
    function Get_CicloAtual: Integer;
    function Get_DiasCicloAtual: Integer;
    function Get_IntervaloCiclos: Integer;
    function Get_Observacao: WideString;
    procedure Set_NumeroCiclos(Value: Integer);
    procedure Set_CicloAtual(Value: Integer);
    procedure Set_DiasCicloAtual(Value: Integer);
    procedure Set_IntervaloCiclos(Value: Integer);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia }

  T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia = class(TXMLNode, I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia)
  protected
    { I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia }
    function Get_DiagQuimio: I341_XMLCt_diagnosticoOncologico;
    function Get_Tumor: WideString;
    function Get_Nodulo: WideString;
    function Get_Metastase: WideString;
    function Get_TipoQuimioterapia: WideString;
    function Get_PlanoTerapeutico: WideString;
    procedure Set_Tumor(Value: WideString);
    procedure Set_Nodulo(Value: WideString);
    procedure Set_Metastase(Value: WideString);
    procedure Set_TipoQuimioterapia(Value: WideString);
    procedure Set_PlanoTerapeutico(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas }

  T341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas = class(TXMLNodeCollection, I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas)
  protected
    { I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas }
    function Get_DrogaSolicitada(Index: Integer): I341_XMLCt_drogasSolicitadas;
    function Add: I341_XMLCt_drogasSolicitadas;
    function Insert(const Index: Integer): I341_XMLCt_drogasSolicitadas;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores }

  T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores = class(TXMLNode, I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores)
  protected
    { I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores }
    function Get_Cirurgia: WideString;
    function Get_Datacirurgia: WideString;
    function Get_AreaIrradiada: WideString;
    function Get_DataIrradiacao: WideString;
    procedure Set_Cirurgia(Value: WideString);
    procedure Set_Datacirurgia(Value: WideString);
    procedure Set_AreaIrradiada(Value: WideString);
    procedure Set_DataIrradiacao(Value: WideString);
  end;

{ T341_XMLCtm_anexoSolicitacaoOPME }

  T341_XMLCtm_anexoSolicitacaoOPME = class(TXMLNode, I341_XMLCtm_anexoSolicitacaoOPME)
  protected
    { I341_XMLCtm_anexoSolicitacaoOPME }
    function Get_CabecalhoAnexo: I341_XMLCt_anexoCabecalho;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_ProfissionalSolicitante: I341_XMLCtm_anexoSolicitante;
    function Get_JustificativaTecnica: WideString;
    function Get_EspecificacaoMaterial: WideString;
    function Get_OpmeSolicitadas: I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas;
    function Get_Observacao: WideString;
    procedure Set_JustificativaTecnica(Value: WideString);
    procedure Set_EspecificacaoMaterial(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas }

  T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas = class(TXMLNodeCollection, I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas)
  protected
    { I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas }
    function Get_OpmeSolicitada(Index: Integer): I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
    function Add: I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
    function Insert(const Index: Integer): I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada }

  T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada = class(TXMLNode, I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada)
  protected
    { I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada }
    function Get_IdentificacaoOPME: I341_XMLCt_procedimentoDados;
    function Get_OpcaoFabricante: WideString;
    function Get_QuantidadeSolicitada: Integer;
    function Get_ValorSolicitado: WideString;
    function Get_RegistroANVISA: WideString;
    function Get_CodigoRefFabricante: WideString;
    function Get_AutorizacaoFuncionamento: WideString;
    procedure Set_OpcaoFabricante(Value: WideString);
    procedure Set_QuantidadeSolicitada(Value: Integer);
    procedure Set_ValorSolicitado(Value: WideString);
    procedure Set_RegistroANVISA(Value: WideString);
    procedure Set_CodigoRefFabricante(Value: WideString);
    procedure Set_AutorizacaoFuncionamento(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_demonstrativoSolicitacao }

  T341_XMLCt_demonstrativoSolicitacao = class(TXMLNode, I341_XMLCt_demonstrativoSolicitacao)
  protected
    { I341_XMLCt_demonstrativoSolicitacao }
    function Get_DemonstrativoPagamento: I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento;
    function Get_DemonstrativoAnalise: I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento }

  T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento = class(TXMLNode, I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento)
  protected
    { I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_DataSolicitacao: WideString;
    function Get_TipoDemonstrativo: WideString;
    function Get_Periodo: I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo;
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_TipoDemonstrativo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo }

  T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo = class(TXMLNode, I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo)
  protected
    { I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo }
    function Get_DataPagamento: WideString;
    function Get_Competencia: WideString;
    procedure Set_DataPagamento(Value: WideString);
    procedure Set_Competencia(Value: WideString);
  end;

{ T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise }

  T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise = class(TXMLNode, I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise)
  protected
    { I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_DataSolicitacao: WideString;
    function Get_Protocolos: I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos;
    procedure Set_DataSolicitacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos }

  T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos = class(TXMLNodeCollection, I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos)
  protected
    { I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos }
    function Get_NumeroProtocolo(Index: Integer): WideString;
    function Add(const NumeroProtocolo: WideString): IXMLNode;
    function Insert(const Index: Integer; const NumeroProtocolo: WideString): IXMLNode;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloSolicitacaoStatus }

  T341_XMLCt_protocoloSolicitacaoStatus = class(TXMLNode, I341_XMLCt_protocoloSolicitacaoStatus)
  protected
    { I341_XMLCt_protocoloSolicitacaoStatus }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroProtocolo: WideString;
    procedure Set_NumeroProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_solicitacaoLote }

  T341_XMLCtm_solicitacaoLote = class(TXMLNode, I341_XMLCtm_solicitacaoLote)
  protected
    { I341_XMLCtm_solicitacaoLote }
    function Get_SolicitacaoSPSADT: I341_XMLCtm_spsadtSolicitacaoGuia;
    function Get_SolicitacaoInternacao: I341_XMLCtm_internacaoSolicitacaoGuia;
    function Get_SolicitacaoProrrogacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia;
    function Get_SolicitacaoOdontologia: I341_XMLCto_odontoSolicitacaoGuia;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_spsadtSolicitacaoGuia }

  T341_XMLCtm_spsadtSolicitacaoGuia = class(TXMLNode, I341_XMLCtm_spsadtSolicitacaoGuia)
  private
    FProcedimentosSolicitados: I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341;
  protected
    { I341_XMLCtm_spsadtSolicitacaoGuia }
    function Get_CabecalhoSolicitacao: I341_XMLCt_guiaCabecalho;
    function Get_NumeroGuiaPrincipal: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_TipoEtapaAutorizacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosSolicitante: I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante;
    function Get_CaraterAtendimento: WideString;
    function Get_DataSolicitacao: WideString;
    function Get_IndicacaoClinica: WideString;
    function Get_ProcedimentosSolicitados: I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341;
    function Get_DadosExecutante: I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante;
    function Get_AnexoClinico: I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico;
    function Get_Observacao: WideString;
    procedure Set_NumeroGuiaPrincipal(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_TipoEtapaAutorizacao(Value: WideString);
    procedure Set_CaraterAtendimento(Value: WideString);
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_IndicacaoClinica(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante }

  T341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante = class(TXMLNode, I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante)
  protected
    { I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante }
    function Get_ContratadoSolicitante: I341_XMLCt_contratadoDados;
    function Get_ProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados }

  T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados = class(TXMLNode, I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados)
  protected
    { I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeSolicitada: Integer;
    procedure Set_QuantidadeSolicitada(Value: Integer);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341 }

  T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341 = class(TXMLNodeCollection, I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341)
  protected
    { I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341 }
    function Add: I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
    function Insert(const Index: Integer): I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;

    function Get_Item(Index: Integer): I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
  end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante }

  T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante = class(TXMLNode, I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante)
  protected
    { I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante }
    function Get_CodigonaOperadora: WideString;
    function Get_NomeContratado: WideString;
    function Get_CNES: WideString;
    procedure Set_CodigonaOperadora(Value: WideString);
    procedure Set_NomeContratado(Value: WideString);
    procedure Set_CNES(Value: WideString);
  end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico }

  T341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico = class(TXMLNode, I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico)
  protected
    { I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico }
    function Get_SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio;
    function Get_SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio;
    function Get_SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_internacaoSolicitacaoGuia }

  T341_XMLCtm_internacaoSolicitacaoGuia = class(TXMLNode, I341_XMLCtm_internacaoSolicitacaoGuia)
  private
    FProcedimentosSolicitados: I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341;
  protected
    { I341_XMLCtm_internacaoSolicitacaoGuia }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_TipoEtapaAutorizacao: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_IdentificacaoSolicitante: I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante;
    function Get_DadosHospitalSolicitado: I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado;
    function Get_DadosInternacao: I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao;
    function Get_HipotesesDiagnosticas: I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas;
    function Get_ProcedimentosSolicitados: I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341;
    function Get_DataSolicitacao: WideString;
    function Get_Observacao: WideString;
    function Get_AnexoClinico: I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_TipoEtapaAutorizacao(Value: WideString);
    procedure Set_DataSolicitacao(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante }

  T341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante = class(TXMLNode, I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante)
  protected
    { I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante }
    function Get_DadosDoContratado: I341_XMLCt_contratadoDados;
    function Get_DadosProfissionalContratado: I341_XMLCt_contratadoProfissionalDados;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado }

  T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado = class(TXMLNode, I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado)
  protected
    { I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado }
    function Get_CodigoIndicadonaOperadora: WideString;
    function Get_NomeContratadoIndicado: WideString;
    function Get_DataSugeridaInternacao: WideString;
    procedure Set_CodigoIndicadonaOperadora(Value: WideString);
    procedure Set_NomeContratadoIndicado(Value: WideString);
    procedure Set_DataSugeridaInternacao(Value: WideString);
  end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao }

  T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao = class(TXMLNode, I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao)
  protected
    { I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao }
    function Get_CaraterAtendimento: WideString;
    function Get_TipoInternacao: WideString;
    function Get_RegimeInternacao: WideString;
    function Get_QtDiariasSolicitadas: Integer;
    function Get_IndicadorOPME: WideString;
    function Get_IndicadorQuimio: WideString;
    function Get_IndicacaoClinica: WideString;
    procedure Set_CaraterAtendimento(Value: WideString);
    procedure Set_TipoInternacao(Value: WideString);
    procedure Set_RegimeInternacao(Value: WideString);
    procedure Set_QtDiariasSolicitadas(Value: Integer);
    procedure Set_IndicadorOPME(Value: WideString);
    procedure Set_IndicadorQuimio(Value: WideString);
    procedure Set_IndicacaoClinica(Value: WideString);
  end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas }

  T341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas = class(TXMLNode, I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas)
  private
    FDiagnosticoCID: I341_XMLSt_texto4List341;
  protected
    { I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas }
    function Get_DiagnosticoCID: I341_XMLSt_texto4List341;
    function Get_IndicadorAcidente: WideString;
    procedure Set_IndicadorAcidente(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados }

  T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados = class(TXMLNode, I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados)
  protected
    { I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeSolicitada: Integer;
    procedure Set_QuantidadeSolicitada(Value: Integer);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341 }

  T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341 = class(TXMLNodeCollection, I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341)
  protected
    { I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341 }
    function Add: I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
    function Insert(const Index: Integer): I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;

    function Get_Item(Index: Integer): I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
  end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico }

  T341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico = class(TXMLNode, I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico)
  protected
    { I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico }
    function Get_SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio;
    function Get_SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio;
    function Get_SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia }

  T341_XMLCtm_prorrogacaoSolicitacaoGuia = class(TXMLNode, I341_XMLCtm_prorrogacaoSolicitacaoGuia)
  private
    FProcedimentosAdicionais: I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341;
  protected
    { I341_XMLCtm_prorrogacaoSolicitacaoGuia }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NrGuiaReferenciada: WideString;
    function Get_DadosBeneficiario: I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario;
    function Get_DadosContratadoSolicitante: I341_XMLCt_contratadoDados;
    function Get_DadosProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados;
    function Get_DadosInternacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao;
    function Get_ProcedimentosAdicionais: I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341;
    function Get_AnexoClinicoProrrogacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao;
    function Get_Observacao: WideString;
    function Get_DataSolicitacao: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NrGuiaReferenciada(Value: WideString);
    procedure Set_Observacao(Value: WideString);
    procedure Set_DataSolicitacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario }

  T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario = class(TXMLNode, I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario)
  protected
    { I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario }
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
  end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao }

  T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao = class(TXMLNode, I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao)
  protected
    { I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao }
    function Get_QtDiariasAdicionais: Integer;
    function Get_TipoAcomodacaoSolicitada: WideString;
    function Get_IndicacaoClinica: WideString;
    procedure Set_QtDiariasAdicionais(Value: Integer);
    procedure Set_TipoAcomodacaoSolicitada(Value: WideString);
    procedure Set_IndicacaoClinica(Value: WideString);
  end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais }

  T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais = class(TXMLNode, I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais)
  protected
    { I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_QuantidadeSolicitada: Integer;
    procedure Set_QuantidadeSolicitada(Value: Integer);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341 }

  T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341 = class(TXMLNodeCollection, I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341)
  protected
    { I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341 }
    function Add: I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
    function Insert(const Index: Integer): I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;

    function Get_Item(Index: Integer): I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
  end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao }

  T341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao = class(TXMLNode, I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao)
  protected
    { I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao }
    function Get_SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio;
    function Get_SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio;
    function Get_SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_odontoSolicitacaoGuia }

  T341_XMLCto_odontoSolicitacaoGuia = class(TXMLNode, I341_XMLCto_odontoSolicitacaoGuia)
  private
    FProcedimentosSolicitados: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341;
  protected
    { I341_XMLCto_odontoSolicitacaoGuia }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaPrincipal: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_AtendimentoRN: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_PlanoBeneficiario: WideString;
    function Get_NomeEmpresa: WideString;
    function Get_NumeroTelefone: WideString;
    function Get_NomeTitular: WideString;
    function Get_DadosProfissionaisResponsaveis: I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis;
    function Get_ProcedimentosSolicitados: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341;
    function Get_DataTerminoTrat: WideString;
    function Get_TipoAtendimento: WideString;
    function Get_QtdTotalUS: WideString;
    function Get_ValorTotalProc: WideString;
    function Get_ValorTotalFranquia: WideString;
    function Get_Observacao: WideString;
    function Get_OdontoInicial: I341_XMLCto_anexoSituacaoInicial;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaPrincipal(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_AtendimentoRN(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    procedure Set_PlanoBeneficiario(Value: WideString);
    procedure Set_NomeEmpresa(Value: WideString);
    procedure Set_NumeroTelefone(Value: WideString);
    procedure Set_NomeTitular(Value: WideString);
    procedure Set_DataTerminoTrat(Value: WideString);
    procedure Set_TipoAtendimento(Value: WideString);
    procedure Set_QtdTotalUS(Value: WideString);
    procedure Set_ValorTotalProc(Value: WideString);
    procedure Set_ValorTotalFranquia(Value: WideString);
    procedure Set_Observacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis }

  T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis = class(TXMLNode, I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis)
  protected
    { I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis }
    function Get_NomeProfSolic: WideString;
    function Get_CroSolic: WideString;
    function Get_UfSolic: WideString;
    function Get_CbosSolic: WideString;
    function Get_CodigoProfExec: WideString;
    function Get_NomeProfExec: WideString;
    function Get_CroExec: WideString;
    function Get_UfExec: WideString;
    function Get_CnesExec: WideString;
    function Get_NomeProfExec2: WideString;
    function Get_CroExec2: WideString;
    function Get_UfExec2: WideString;
    function Get_CbosExec2: WideString;
    procedure Set_NomeProfSolic(Value: WideString);
    procedure Set_CroSolic(Value: WideString);
    procedure Set_UfSolic(Value: WideString);
    procedure Set_CbosSolic(Value: WideString);
    procedure Set_CodigoProfExec(Value: WideString);
    procedure Set_NomeProfExec(Value: WideString);
    procedure Set_CroExec(Value: WideString);
    procedure Set_UfExec(Value: WideString);
    procedure Set_CnesExec(Value: WideString);
    procedure Set_NomeProfExec2(Value: WideString);
    procedure Set_CroExec2(Value: WideString);
    procedure Set_UfExec2(Value: WideString);
    procedure Set_CbosExec2(Value: WideString);
  end;

{ T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados }

  T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados = class(TXMLNode, I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados)
  protected
    { I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados }
    function Get_ProcSolic: I341_XMLCt_procedimentoDados;
    function Get_DenteRegiao: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_QtdProc: Integer;
    function Get_QtdUS: WideString;
    function Get_ValorProc: WideString;
    function Get_ValorFranquia: WideString;
    function Get_Aut: WideString;
    function Get_DataRealizacao: WideString;
    procedure Set_DenteFace(Value: WideString);
    procedure Set_QtdProc(Value: Integer);
    procedure Set_QtdUS(Value: WideString);
    procedure Set_ValorProc(Value: WideString);
    procedure Set_ValorFranquia(Value: WideString);
    procedure Set_Aut(Value: WideString);
    procedure Set_DataRealizacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341 }

  T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341 = class(TXMLNodeCollection, I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341)
  protected
    { I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341 }
    function Add: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
    function Insert(const Index: Integer): I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;

    function Get_Item(Index: Integer): I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
  end;

{ T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao }

  T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao = class(TXMLNode, I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao)
  protected
    { I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
  end;

{ T341_XMLCt_solicitacaoProcedimento }

  T341_XMLCt_solicitacaoProcedimento = class(T341_XMLCtm_solicitacaoLote, I341_XMLCt_solicitacaoProcedimento)
  protected
    { I341_XMLCt_solicitacaoProcedimento }
  end;

{ T341_XMLCt_autorizacaoSolicitaStatus }

  T341_XMLCt_autorizacaoSolicitaStatus = class(TXMLNode, I341_XMLCt_autorizacaoSolicitaStatus)
  protected
    { I341_XMLCt_autorizacaoSolicitaStatus }
    function Get_IdentificacaoSolicitacao: I341_XMLCt_guiaCabecalho;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_elegibilidadeVerifica }

  T341_XMLCt_elegibilidadeVerifica = class(TXMLNode, I341_XMLCt_elegibilidadeVerifica)
  protected
    { I341_XMLCt_elegibilidadeVerifica }
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroCarteira: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_NumeroCNS: WideString;
    function Get_TipoIdent: WideString;
    function Get_IdentificadorBeneficiario: WideString;
    function Get_TemplateBiometrico: WideString;
    function Get_ValidadeCarteira: WideString;
    function Get_AusenciaCodValidacao: WideString;
    function Get_CodValidacao: WideString;
    procedure Set_NumeroCarteira(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_NumeroCNS(Value: WideString);
    procedure Set_TipoIdent(Value: WideString);
    procedure Set_IdentificadorBeneficiario(Value: WideString);
    procedure Set_TemplateBiometrico(Value: WideString);
    procedure Set_ValidadeCarteira(Value: WideString);
    procedure Set_AusenciaCodValidacao(Value: WideString);
    procedure Set_CodValidacao(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaCancelamento }

  T341_XMLCt_guiaCancelamento = class(TXMLNode, I341_XMLCt_guiaCancelamento)
  private
    FGuiasCancelamento: I341_XMLCt_guiaCancelamento_guiasCancelamentoList341;
  protected
    { I341_XMLCt_guiaCancelamento }
    function Get_TipoGuia: WideString;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroProtocolo: WideString;
    function Get_GuiasCancelamento: I341_XMLCt_guiaCancelamento_guiasCancelamentoList341;
    procedure Set_TipoGuia(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaCancelamento_guiasCancelamento }

  T341_XMLCt_guiaCancelamento_guiasCancelamento = class(TXMLNode, I341_XMLCt_guiaCancelamento_guiasCancelamento)
  protected
    { I341_XMLCt_guiaCancelamento_guiasCancelamento }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
  end;

{ T341_XMLCt_guiaCancelamento_guiasCancelamentoList341 }

  T341_XMLCt_guiaCancelamento_guiasCancelamentoList341 = class(TXMLNodeCollection, I341_XMLCt_guiaCancelamento_guiasCancelamentoList341)
  protected
    { I341_XMLCt_guiaCancelamento_guiasCancelamentoList341 }
    function Add: I341_XMLCt_guiaCancelamento_guiasCancelamento;
    function Insert(const Index: Integer): I341_XMLCt_guiaCancelamento_guiasCancelamento;

    function Get_Item(Index: Integer): I341_XMLCt_guiaCancelamento_guiasCancelamento;
  end;

{ T341_XMLCt_guiaRecursoLote }

  T341_XMLCt_guiaRecursoLote = class(TXMLNode, I341_XMLCt_guiaRecursoLote)
  protected
    { I341_XMLCt_guiaRecursoLote }
    function Get_GuiaRecursoGlosaOdonto: I341_XMLCto_recursoGlosaOdonto;
    function Get_GuiaRecursoGlosa: I341_XMLCtm_recursoGlosa;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_recursoGlosaOdonto }

  T341_XMLCto_recursoGlosaOdonto = class(TXMLNode, I341_XMLCto_recursoGlosaOdonto)
  protected
    { I341_XMLCto_recursoGlosaOdonto }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaRecGlosaPrestador: WideString;
    function Get_NomeOperadora: WideString;
    function Get_ObjetoRecurso: WideString;
    function Get_NumeroGuiaRecGlosaOperadora: WideString;
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_NumeroProtocolo: Integer;
    function Get_OpcaoRecurso: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso;
    function Get_ValorTotalRecursado: WideString;
    function Get_DataRecurso: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_ObjetoRecurso(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_NumeroProtocolo(Value: Integer);
    procedure Set_ValorTotalRecursado(Value: WideString);
    procedure Set_DataRecurso(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso }

  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso = class(TXMLNode, I341_XMLCto_recursoGlosaOdonto_opcaoRecurso)
  private
    FRecursoGuia: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341;
  protected
    { I341_XMLCto_recursoGlosaOdonto_opcaoRecurso }
    function Get_RecursoProtocolo: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo;
    function Get_RecursoGuia: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo }

  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo = class(TXMLNode, I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo)
  protected
    { I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
  end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia }

  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia = class(TXMLNode, I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia)
  private
    FRecursoProcedimento: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341;
  protected
    { I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_NomeBeneficiario: WideString;
    function Get_CodGlosaGuia: WideString;
    function Get_JustificativaGuia: WideString;
    function Get_RecursoProcedimento: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
    procedure Set_NomeBeneficiario(Value: WideString);
    procedure Set_CodGlosaGuia(Value: WideString);
    procedure Set_JustificativaGuia(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341 }

  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341 = class(TXMLNodeCollection, I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341)
  protected
    { I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341 }
    function Add: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
  end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento }

  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento = class(TXMLNode, I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento)
  protected
    { I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento }
    function Get_SequencialItem: Integer;
    function Get_DataRealizacao: WideString;
    function Get_DenteRegiao: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao;
    function Get_DenteFace: WideString;
    function Get_Quantidade: Integer;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_CodGlosaProc: WideString;
    function Get_JustificativaProc: WideString;
    function Get_ValorRecursado: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataRealizacao(Value: WideString);
    procedure Set_DenteFace(Value: WideString);
    procedure Set_Quantidade(Value: Integer);
    procedure Set_CodGlosaProc(Value: WideString);
    procedure Set_JustificativaProc(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341 }

  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341 = class(TXMLNodeCollection, I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341)
  protected
    { I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341 }
    function Add: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
    function Insert(const Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;

    function Get_Item(Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
  end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao }

  T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao = class(TXMLNode, I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao)
  protected
    { I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao }
    function Get_CodDente: WideString;
    function Get_CodRegiao: WideString;
    procedure Set_CodDente(Value: WideString);
    procedure Set_CodRegiao(Value: WideString);
  end;

{ T341_XMLCtm_recursoGlosa }

  T341_XMLCtm_recursoGlosa = class(TXMLNode, I341_XMLCtm_recursoGlosa)
  protected
    { I341_XMLCtm_recursoGlosa }
    function Get_RegistroANS: WideString;
    function Get_NumeroGuiaRecGlosaPrestador: WideString;
    function Get_NomeOperadora: WideString;
    function Get_ObjetoRecurso: WideString;
    function Get_NumeroGuiaRecGlosaOperadora: WideString;
    function Get_DadosContratado: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_NumeroProtocolo: Integer;
    function Get_OpcaoRecurso: I341_XMLCtm_recursoGlosa_opcaoRecurso;
    function Get_ValorTotalRecursado: WideString;
    function Get_DataRecurso: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
    procedure Set_NomeOperadora(Value: WideString);
    procedure Set_ObjetoRecurso(Value: WideString);
    procedure Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_NumeroProtocolo(Value: Integer);
    procedure Set_ValorTotalRecursado(Value: WideString);
    procedure Set_DataRecurso(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso }

  T341_XMLCtm_recursoGlosa_opcaoRecurso = class(TXMLNode, I341_XMLCtm_recursoGlosa_opcaoRecurso)
  private
    FRecursoGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341;
  protected
    { I341_XMLCtm_recursoGlosa_opcaoRecurso }
    function Get_RecursoProtocolo: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo;
    function Get_RecursoGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo }

  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo = class(TXMLNode, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo)
  protected
    { I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo }
    function Get_CodigoGlosaProtocolo: WideString;
    function Get_JustificativaProtocolo: WideString;
    procedure Set_CodigoGlosaProtocolo(Value: WideString);
    procedure Set_JustificativaProtocolo(Value: WideString);
  end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia }

  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia = class(TXMLNode, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia)
  protected
    { I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia }
    function Get_NumeroGuiaOrigem: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_Senha: WideString;
    function Get_OpcaoRecursoGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia;
    procedure Set_NumeroGuiaOrigem(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_Senha(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341 }

  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341 = class(TXMLNodeCollection, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341)
  protected
    { I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341 }
    function Add: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
    function Insert(const Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
  end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia }

  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia = class(TXMLNode, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia)
  private
    FRecursoGuiaCompleta: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341;
    FItensGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341;
  protected
    { I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia }
    function Get_RecursoGuiaCompleta: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341;
    function Get_ItensGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta }

  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta = class(TXMLNode, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta)
  protected
    { I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta }
    function Get_CodGlosaGuia: WideString;
    function Get_JustificativaGuia: WideString;
    procedure Set_CodGlosaGuia(Value: WideString);
    procedure Set_JustificativaGuia(Value: WideString);
  end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341 }

  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341 = class(TXMLNodeCollection, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341)
  protected
    { I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341 }
    function Add: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
    function Insert(const Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;

    function Get_Item(Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
  end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia }

  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia = class(TXMLNode, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia)
  protected
    { I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia }
    function Get_SequencialItem: Integer;
    function Get_DataInicio: WideString;
    function Get_DataFim: WideString;
    function Get_ProcRecurso: I341_XMLCt_procedimentoDados;
    function Get_GrauParticipacao: WideString;
    function Get_CodGlosaItem: WideString;
    function Get_ValorRecursado: WideString;
    function Get_JustificativaItem: WideString;
    procedure Set_SequencialItem(Value: Integer);
    procedure Set_DataInicio(Value: WideString);
    procedure Set_DataFim(Value: WideString);
    procedure Set_GrauParticipacao(Value: WideString);
    procedure Set_CodGlosaItem(Value: WideString);
    procedure Set_ValorRecursado(Value: WideString);
    procedure Set_JustificativaItem(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341 }

  T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341 = class(TXMLNodeCollection, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341)
  protected
    { I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341 }
    function Add: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
    function Insert(const Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;

    function Get_Item(Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
  end;

{ T341_XMLEpilogo }

  T341_XMLEpilogo = class(TXMLNode, I341_XMLEpilogo)
  protected
    { I341_XMLEpilogo }
    function Get_Hash: WideString;
    procedure Set_Hash(Value: WideString);
  end;

{ T341_XMLCt_creditoOdonto }

  T341_XMLCt_creditoOdonto = class(TXMLNode, I341_XMLCt_creditoOdonto)
  protected
    { I341_XMLCt_creditoOdonto }
    function Get_ValorCredito: WideString;
    function Get_Descricao: WideString;
    procedure Set_ValorCredito(Value: WideString);
    procedure Set_Descricao(Value: WideString);
  end;

{ T341_XMLCt_diagnostico }

  T341_XMLCt_diagnostico = class(TXMLNode, I341_XMLCt_diagnostico)
  protected
    { I341_XMLCt_diagnostico }
    function Get_TabelaDiagnostico: WideString;
    function Get_CodigoDiagnostico: WideString;
    function Get_DescricaoDiagnostico: WideString;
    procedure Set_TabelaDiagnostico(Value: WideString);
    procedure Set_CodigoDiagnostico(Value: WideString);
    procedure Set_DescricaoDiagnostico(Value: WideString);
  end;

{ T341_XMLCt_fontePagadora }

  T341_XMLCt_fontePagadora = class(TXMLNode, I341_XMLCt_fontePagadora)
  protected
    { I341_XMLCt_fontePagadora }
    function Get_RegistroANS: WideString;
    function Get_IdentificacaoUnidadePagadora: WideString;
    procedure Set_RegistroANS(Value: WideString);
    procedure Set_IdentificacaoUnidadePagadora(Value: WideString);
  end;

{ T341_XMLCt_guiaDadosAnexo }

  T341_XMLCt_guiaDadosAnexo = class(TXMLNode, I341_XMLCt_guiaDadosAnexo)
  protected
    { I341_XMLCt_guiaDadosAnexo }
    function Get_NumeroGuiaPrestador: WideString;
    function Get_NumeroGuiaOperadora: WideString;
    function Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
    function Get_DataEmissao_SolicitacaoAnexo: WideString;
    function Get_VlInformadoGuia: I341_XMLCt_valorTotal;
    function Get_GlosaAnexo: I341_XMLCt_guiaDadosAnexo_glosaAnexo;
    function Get_ProcedimentosSolicitados: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados;
    procedure Set_NumeroGuiaPrestador(Value: WideString);
    procedure Set_NumeroGuiaOperadora(Value: WideString);
    procedure Set_DataEmissao_SolicitacaoAnexo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDadosAnexoList341 }

  T341_XMLCt_guiaDadosAnexoList341 = class(TXMLNodeCollection, I341_XMLCt_guiaDadosAnexoList341)
  protected
    { I341_XMLCt_guiaDadosAnexoList341 }
    function Add: I341_XMLCt_guiaDadosAnexo;
    function Insert(const Index: Integer): I341_XMLCt_guiaDadosAnexo;

    function Get_Item(Index: Integer): I341_XMLCt_guiaDadosAnexo;
  end;

{ T341_XMLCt_guiaDadosAnexo_glosaAnexo }

  T341_XMLCt_guiaDadosAnexo_glosaAnexo = class(TXMLNode, I341_XMLCt_guiaDadosAnexo_glosaAnexo)
  private
    FMotivoGlosa: I341_XMLCt_motivoGlosaList341;
  protected
    { I341_XMLCt_guiaDadosAnexo_glosaAnexo }
    function Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
    function Get_VlGlosaAnexo: WideString;
    procedure Set_VlGlosaAnexo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados }

  T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados = class(TXMLNodeCollection, I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados)
  protected
    { I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados }
    function Get_ProcedimentoSolicitado(Index: Integer): I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
    function Add: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
    function Insert(const Index: Integer): I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado }

  T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado = class(TXMLNode, I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado)
  protected
    { I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_OpcaoFabricante: WideString;
    function Get_QtdSolicitada: WideString;
    function Get_ValorSolicitado: WideString;
    function Get_QtdAutorizada: WideString;
    function Get_ValorAutorizado: WideString;
    function Get_GlosasProcedimento: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento;
    procedure Set_OpcaoFabricante(Value: WideString);
    procedure Set_QtdSolicitada(Value: WideString);
    procedure Set_ValorSolicitado(Value: WideString);
    procedure Set_QtdAutorizada(Value: WideString);
    procedure Set_ValorAutorizado(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento }

  T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento = class(TXMLNode, I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento)
  private
    FMotivoGlosa: I341_XMLCt_motivoGlosaList341;
  protected
    { I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento }
    function Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
    function Get_ValorGlosaProcedimento: WideString;
    procedure Set_ValorGlosaProcedimento(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaRecurso }

  T341_XMLCt_guiaRecurso = class(TXMLNode, I341_XMLCt_guiaRecurso)
  private
    FMotivosGlosa: I341_XMLCt_motivoGlosaList341;
  protected
    { I341_XMLCt_guiaRecurso }
    function Get_NumeroProtocolo: WideString;
    function Get_NumDemoAnalisePagto: WideString;
    function Get_NumeroGuiaRecurso: WideString;
    function Get_NumeroGuiaOrigem: WideString;
    function Get_MotivosGlosa: I341_XMLCt_motivoGlosaList341;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumDemoAnalisePagto(Value: WideString);
    procedure Set_NumeroGuiaRecurso(Value: WideString);
    procedure Set_NumeroGuiaOrigem(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_guiaRecursoList341 }

  T341_XMLCt_guiaRecursoList341 = class(TXMLNodeCollection, I341_XMLCt_guiaRecursoList341)
  protected
    { I341_XMLCt_guiaRecursoList341 }
    function Add: I341_XMLCt_guiaRecurso;
    function Insert(const Index: Integer): I341_XMLCt_guiaRecurso;

    function Get_Item(Index: Integer): I341_XMLCt_guiaRecurso;
  end;

{ T341_XMLCt_guiaValorTotalSADT }

  T341_XMLCt_guiaValorTotalSADT = class(TXMLNode, I341_XMLCt_guiaValorTotalSADT)
  protected
    { I341_XMLCt_guiaValorTotalSADT }
    function Get_ValorProcedimentos: WideString;
    function Get_ValorTaxasAlugueis: WideString;
    function Get_ValorMateriais: WideString;
    function Get_ValorMedicamentos: WideString;
    function Get_ValorOPME: WideString;
    function Get_ValorGasesMedicinais: WideString;
    function Get_ValorTotalGeral: WideString;
    procedure Set_ValorProcedimentos(Value: WideString);
    procedure Set_ValorTaxasAlugueis(Value: WideString);
    procedure Set_ValorMateriais(Value: WideString);
    procedure Set_ValorMedicamentos(Value: WideString);
    procedure Set_ValorOPME(Value: WideString);
    procedure Set_ValorGasesMedicinais(Value: WideString);
    procedure Set_ValorTotalGeral(Value: WideString);
  end;

{ T341_XMLCt_hipoteseDiagnostica }

  T341_XMLCt_hipoteseDiagnostica = class(TXMLNode, I341_XMLCt_hipoteseDiagnostica)
  protected
    { I341_XMLCt_hipoteseDiagnostica }
    function Get_Diagnostico: I341_XMLCt_diagnostico;
    function Get_IndicacaoAcidente: WideString;
    procedure Set_IndicacaoAcidente(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_intervaloCiclos }

  T341_XMLCt_intervaloCiclos = class(TXMLNode, I341_XMLCt_intervaloCiclos)
  protected
    { I341_XMLCt_intervaloCiclos }
    function Get_Tempo: Integer;
    function Get_Unidade: WideString;
    procedure Set_Tempo(Value: Integer);
    procedure Set_Unidade(Value: WideString);
  end;

{ T341_XMLCt_opmeDados }

  T341_XMLCt_opmeDados = class(TXMLNode, I341_XMLCt_opmeDados)
  protected
    { I341_XMLCt_opmeDados }
    function Get_IdentificacaoOPME: I341_XMLCt_procedimentoDados;
    function Get_NomeFabricante: WideString;
    procedure Set_NomeFabricante(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_opmUtilizada }

  T341_XMLCt_opmUtilizada = class(TXMLNode, I341_XMLCt_opmUtilizada)
  protected
    { I341_XMLCt_opmUtilizada }
    function Get_OPM: I341_XMLCt_opmUtilizada_OPM;
    function Get_ValorTotalOPM: WideString;
    procedure Set_ValorTotalOPM(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_opmUtilizada_OPM }

  T341_XMLCt_opmUtilizada_OPM = class(TXMLNodeCollection, I341_XMLCt_opmUtilizada_OPM)
  protected
    { I341_XMLCt_opmUtilizada_OPM }
    function Get_IdentificacaoOPM(Index: Integer): I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
    function Add: I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
    function Insert(const Index: Integer): I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_opmUtilizada_OPM_identificacaoOPM }

  T341_XMLCt_opmUtilizada_OPM_identificacaoOPM = class(TXMLNode, I341_XMLCt_opmUtilizada_OPM_identificacaoOPM)
  protected
    { I341_XMLCt_opmUtilizada_OPM_identificacaoOPM }
    function Get_IdentificacaoOPME: I341_XMLCt_procedimentoDados;
    function Get_Quantidade: Integer;
    function Get_CodigoBarra: WideString;
    function Get_ValorUnitario: WideString;
    function Get_ValorTotal: WideString;
    procedure Set_Quantidade(Value: Integer);
    procedure Set_CodigoBarra(Value: WideString);
    procedure Set_ValorUnitario(Value: WideString);
    procedure Set_ValorTotal(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_pagamentoResumo }

  T341_XMLCt_pagamentoResumo = class(TXMLNode, I341_XMLCt_pagamentoResumo)
  protected
    { I341_XMLCt_pagamentoResumo }
    function Get_NumeroFatura: WideString;
    function Get_NumeroLote: WideString;
    function Get_NumeroProtocolo: WideString;
    function Get_ValorTotalLote: I341_XMLCt_valorTotal;
    procedure Set_NumeroFatura(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_NumeroProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentosComplementares }

  T341_XMLCt_procedimentosComplementares = class(TXMLNode, I341_XMLCt_procedimentosComplementares)
  protected
    { I341_XMLCt_procedimentosComplementares }
    function Get_DataProvavel: WideString;
    function Get_Identificacao: I341_XMLCt_procedimentoDados;
    function Get_Quantidade: WideString;
    procedure Set_DataProvavel(Value: WideString);
    procedure Set_Quantidade(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_procedimentoSolicitado }

  T341_XMLCt_procedimentoSolicitado = class(TXMLNode, I341_XMLCt_procedimentoSolicitado)
  protected
    { I341_XMLCt_procedimentoSolicitado }
    function Get_Procedimento: I341_XMLCt_procedimentoDados;
    function Get_UnidadeMedida: WideString;
    function Get_QuantidadeSolicitada: Integer;
    procedure Set_UnidadeMedida(Value: WideString);
    procedure Set_QuantidadeSolicitada(Value: Integer);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloDetalheAnexo }

  T341_XMLCt_protocoloDetalheAnexo = class(TXMLNode, I341_XMLCt_protocoloDetalheAnexo)
  private
    FGlosasProtocolo: I341_XMLCt_motivoGlosaList341;
    FDadosGuias: I341_XMLCt_guiaDadosAnexoList341;
  protected
    { I341_XMLCt_protocoloDetalheAnexo }
    function Get_NumeroProtocolo: WideString;
    function Get_ValorTotalProtocolo: WideString;
    function Get_GlosasProtocolo: I341_XMLCt_motivoGlosaList341;
    function Get_VlGlosaProtocolo: WideString;
    function Get_DadosGuias: I341_XMLCt_guiaDadosAnexoList341;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_ValorTotalProtocolo(Value: WideString);
    procedure Set_VlGlosaProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloRecurso }

  T341_XMLCt_protocoloRecurso = class(TXMLNode, I341_XMLCt_protocoloRecurso)
  private
    FGlosaProtocolo: I341_XMLCt_motivoGlosaList341;
    FDadosGuias: I341_XMLCt_guiaRecursoList341;
  protected
    { I341_XMLCt_protocoloRecurso }
    function Get_NumeroProtocolo: WideString;
    function Get_GlosaProtocolo: I341_XMLCt_motivoGlosaList341;
    function Get_DadosGuias: I341_XMLCt_guiaRecursoList341;
    procedure Set_NumeroProtocolo(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloRecebimentoAnexo }

  T341_XMLCt_protocoloRecebimentoAnexo = class(TXMLNode, I341_XMLCt_protocoloRecebimentoAnexo)
  protected
    { I341_XMLCt_protocoloRecebimentoAnexo }
    function Get_NumeroProtocolo: WideString;
    function Get_IdentificacaoOperadora: I341_XMLCt_fontePagadora;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_DetalheProtocolo: I341_XMLCt_protocoloDetalheAnexo;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_protocoloRecebimentoRecurso }

  T341_XMLCt_protocoloRecebimentoRecurso = class(TXMLNode, I341_XMLCt_protocoloRecebimentoRecurso)
  protected
    { I341_XMLCt_protocoloRecebimentoRecurso }
    function Get_NumeroProtocolo: WideString;
    function Get_IdentificacaoOperadora: I341_XMLCt_fontePagadora;
    function Get_DadosPrestador: I341_XMLCt_contratadoDados;
    function Get_NumeroLote: WideString;
    function Get_DataEnvioLote: WideString;
    function Get_DetalheProtocolo: I341_XMLCt_protocoloRecurso;
    procedure Set_NumeroProtocolo(Value: WideString);
    procedure Set_NumeroLote(Value: WideString);
    procedure Set_DataEnvioLote(Value: WideString);
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_respostaElegibilidade }

  T341_XMLCt_respostaElegibilidade = class(TXMLNode, I341_XMLCt_respostaElegibilidade)
  protected
    { I341_XMLCt_respostaElegibilidade }
    function Get_MensagemErro: I341_XMLCt_motivoGlosa;
    function Get_ReciboElegibilidade: I341_XMLCt_elegibilidadeRecibo;
  public
    procedure AfterConstruction; override;
  end;

{ T341_XMLCt_valorCreditoDesconto }

  T341_XMLCt_valorCreditoDesconto = class(TXMLNode, I341_XMLCt_valorCreditoDesconto)
  protected
    { I341_XMLCt_valorCreditoDesconto }
    function Get_TipoLancamento: WideString;
    function Get_Descricao: WideString;
    function Get_Valor: WideString;
    procedure Set_TipoLancamento(Value: WideString);
    procedure Set_Descricao(Value: WideString);
    procedure Set_Valor(Value: WideString);
  end;

{ T341_XMLString_List341 }

  T341_XMLString_List341 = class(TXMLNodeCollection, I341_XMLString_List341)
  protected
    { I341_XMLString_List341 }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
  end;

{ T341_XMLBase64BinaryList341 }

  T341_XMLBase64BinaryList341 = class(TXMLNodeCollection, I341_XMLBase64BinaryList341)
  protected
    { I341_XMLBase64BinaryList341 }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
  end;

{ T341_XMLSt_texto4List341 }

  T341_XMLSt_texto4List341 = class(TXMLNodeCollection, I341_XMLSt_texto4List341)
  protected
    { I341_XMLSt_texto4List341 }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
  end;

{ T341_XMLDm_tipoGlosaList341 }

  T341_XMLDm_tipoGlosaList341 = class(TXMLNodeCollection, I341_XMLDm_tipoGlosaList341)
  protected
    { I341_XMLDm_tipoGlosaList341 }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
  end;

{ T341_XMLDm_diagnosticoCID10List341 }

  T341_XMLDm_diagnosticoCID10List341 = class(TXMLNodeCollection, I341_XMLDm_diagnosticoCID10List341)
  protected
    { I341_XMLDm_diagnosticoCID10List341 }
    function Add(const Value: WideString): IXMLNode;
    function Insert(const Index: Integer; const Value: WideString): IXMLNode;

    function Get_Item(Index: Integer): WideString;
  end;

{ Global Functions }

function GetmensagemTISS341(Doc: IXMLDocument): I341_XMLMensagemTISS;
function LoadmensagemTISS341(const FileName: string): I341_XMLMensagemTISS;
function NewmensagemTISS341: I341_XMLMensagemTISS;

const
  TargetNamespace = 'http://www.ans.gov.br/padroes/tiss/schemas';

implementation

uses xmlutil;

{ Global Functions }

function GetmensagemTISS341(Doc: IXMLDocument): I341_XMLMensagemTISS;
begin
  Result := Doc.GetDocBinding('mensagemTISS', T341_XMLMensagemTISS, TargetNamespace) as I341_XMLMensagemTISS;
end;

function LoadmensagemTISS341(const FileName: string): I341_XMLMensagemTISS;
begin
  Result := LoadXMLDocument(FileName).GetDocBinding('mensagemTISS', T341_XMLMensagemTISS, TargetNamespace) as I341_XMLMensagemTISS;
end;

function NewmensagemTISS341: I341_XMLMensagemTISS;
begin
  Result := NewXMLDocument.GetDocBinding('mensagemTISS', T341_XMLMensagemTISS, TargetNamespace) as I341_XMLMensagemTISS;
end;

{ T341_XMLMensagemTISS }

procedure T341_XMLMensagemTISS.AfterConstruction;
begin
  RegisterChildNode('cabecalho', T341_XMLCabecalhoTransacao);
  RegisterChildNode('operadoraParaPrestador', T341_XMLOperadoraPrestador);
  RegisterChildNode('prestadorParaOperadora', T341_XMLPrestadorOperadora);
  RegisterChildNode('epilogo', T341_XMLEpilogo);
  RegisterChildNode('Signature', T341_XMLIXMLSignatureType_ds);
  inherited;
end;

function T341_XMLMensagemTISS.Get_Cabecalho: I341_XMLCabecalhoTransacao;
begin
  Result := ChildNodes['cabecalho'] as I341_XMLCabecalhoTransacao;
end;

function T341_XMLMensagemTISS.Get_OperadoraParaPrestador: I341_XMLOperadoraPrestador;
begin
  Result := ChildNodes['operadoraParaPrestador'] as I341_XMLOperadoraPrestador;
end;

function T341_XMLMensagemTISS.Get_PrestadorParaOperadora: I341_XMLPrestadorOperadora;
begin
  Result := ChildNodes['prestadorParaOperadora'] as I341_XMLPrestadorOperadora;
end;

function T341_XMLMensagemTISS.Get_Epilogo: I341_XMLEpilogo;
begin
  Result := ChildNodes['epilogo'] as I341_XMLEpilogo;
end;

function T341_XMLMensagemTISS.Get_Signature: IXMLSignatureType_ds;
begin
  Result := ChildNodes['Signature'] as IXMLSignatureType_ds;
end;

{ T341_XMLCabecalhoTransacao }

procedure T341_XMLCabecalhoTransacao.AfterConstruction;
begin
  RegisterChildNode('identificacaoTransacao', T341_XMLCabecalhoTransacao_identificacaoTransacao);
  RegisterChildNode('origem', T341_XMLCabecalhoTransacao_origem);
  RegisterChildNode('destino', T341_XMLCabecalhoTransacao_destino);
  RegisterChildNode('loginSenhaPrestador', T341_XMLCt_loginSenha);
  inherited;
end;

function T341_XMLCabecalhoTransacao.Get_IdentificacaoTransacao: I341_XMLCabecalhoTransacao_identificacaoTransacao;
begin
  Result := ChildNodes['identificacaoTransacao'] as I341_XMLCabecalhoTransacao_identificacaoTransacao;
end;

function T341_XMLCabecalhoTransacao.Get_FalhaNegocio: WideString;
begin
  Result := ChildNodes['falhaNegocio'].Text;
end;

procedure T341_XMLCabecalhoTransacao.Set_FalhaNegocio(Value: WideString);
begin
  ChildNodes['falhaNegocio'].NodeValue := Value;
end;

function T341_XMLCabecalhoTransacao.Get_Origem: I341_XMLCabecalhoTransacao_origem;
begin
  Result := ChildNodes['origem'] as I341_XMLCabecalhoTransacao_origem;
end;

function T341_XMLCabecalhoTransacao.Get_Destino: I341_XMLCabecalhoTransacao_destino;
begin
  Result := ChildNodes['destino'] as I341_XMLCabecalhoTransacao_destino;
end;

function T341_XMLCabecalhoTransacao.Get_Padrao: WideString;
begin
  Result := ChildNodes['Padrao'].Text;
end;

procedure T341_XMLCabecalhoTransacao.Set_Padrao(Value: WideString);
begin
  ChildNodes['Padrao'].NodeValue := Value;
end;

function T341_XMLCabecalhoTransacao.Get_LoginSenhaPrestador: I341_XMLCt_loginSenha;
begin
  Result := ChildNodes['loginSenhaPrestador'] as I341_XMLCt_loginSenha;
end;

{ T341_XMLCabecalhoTransacao_identificacaoTransacao }

function T341_XMLCabecalhoTransacao_identificacaoTransacao.Get_TipoTransacao: WideString;
begin
  Result := ChildNodes['tipoTransacao'].Text;
end;

procedure T341_XMLCabecalhoTransacao_identificacaoTransacao.Set_TipoTransacao(Value: WideString);
begin
  ChildNodes['tipoTransacao'].NodeValue := Value;
end;

function T341_XMLCabecalhoTransacao_identificacaoTransacao.Get_SequencialTransacao: WideString;
begin
  Result := ChildNodes['sequencialTransacao'].Text;
end;

procedure T341_XMLCabecalhoTransacao_identificacaoTransacao.Set_SequencialTransacao(Value: WideString);
begin
  ChildNodes['sequencialTransacao'].NodeValue := Value;
end;

function T341_XMLCabecalhoTransacao_identificacaoTransacao.Get_DataRegistroTransacao: WideString;
begin
  Result := ChildNodes['dataRegistroTransacao'].Text;
end;

procedure T341_XMLCabecalhoTransacao_identificacaoTransacao.Set_DataRegistroTransacao(Value: WideString);
begin
  ChildNodes['dataRegistroTransacao'].NodeValue := Value;
end;

function T341_XMLCabecalhoTransacao_identificacaoTransacao.Get_HoraRegistroTransacao: WideString;
begin
  Result := ChildNodes['horaRegistroTransacao'].Text;
end;

procedure T341_XMLCabecalhoTransacao_identificacaoTransacao.Set_HoraRegistroTransacao(Value: WideString);
begin
  ChildNodes['horaRegistroTransacao'].NodeValue := Value;
end;

{ T341_XMLCabecalhoTransacao_origem }

procedure T341_XMLCabecalhoTransacao_origem.AfterConstruction;
begin
  RegisterChildNode('identificacaoPrestador', T341_XMLCabecalhoTransacao_origem_identificacaoPrestador);
  inherited;
end;

function T341_XMLCabecalhoTransacao_origem.Get_IdentificacaoPrestador: I341_XMLCabecalhoTransacao_origem_identificacaoPrestador;
begin
  Result := ChildNodes['identificacaoPrestador'] as I341_XMLCabecalhoTransacao_origem_identificacaoPrestador;
end;

function T341_XMLCabecalhoTransacao_origem.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCabecalhoTransacao_origem.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

{ T341_XMLCt_prestadorIdentificacao }

function T341_XMLCt_prestadorIdentificacao.Get_CNPJ: WideString;
begin
  Result := ChildNodes['CNPJ'].Text;
end;

procedure T341_XMLCt_prestadorIdentificacao.Set_CNPJ(Value: WideString);
begin
  ChildNodes['CNPJ'].NodeValue := Value;
end;

function T341_XMLCt_prestadorIdentificacao.Get_CPF: WideString;
begin
  Result := ChildNodes['CPF'].Text;
end;

procedure T341_XMLCt_prestadorIdentificacao.Set_CPF(Value: WideString);
begin
  ChildNodes['CPF'].NodeValue := Value;
end;

function T341_XMLCt_prestadorIdentificacao.Get_CodigoPrestadorNaOperadora: WideString;
begin
  Result := ChildNodes['codigoPrestadorNaOperadora'].Text;
end;

procedure T341_XMLCt_prestadorIdentificacao.Set_CodigoPrestadorNaOperadora(Value: WideString);
begin
  ChildNodes['codigoPrestadorNaOperadora'].NodeValue := Value;
end;

{ T341_XMLCabecalhoTransacao_origem_identificacaoPrestador }

{ T341_XMLCabecalhoTransacao_destino }

procedure T341_XMLCabecalhoTransacao_destino.AfterConstruction;
begin
  RegisterChildNode('identificacaoPrestador', T341_XMLCt_prestadorIdentificacao);
  inherited;
end;

function T341_XMLCabecalhoTransacao_destino.Get_IdentificacaoPrestador: I341_XMLCt_prestadorIdentificacao;
begin
  Result := ChildNodes['identificacaoPrestador'] as I341_XMLCt_prestadorIdentificacao;
end;

function T341_XMLCabecalhoTransacao_destino.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCabecalhoTransacao_destino.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

{ T341_XMLCt_loginSenha }

function T341_XMLCt_loginSenha.Get_LoginPrestador: WideString;
begin
  Result := ChildNodes['loginPrestador'].Text;
end;

procedure T341_XMLCt_loginSenha.Set_LoginPrestador(Value: WideString);
begin
  ChildNodes['loginPrestador'].NodeValue := Value;
end;

function T341_XMLCt_loginSenha.Get_SenhaPrestador: WideString;
begin
  Result := ChildNodes['senhaPrestador'].Text;
end;

procedure T341_XMLCt_loginSenha.Set_SenhaPrestador(Value: WideString);
begin
  ChildNodes['senhaPrestador'].NodeValue := Value;
end;

{ T341_XMLOperadoraPrestador }

procedure T341_XMLOperadoraPrestador.AfterConstruction;
begin
  RegisterChildNode('recebimentoLote', T341_XMLCt_recebimentoLote);
  RegisterChildNode('recebimentoAnexo', T341_XMLOperadoraPrestador_recebimentoAnexo);
  RegisterChildNode('recebimentoRecursoGlosa', T341_XMLCt_recebimentoRecurso);
  RegisterChildNode('demonstrativosRetorno', T341_XMLCt_demonstrativoRetorno);
  RegisterChildNode('situacaoProtocolo', T341_XMLCt_situacaoProtocolo);
  RegisterChildNode('autorizacaoServicos', T341_XMLCt_situacaoAutorizacao);
  RegisterChildNode('situacaoAutorizacao', T341_XMLCt_situacaoAutorizacao);
  RegisterChildNode('respostaElegibilidade', T341_XMLOperadoraPrestador_respostaElegibilidade);
  RegisterChildNode('reciboCancelaGuia', T341_XMLCt_reciboCancelaGuia);
  RegisterChildNode('reciboComunicacao', T341_XMLCt_reciboComunicacao);
  RegisterChildNode('respostaRecursoGlosa', T341_XMLCt_respostaGlosa);
  inherited;
end;

function T341_XMLOperadoraPrestador.Get_RecebimentoLote: I341_XMLCt_recebimentoLote;
begin
  Result := ChildNodes['recebimentoLote'] as I341_XMLCt_recebimentoLote;
end;

function T341_XMLOperadoraPrestador.Get_RecebimentoAnexo: I341_XMLOperadoraPrestador_recebimentoAnexo;
begin
  Result := ChildNodes['recebimentoAnexo'] as I341_XMLOperadoraPrestador_recebimentoAnexo;
end;

function T341_XMLOperadoraPrestador.Get_RecebimentoRecursoGlosa: I341_XMLCt_recebimentoRecurso;
begin
  Result := ChildNodes['recebimentoRecursoGlosa'] as I341_XMLCt_recebimentoRecurso;
end;

function T341_XMLOperadoraPrestador.Get_DemonstrativosRetorno: I341_XMLCt_demonstrativoRetorno;
begin
  Result := ChildNodes['demonstrativosRetorno'] as I341_XMLCt_demonstrativoRetorno;
end;

function T341_XMLOperadoraPrestador.Get_SituacaoProtocolo: I341_XMLCt_situacaoProtocolo;
begin
  Result := ChildNodes['situacaoProtocolo'] as I341_XMLCt_situacaoProtocolo;
end;

function T341_XMLOperadoraPrestador.Get_AutorizacaoServicos: I341_XMLCt_situacaoAutorizacao;
begin
  Result := ChildNodes['autorizacaoServicos'] as I341_XMLCt_situacaoAutorizacao;
end;

function T341_XMLOperadoraPrestador.Get_SituacaoAutorizacao: I341_XMLCt_situacaoAutorizacao;
begin
  Result := ChildNodes['situacaoAutorizacao'] as I341_XMLCt_situacaoAutorizacao;
end;

function T341_XMLOperadoraPrestador.Get_RespostaElegibilidade: I341_XMLOperadoraPrestador_respostaElegibilidade;
begin
  Result := ChildNodes['respostaElegibilidade'] as I341_XMLOperadoraPrestador_respostaElegibilidade;
end;

function T341_XMLOperadoraPrestador.Get_ReciboCancelaGuia: I341_XMLCt_reciboCancelaGuia;
begin
  Result := ChildNodes['reciboCancelaGuia'] as I341_XMLCt_reciboCancelaGuia;
end;

function T341_XMLOperadoraPrestador.Get_ReciboComunicacao: I341_XMLCt_reciboComunicacao;
begin
  Result := ChildNodes['reciboComunicacao'] as I341_XMLCt_reciboComunicacao;
end;

function T341_XMLOperadoraPrestador.Get_RespostaRecursoGlosa: I341_XMLCt_respostaGlosa;
begin
  Result := ChildNodes['respostaRecursoGlosa'] as I341_XMLCt_respostaGlosa;
end;

{ T341_XMLCt_recebimentoLote }

procedure T341_XMLCt_recebimentoLote.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('protocoloRecebimento', T341_XMLCt_protocoloRecebimento);
  inherited;
end;

function T341_XMLCt_recebimentoLote.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_recebimentoLote.Get_ProtocoloRecebimento: I341_XMLCt_protocoloRecebimento;
begin
  Result := ChildNodes['protocoloRecebimento'] as I341_XMLCt_protocoloRecebimento;
end;

{ T341_XMLCt_motivoGlosa }

function T341_XMLCt_motivoGlosa.Get_CodigoGlosa: WideString;
begin
  Result := ChildNodes['codigoGlosa'].Text;
end;

procedure T341_XMLCt_motivoGlosa.Set_CodigoGlosa(Value: WideString);
begin
  ChildNodes['codigoGlosa'].NodeValue := Value;
end;

function T341_XMLCt_motivoGlosa.Get_DescricaoGlosa: WideString;
begin
  Result := ChildNodes['descricaoGlosa'].Text;
end;

procedure T341_XMLCt_motivoGlosa.Set_DescricaoGlosa(Value: WideString);
begin
  ChildNodes['descricaoGlosa'].NodeValue := Value;
end;

{ T341_XMLCt_motivoGlosaList341 }

function T341_XMLCt_motivoGlosaList341.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_motivoGlosaList341.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_motivoGlosaList341.Get_Item(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCt_protocoloRecebimento }

procedure T341_XMLCt_protocoloRecebimento.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('detalheProtocolo', T341_XMLCt_protocoloDetalhe);
  inherited;
end;

function T341_XMLCt_protocoloRecebimento.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_protocoloRecebimento.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecebimento.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_protocoloRecebimento.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_protocoloRecebimento.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecebimento.Get_DataEnvioLote: WideString;
begin
  Result := ChildNodes['dataEnvioLote'].Text;
end;

procedure T341_XMLCt_protocoloRecebimento.Set_DataEnvioLote(Value: WideString);
begin
  ChildNodes['dataEnvioLote'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecebimento.Get_DetalheProtocolo: I341_XMLCt_protocoloDetalhe;
begin
  Result := ChildNodes['detalheProtocolo'] as I341_XMLCt_protocoloDetalhe;
end;

{ T341_XMLCt_contratadoDados }

function T341_XMLCt_contratadoDados.Get_CodigoPrestadorNaOperadora: WideString;
begin
  Result := ChildNodes['codigoPrestadorNaOperadora'].Text;
end;

procedure T341_XMLCt_contratadoDados.Set_CodigoPrestadorNaOperadora(Value: WideString);
begin
  ChildNodes['codigoPrestadorNaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_contratadoDados.Get_CpfContratado: WideString;
begin
  Result := ChildNodes['cpfContratado'].Text;
end;

procedure T341_XMLCt_contratadoDados.Set_CpfContratado(Value: WideString);
begin
  ChildNodes['cpfContratado'].NodeValue := Value;
end;

function T341_XMLCt_contratadoDados.Get_CnpjContratado: WideString;
begin
  Result := ChildNodes['cnpjContratado'].Text;
end;

procedure T341_XMLCt_contratadoDados.Set_CnpjContratado(Value: WideString);
begin
  ChildNodes['cnpjContratado'].NodeValue := Value;
end;

function T341_XMLCt_contratadoDados.Get_NomeContratado: WideString;
begin
  Result := ChildNodes['nomeContratado'].Text;
end;

procedure T341_XMLCt_contratadoDados.Set_NomeContratado(Value: WideString);
begin
  ChildNodes['nomeContratado'].NodeValue := Value;
end;

{ T341_XMLCt_protocoloDetalhe }

procedure T341_XMLCt_protocoloDetalhe.AfterConstruction;
begin
  RegisterChildNode('glosaProtocolo', T341_XMLCt_protocoloDetalhe_glosaProtocolo);
  RegisterChildNode('dadosGuiasProtocolo', T341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo);
  inherited;
end;

function T341_XMLCt_protocoloDetalhe.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloDetalhe.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_protocoloDetalhe.Get_ValorTotalProtocolo: WideString;
begin
  Result := ChildNodes['valorTotalProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloDetalhe.Set_ValorTotalProtocolo(Value: WideString);
begin
  ChildNodes['valorTotalProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_protocoloDetalhe.Get_GlosaProtocolo: I341_XMLCt_protocoloDetalhe_glosaProtocolo;
begin
  Result := ChildNodes['glosaProtocolo'] as I341_XMLCt_protocoloDetalhe_glosaProtocolo;
end;

function T341_XMLCt_protocoloDetalhe.Get_DadosGuiasProtocolo: I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo;
begin
  Result := ChildNodes['dadosGuiasProtocolo'] as I341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo;
end;

{ T341_XMLCt_protocoloDetalhe_glosaProtocolo }

procedure T341_XMLCt_protocoloDetalhe_glosaProtocolo.AfterConstruction;
begin
  RegisterChildNode('motivosGlosa', T341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa);
  inherited;
end;

function T341_XMLCt_protocoloDetalhe_glosaProtocolo.Get_MotivosGlosa: I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa;
begin
  Result := ChildNodes['motivosGlosa'] as I341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa;
end;

function T341_XMLCt_protocoloDetalhe_glosaProtocolo.Get_VlGlosaProtocolo: WideString;
begin
  Result := ChildNodes['vlGlosaProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloDetalhe_glosaProtocolo.Set_VlGlosaProtocolo(Value: WideString);
begin
  ChildNodes['vlGlosaProtocolo'].NodeValue := Value;
end;

{ T341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa }

procedure T341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa.AfterConstruction;
begin
  RegisterChildNode('motivoGlosa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoGlosa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa.Get_MotivoGlosa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_protocoloDetalhe_glosaProtocolo_motivosGlosa.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo }

procedure T341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo.AfterConstruction;
begin
  RegisterChildNode('dadosGuias', T341_XMLCt_guiaDados);
  RegisterChildNode('dadosGuiasOdonto', T341_XMLCt_guiaDadosOdonto);
  FDadosGuias := CreateCollection(T341_XMLCt_guiaDadosList341, I341_XMLCt_guiaDados, 'dadosGuias') as I341_XMLCt_guiaDadosList341;
  FDadosGuiasOdonto := CreateCollection(T341_XMLCt_guiaDadosOdontoList341, I341_XMLCt_guiaDadosOdonto, 'dadosGuiasOdonto') as I341_XMLCt_guiaDadosOdontoList341;
  inherited;
end;

function T341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo.Get_DadosGuias: I341_XMLCt_guiaDadosList341;
begin
  Result := FDadosGuias;
end;

function T341_XMLCt_protocoloDetalhe_dadosGuiasProtocolo.Get_DadosGuiasOdonto: I341_XMLCt_guiaDadosOdontoList341;
begin
  Result := FDadosGuiasOdonto;
end;

{ T341_XMLCt_guiaDados }

procedure T341_XMLCt_guiaDados.AfterConstruction;
begin
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('vlInformadoGuia', T341_XMLCt_valorTotal);
  RegisterChildNode('glosaGuia', T341_XMLCt_guiaDados_glosaGuia);
  RegisterChildNode('procedimentosRealizados', T341_XMLCt_guiaDados_procedimentosRealizados);
  inherited;
end;

function T341_XMLCt_guiaDados.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_guiaDados.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_guiaDados.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_guiaDados.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_guiaDados.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCt_guiaDados.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCt_guiaDados.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCt_guiaDados.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

function T341_XMLCt_guiaDados.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCt_guiaDados.Get_DataRealizacao: WideString;
begin
  Result := ChildNodes['dataRealizacao'].Text;
end;

procedure T341_XMLCt_guiaDados.Set_DataRealizacao(Value: WideString);
begin
  ChildNodes['dataRealizacao'].NodeValue := Value;
end;

function T341_XMLCt_guiaDados.Get_VlInformadoGuia: I341_XMLCt_valorTotal;
begin
  Result := ChildNodes['vlInformadoGuia'] as I341_XMLCt_valorTotal;
end;

function T341_XMLCt_guiaDados.Get_GlosaGuia: I341_XMLCt_guiaDados_glosaGuia;
begin
  Result := ChildNodes['glosaGuia'] as I341_XMLCt_guiaDados_glosaGuia;
end;

function T341_XMLCt_guiaDados.Get_ProcedimentosRealizados: I341_XMLCt_guiaDados_procedimentosRealizados;
begin
  Result := ChildNodes['procedimentosRealizados'] as I341_XMLCt_guiaDados_procedimentosRealizados;
end;

{ T341_XMLCt_guiaDadosList341 }

function T341_XMLCt_guiaDadosList341.Add: I341_XMLCt_guiaDados;
begin
  Result := AddItem(-1) as I341_XMLCt_guiaDados;
end;

function T341_XMLCt_guiaDadosList341.Insert(const Index: Integer): I341_XMLCt_guiaDados;
begin
  Result := AddItem(Index) as I341_XMLCt_guiaDados;
end;

function T341_XMLCt_guiaDadosList341.Get_Item(Index: Integer): I341_XMLCt_guiaDados;
begin
  Result := List[Index] as I341_XMLCt_guiaDados;
end;

{ T341_XMLCt_beneficiarioDados }

function T341_XMLCt_beneficiarioDados.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCt_beneficiarioDados.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCt_beneficiarioDados.Get_AtendimentoRN: WideString;
begin
  Result := ChildNodes['atendimentoRN'].Text;
end;

procedure T341_XMLCt_beneficiarioDados.Set_AtendimentoRN(Value: WideString);
begin
  ChildNodes['atendimentoRN'].NodeValue := Value;
end;

function T341_XMLCt_beneficiarioDados.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCt_beneficiarioDados.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_beneficiarioDados.Get_NumeroCNS: WideString;
begin
  Result := ChildNodes['numeroCNS'].Text;
end;

procedure T341_XMLCt_beneficiarioDados.Set_NumeroCNS(Value: WideString);
begin
  ChildNodes['numeroCNS'].NodeValue := Value;
end;

function T341_XMLCt_beneficiarioDados.Get_TipoIdent: WideString;
begin
  Result := ChildNodes['tipoIdent'].Text;
end;

procedure T341_XMLCt_beneficiarioDados.Set_TipoIdent(Value: WideString);
begin
  ChildNodes['tipoIdent'].NodeValue := Value;
end;

function T341_XMLCt_beneficiarioDados.Get_IdentificadorBeneficiario: WideString;
begin
  Result := ChildNodes['identificadorBeneficiario'].Text;
end;

procedure T341_XMLCt_beneficiarioDados.Set_IdentificadorBeneficiario(Value: WideString);
begin
  ChildNodes['identificadorBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_beneficiarioDados.Get_TemplateBiometrico: WideString;
begin
  Result := ChildNodes['templateBiometrico'].Text;
end;

procedure T341_XMLCt_beneficiarioDados.Set_TemplateBiometrico(Value: WideString);
begin
  ChildNodes['templateBiometrico'].NodeValue := Value;
end;

{ T341_XMLCt_valorTotal }

function T341_XMLCt_valorTotal.Get_ValorProcessado: WideString;
begin
  Result := ChildNodes['valorProcessado'].Text;
end;

procedure T341_XMLCt_valorTotal.Set_ValorProcessado(Value: WideString);
begin
  ChildNodes['valorProcessado'].NodeValue := Value;
end;

function T341_XMLCt_valorTotal.Get_ValorGlosa: WideString;
begin
  Result := ChildNodes['valorGlosa'].Text;
end;

procedure T341_XMLCt_valorTotal.Set_ValorGlosa(Value: WideString);
begin
  ChildNodes['valorGlosa'].NodeValue := Value;
end;

function T341_XMLCt_valorTotal.Get_ValorLiberado: WideString;
begin
  Result := ChildNodes['valorLiberado'].Text;
end;

procedure T341_XMLCt_valorTotal.Set_ValorLiberado(Value: WideString);
begin
  ChildNodes['valorLiberado'].NodeValue := Value;
end;

{ T341_XMLCt_guiaDados_glosaGuia }

procedure T341_XMLCt_guiaDados_glosaGuia.AfterConstruction;
begin
  RegisterChildNode('motivoGlosa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoGlosa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCt_guiaDados_glosaGuia.Get_MotivoGlosa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_guiaDados_glosaGuia.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_guiaDados_glosaGuia.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCt_guiaDados_procedimentosRealizados }

procedure T341_XMLCt_guiaDados_procedimentosRealizados.AfterConstruction;
begin
  RegisterChildNode('procedimentoRealizado', T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado);
  ItemTag := 'procedimentoRealizado';
  ItemInterface := I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
  inherited;
end;

function T341_XMLCt_guiaDados_procedimentosRealizados.Get_ProcedimentoRealizado(Index: Integer): I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
begin
  Result := List[Index] as I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
end;

function T341_XMLCt_guiaDados_procedimentosRealizados.Add: I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
begin
  Result := AddItem(-1) as I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
end;

function T341_XMLCt_guiaDados_procedimentosRealizados.Insert(const Index: Integer): I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
begin
  Result := AddItem(Index) as I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado;
end;

{ T341_XMLCt_procedimentoExecutado }

procedure T341_XMLCt_procedimentoExecutado.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCt_procedimentoExecutado.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_DataExecucao: WideString;
begin
  Result := ChildNodes['dataExecucao'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_DataExecucao(Value: WideString);
begin
  ChildNodes['dataExecucao'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_HoraInicial: WideString;
begin
  Result := ChildNodes['horaInicial'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_HoraInicial(Value: WideString);
begin
  ChildNodes['horaInicial'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_HoraFinal: WideString;
begin
  Result := ChildNodes['horaFinal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_HoraFinal(Value: WideString);
begin
  ChildNodes['horaFinal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_procedimentoExecutado.Get_UnidadeMedida: WideString;
begin
  Result := ChildNodes['unidadeMedida'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_UnidadeMedida(Value: WideString);
begin
  ChildNodes['unidadeMedida'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_QuantidadeExecutada: WideString;
begin
  Result := ChildNodes['quantidadeExecutada'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_QuantidadeExecutada(Value: WideString);
begin
  ChildNodes['quantidadeExecutada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_ViaAcesso: WideString;
begin
  Result := ChildNodes['viaAcesso'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_ViaAcesso(Value: WideString);
begin
  ChildNodes['viaAcesso'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_TecnicaUtilizada: WideString;
begin
  Result := ChildNodes['tecnicaUtilizada'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_TecnicaUtilizada(Value: WideString);
begin
  ChildNodes['tecnicaUtilizada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_ValorUnitario: WideString;
begin
  Result := ChildNodes['valorUnitario'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_ValorUnitario(Value: WideString);
begin
  ChildNodes['valorUnitario'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_ValorTotal: WideString;
begin
  Result := ChildNodes['valorTotal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_ValorTotal(Value: WideString);
begin
  ChildNodes['valorTotal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_CodigoDespesa: WideString;
begin
  Result := ChildNodes['codigoDespesa'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_CodigoDespesa(Value: WideString);
begin
  ChildNodes['codigoDespesa'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutado.Get_FatorReducaoAcrescimo: WideString;
begin
  Result := ChildNodes['fatorReducaoAcrescimo'].Text;
end;

procedure T341_XMLCt_procedimentoExecutado.Set_FatorReducaoAcrescimo(Value: WideString);
begin
  ChildNodes['fatorReducaoAcrescimo'].NodeValue := Value;
end;

{ T341_XMLCt_procedimentoDados }

function T341_XMLCt_procedimentoDados.Get_CodigoTabela: WideString;
begin
  Result := ChildNodes['codigoTabela'].Text;
end;

procedure T341_XMLCt_procedimentoDados.Set_CodigoTabela(Value: WideString);
begin
  ChildNodes['codigoTabela'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoDados.Get_CodigoProcedimento: WideString;
begin
  Result := ChildNodes['codigoProcedimento'].Text;
end;

procedure T341_XMLCt_procedimentoDados.Set_CodigoProcedimento(Value: WideString);
begin
  ChildNodes['codigoProcedimento'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoDados.Get_DescricaoProcedimento: WideString;
begin
  Result := ChildNodes['descricaoProcedimento'].Text;
end;

procedure T341_XMLCt_procedimentoDados.Set_DescricaoProcedimento(Value: WideString);
begin
  ChildNodes['descricaoProcedimento'].NodeValue := Value;
end;

{ T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado }

procedure T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado.AfterConstruction;
begin
  RegisterChildNode('glosasProcedimento', T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento);
  inherited;
end;

function T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado.Get_GlosasProcedimento: I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento;
begin
  Result := ChildNodes['glosasProcedimento'] as I341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento;
end;

{ T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento }

procedure T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento.AfterConstruction;
begin
  RegisterChildNode('motivoGlosa', T341_XMLCt_motivoGlosa);
  FMotivoGlosa := CreateCollection(T341_XMLCt_motivoGlosaList341, I341_XMLCt_motivoGlosa, 'motivoGlosa') as I341_XMLCt_motivoGlosaList341;
  inherited;
end;

function T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento.Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
begin
  Result := FMotivoGlosa;
end;

function T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento.Get_ValorGlosaProcedimento: WideString;
begin
  Result := ChildNodes['valorGlosaProcedimento'].Text;
end;

procedure T341_XMLCt_guiaDados_procedimentosRealizados_procedimentoRealizado_glosasProcedimento.Set_ValorGlosaProcedimento(Value: WideString);
begin
  ChildNodes['valorGlosaProcedimento'].NodeValue := Value;
end;

{ T341_XMLCt_guiaDadosOdonto }

procedure T341_XMLCt_guiaDadosOdonto.AfterConstruction;
begin
  RegisterChildNode('vlInformadoGuia', T341_XMLCt_valorTotal);
  RegisterChildNode('glosaGuia', T341_XMLCt_guiaDadosOdonto_glosaGuia);
  RegisterChildNode('procedimentosRealizados', T341_XMLCt_guiaDadosOdonto_procedimentosRealizados);
  inherited;
end;

function T341_XMLCt_guiaDadosOdonto.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_AtendimentoRN: WideString;
begin
  Result := ChildNodes['atendimentoRN'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_AtendimentoRN(Value: WideString);
begin
  ChildNodes['atendimentoRN'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_NumeroCNS: WideString;
begin
  Result := ChildNodes['numeroCNS'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_NumeroCNS(Value: WideString);
begin
  ChildNodes['numeroCNS'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_TipoIdent: WideString;
begin
  Result := ChildNodes['tipoIdent'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_TipoIdent(Value: WideString);
begin
  ChildNodes['tipoIdent'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_IdentificadorBeneficiario: WideString;
begin
  Result := ChildNodes['identificadorBeneficiario'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_IdentificadorBeneficiario(Value: WideString);
begin
  ChildNodes['identificadorBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_TemplateBiometrico: WideString;
begin
  Result := ChildNodes['templateBiometrico'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto.Set_TemplateBiometrico(Value: WideString);
begin
  ChildNodes['templateBiometrico'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosOdonto.Get_VlInformadoGuia: I341_XMLCt_valorTotal;
begin
  Result := ChildNodes['vlInformadoGuia'] as I341_XMLCt_valorTotal;
end;

function T341_XMLCt_guiaDadosOdonto.Get_GlosaGuia: I341_XMLCt_guiaDadosOdonto_glosaGuia;
begin
  Result := ChildNodes['glosaGuia'] as I341_XMLCt_guiaDadosOdonto_glosaGuia;
end;

function T341_XMLCt_guiaDadosOdonto.Get_ProcedimentosRealizados: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados;
begin
  Result := ChildNodes['procedimentosRealizados'] as I341_XMLCt_guiaDadosOdonto_procedimentosRealizados;
end;

{ T341_XMLCt_guiaDadosOdontoList341 }

function T341_XMLCt_guiaDadosOdontoList341.Add: I341_XMLCt_guiaDadosOdonto;
begin
  Result := AddItem(-1) as I341_XMLCt_guiaDadosOdonto;
end;

function T341_XMLCt_guiaDadosOdontoList341.Insert(const Index: Integer): I341_XMLCt_guiaDadosOdonto;
begin
  Result := AddItem(Index) as I341_XMLCt_guiaDadosOdonto;
end;

function T341_XMLCt_guiaDadosOdontoList341.Get_Item(Index: Integer): I341_XMLCt_guiaDadosOdonto;
begin
  Result := List[Index] as I341_XMLCt_guiaDadosOdonto;
end;

{ T341_XMLCt_guiaDadosOdonto_glosaGuia }

procedure T341_XMLCt_guiaDadosOdonto_glosaGuia.AfterConstruction;
begin
  RegisterChildNode('motivoGlosa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoGlosa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCt_guiaDadosOdonto_glosaGuia.Get_MotivoGlosa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_guiaDadosOdonto_glosaGuia.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_guiaDadosOdonto_glosaGuia.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCt_guiaDadosOdonto_procedimentosRealizados }

procedure T341_XMLCt_guiaDadosOdonto_procedimentosRealizados.AfterConstruction;
begin
  RegisterChildNode('procedimentoRealizado', T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado);
  ItemTag := 'procedimentoRealizado';
  ItemInterface := I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
  inherited;
end;

function T341_XMLCt_guiaDadosOdonto_procedimentosRealizados.Get_ProcedimentoRealizado(Index: Integer): I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
begin
  Result := List[Index] as I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
end;

function T341_XMLCt_guiaDadosOdonto_procedimentosRealizados.Add: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
begin
  Result := AddItem(-1) as I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
end;

function T341_XMLCt_guiaDadosOdonto_procedimentosRealizados.Insert(const Index: Integer): I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
begin
  Result := AddItem(Index) as I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado;
end;

{ T341_XMLCt_procedimentoExecutadoOdonto }

procedure T341_XMLCt_procedimentoExecutadoOdonto.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  RegisterChildNode('denteRegiao', T341_XMLCt_procedimentoExecutadoOdonto_denteRegiao);
  inherited;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_DenteRegiao: I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao;
begin
  Result := ChildNodes['denteRegiao'] as I341_XMLCt_procedimentoExecutadoOdonto_denteRegiao;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_DenteFace: WideString;
begin
  Result := ChildNodes['denteFace'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto.Set_DenteFace(Value: WideString);
begin
  ChildNodes['denteFace'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_QtdProc: Integer;
begin
  Result := ChildNodes['qtdProc'].NodeValue;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto.Set_QtdProc(Value: Integer);
begin
  ChildNodes['qtdProc'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_QtdUS: WideString;
begin
  Result := ChildNodes['qtdUS'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto.Set_QtdUS(Value: WideString);
begin
  ChildNodes['qtdUS'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_ValorProc: WideString;
begin
  Result := ChildNodes['valorProc'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto.Set_ValorProc(Value: WideString);
begin
  ChildNodes['valorProc'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_ValorFranquia: WideString;
begin
  Result := ChildNodes['valorFranquia'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto.Set_ValorFranquia(Value: WideString);
begin
  ChildNodes['valorFranquia'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_Autorizado: WideString;
begin
  Result := ChildNodes['autorizado'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto.Set_Autorizado(Value: WideString);
begin
  ChildNodes['autorizado'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOdonto.Get_DataRealizacao: WideString;
begin
  Result := ChildNodes['dataRealizacao'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto.Set_DataRealizacao(Value: WideString);
begin
  ChildNodes['dataRealizacao'].NodeValue := Value;
end;

{ T341_XMLCt_procedimentoExecutadoOdonto_denteRegiao }

function T341_XMLCt_procedimentoExecutadoOdonto_denteRegiao.Get_CodDente: WideString;
begin
  Result := ChildNodes['codDente'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto_denteRegiao.Set_CodDente(Value: WideString);
begin
  ChildNodes['codDente'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOdonto_denteRegiao.Get_CodRegiao: WideString;
begin
  Result := ChildNodes['codRegiao'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOdonto_denteRegiao.Set_CodRegiao(Value: WideString);
begin
  ChildNodes['codRegiao'].NodeValue := Value;
end;

{ T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado }

procedure T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado.AfterConstruction;
begin
  RegisterChildNode('glosasProcedimento', T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento);
  inherited;
end;

function T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado.Get_GlosasProcedimento: I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento;
begin
  Result := ChildNodes['glosasProcedimento'] as I341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento;
end;

{ T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento }

procedure T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento.AfterConstruction;
begin
  RegisterChildNode('motivoGlosa', T341_XMLCt_motivoGlosa);
  FMotivoGlosa := CreateCollection(T341_XMLCt_motivoGlosaList341, I341_XMLCt_motivoGlosa, 'motivoGlosa') as I341_XMLCt_motivoGlosaList341;
  inherited;
end;

function T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento.Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
begin
  Result := FMotivoGlosa;
end;

function T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento.Get_ValorGlosaProcedimento: WideString;
begin
  Result := ChildNodes['valorGlosaProcedimento'].Text;
end;

procedure T341_XMLCt_guiaDadosOdonto_procedimentosRealizados_procedimentoRealizado_glosasProcedimento.Set_ValorGlosaProcedimento(Value: WideString);
begin
  ChildNodes['valorGlosaProcedimento'].NodeValue := Value;
end;

{ T341_XMLOperadoraPrestador_recebimentoAnexo }

procedure T341_XMLOperadoraPrestador_recebimentoAnexo.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('protocoloRecebimentoAnexo', T341_XMLCt_anexoRecebimento);
  inherited;
end;

function T341_XMLOperadoraPrestador_recebimentoAnexo.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLOperadoraPrestador_recebimentoAnexo.Get_ProtocoloRecebimentoAnexo: I341_XMLCt_anexoRecebimento;
begin
  Result := ChildNodes['protocoloRecebimentoAnexo'] as I341_XMLCt_anexoRecebimento;
end;

{ T341_XMLCt_anexoRecebimento }

procedure T341_XMLCt_anexoRecebimento.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('anexosClinicos', T341_XMLCt_anexoRecebimento_anexosClinicos);
  inherited;
end;

function T341_XMLCt_anexoRecebimento.Get_NrProtocoloRecebimento: WideString;
begin
  Result := ChildNodes['nrProtocoloRecebimento'].Text;
end;

procedure T341_XMLCt_anexoRecebimento.Set_NrProtocoloRecebimento(Value: WideString);
begin
  ChildNodes['nrProtocoloRecebimento'].NodeValue := Value;
end;

function T341_XMLCt_anexoRecebimento.Get_DataEnvioAnexo: WideString;
begin
  Result := ChildNodes['dataEnvioAnexo'].Text;
end;

procedure T341_XMLCt_anexoRecebimento.Set_DataEnvioAnexo(Value: WideString);
begin
  ChildNodes['dataEnvioAnexo'].NodeValue := Value;
end;

function T341_XMLCt_anexoRecebimento.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_anexoRecebimento.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_anexoRecebimento.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_anexoRecebimento.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_anexoRecebimento.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_anexoRecebimento.Get_QtAnexosClinicos: Integer;
begin
  Result := ChildNodes['qtAnexosClinicos'].NodeValue;
end;

procedure T341_XMLCt_anexoRecebimento.Set_QtAnexosClinicos(Value: Integer);
begin
  ChildNodes['qtAnexosClinicos'].NodeValue := Value;
end;

function T341_XMLCt_anexoRecebimento.Get_AnexosClinicos: I341_XMLCt_anexoRecebimento_anexosClinicos;
begin
  Result := ChildNodes['anexosClinicos'] as I341_XMLCt_anexoRecebimento_anexosClinicos;
end;

function T341_XMLCt_anexoRecebimento.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCt_anexoRecebimento.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

{ T341_XMLCt_anexoRecebimento_anexosClinicos }

procedure T341_XMLCt_anexoRecebimento_anexosClinicos.AfterConstruction;
begin
  RegisterChildNode('anexoOPME', T341_XMLCtm_autorizacaoOPME);
  RegisterChildNode('anexoQuimio', T341_XMLCtm_autorizacaoQuimio);
  RegisterChildNode('anexoRadio', T341_XMLCtm_autorizacaoRadio);
  RegisterChildNode('anexoSituacaoInicial', T341_XMLCto_anexoSituacaoInicial);
  FAnexoSituacaoInicial := CreateCollection(T341_XMLCto_anexoSituacaoInicialList341, I341_XMLCto_anexoSituacaoInicial, 'anexoSituacaoInicial') as I341_XMLCto_anexoSituacaoInicialList341;
  inherited;
end;

function T341_XMLCt_anexoRecebimento_anexosClinicos.Get_AnexoOPME: I341_XMLCtm_autorizacaoOPME;
begin
  Result := ChildNodes['anexoOPME'] as I341_XMLCtm_autorizacaoOPME;
end;

function T341_XMLCt_anexoRecebimento_anexosClinicos.Get_AnexoQuimio: I341_XMLCtm_autorizacaoQuimio;
begin
  Result := ChildNodes['anexoQuimio'] as I341_XMLCtm_autorizacaoQuimio;
end;

function T341_XMLCt_anexoRecebimento_anexosClinicos.Get_AnexoRadio: I341_XMLCtm_autorizacaoRadio;
begin
  Result := ChildNodes['anexoRadio'] as I341_XMLCtm_autorizacaoRadio;
end;

function T341_XMLCt_anexoRecebimento_anexosClinicos.Get_AnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341;
begin
  Result := FAnexoSituacaoInicial;
end;

{ T341_XMLCtm_autorizacaoOPME }

procedure T341_XMLCtm_autorizacaoOPME.AfterConstruction;
begin
  RegisterChildNode('dadosAutorizacao', T341_XMLCt_autorizacaoDados);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('motivosNegativa', T341_XMLCtm_autorizacaoOPME_motivosNegativa);
  RegisterChildNode('prestadorAutorizado', T341_XMLCt_contratadoDados);
  RegisterChildNode('servicosAutorizadosOPME', T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME);
  FServicosAutorizadosOPME := CreateCollection(T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341, I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME, 'servicosAutorizadosOPME') as I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341;
  inherited;
end;

function T341_XMLCtm_autorizacaoOPME.Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
begin
  Result := ChildNodes['dadosAutorizacao'] as I341_XMLCt_autorizacaoDados;
end;

function T341_XMLCtm_autorizacaoOPME.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_autorizacaoOPME.Get_StatusSolicitacao: WideString;
begin
  Result := ChildNodes['statusSolicitacao'].Text;
end;

procedure T341_XMLCtm_autorizacaoOPME.Set_StatusSolicitacao(Value: WideString);
begin
  ChildNodes['statusSolicitacao'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoOPME.Get_MotivosNegativa: I341_XMLCtm_autorizacaoOPME_motivosNegativa;
begin
  Result := ChildNodes['motivosNegativa'] as I341_XMLCtm_autorizacaoOPME_motivosNegativa;
end;

function T341_XMLCtm_autorizacaoOPME.Get_PrestadorAutorizado: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['prestadorAutorizado'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_autorizacaoOPME.Get_ServicosAutorizadosOPME: I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341;
begin
  Result := FServicosAutorizadosOPME;
end;

{ T341_XMLCt_autorizacaoDados }

function T341_XMLCt_autorizacaoDados.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_autorizacaoDados.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoDados.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_autorizacaoDados.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoDados.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCt_autorizacaoDados.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoDados.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCt_autorizacaoDados.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoDados.Get_DataAutorizacao: WideString;
begin
  Result := ChildNodes['dataAutorizacao'].Text;
end;

procedure T341_XMLCt_autorizacaoDados.Set_DataAutorizacao(Value: WideString);
begin
  ChildNodes['dataAutorizacao'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoDados.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_autorizacaoDados.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoDados.Get_DataValidadeSenha: WideString;
begin
  Result := ChildNodes['dataValidadeSenha'].Text;
end;

procedure T341_XMLCt_autorizacaoDados.Set_DataValidadeSenha(Value: WideString);
begin
  ChildNodes['dataValidadeSenha'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoOPME_motivosNegativa }

procedure T341_XMLCtm_autorizacaoOPME_motivosNegativa.AfterConstruction;
begin
  RegisterChildNode('motivoNegativa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoNegativa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCtm_autorizacaoOPME_motivosNegativa.Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCtm_autorizacaoOPME_motivosNegativa.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCtm_autorizacaoOPME_motivosNegativa.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCt_procedimentoAutorizado }

procedure T341_XMLCt_procedimentoAutorizado.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  RegisterChildNode('motivosNegativa', T341_XMLCt_procedimentoAutorizado_motivosNegativa);
  inherited;
end;

function T341_XMLCt_procedimentoAutorizado.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_procedimentoAutorizado.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoAutorizado.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_procedimentoAutorizado.Get_QuantidadeSolicitada: Integer;
begin
  Result := ChildNodes['quantidadeSolicitada'].NodeValue;
end;

procedure T341_XMLCt_procedimentoAutorizado.Set_QuantidadeSolicitada(Value: Integer);
begin
  ChildNodes['quantidadeSolicitada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoAutorizado.Get_QuantidadeAutorizada: Integer;
begin
  Result := ChildNodes['quantidadeAutorizada'].NodeValue;
end;

procedure T341_XMLCt_procedimentoAutorizado.Set_QuantidadeAutorizada(Value: Integer);
begin
  ChildNodes['quantidadeAutorizada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoAutorizado.Get_ValorSolicitado: WideString;
begin
  Result := ChildNodes['valorSolicitado'].Text;
end;

procedure T341_XMLCt_procedimentoAutorizado.Set_ValorSolicitado(Value: WideString);
begin
  ChildNodes['valorSolicitado'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoAutorizado.Get_ValorAutorizado: WideString;
begin
  Result := ChildNodes['valorAutorizado'].Text;
end;

procedure T341_XMLCt_procedimentoAutorizado.Set_ValorAutorizado(Value: WideString);
begin
  ChildNodes['valorAutorizado'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoAutorizado.Get_OpcaoFabricante: WideString;
begin
  Result := ChildNodes['opcaoFabricante'].Text;
end;

procedure T341_XMLCt_procedimentoAutorizado.Set_OpcaoFabricante(Value: WideString);
begin
  ChildNodes['opcaoFabricante'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoAutorizado.Get_RegistroANVISA: WideString;
begin
  Result := ChildNodes['registroANVISA'].Text;
end;

procedure T341_XMLCt_procedimentoAutorizado.Set_RegistroANVISA(Value: WideString);
begin
  ChildNodes['registroANVISA'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoAutorizado.Get_CodigoRefFabricante: WideString;
begin
  Result := ChildNodes['codigoRefFabricante'].Text;
end;

procedure T341_XMLCt_procedimentoAutorizado.Set_CodigoRefFabricante(Value: WideString);
begin
  ChildNodes['codigoRefFabricante'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoAutorizado.Get_AutorizacaoFuncionamento: WideString;
begin
  Result := ChildNodes['autorizacaoFuncionamento'].Text;
end;

procedure T341_XMLCt_procedimentoAutorizado.Set_AutorizacaoFuncionamento(Value: WideString);
begin
  ChildNodes['autorizacaoFuncionamento'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoAutorizado.Get_MotivosNegativa: I341_XMLCt_procedimentoAutorizado_motivosNegativa;
begin
  Result := ChildNodes['motivosNegativa'] as I341_XMLCt_procedimentoAutorizado_motivosNegativa;
end;

{ T341_XMLCt_procedimentoAutorizado_motivosNegativa }

procedure T341_XMLCt_procedimentoAutorizado_motivosNegativa.AfterConstruction;
begin
  RegisterChildNode('motivoNegativa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoNegativa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCt_procedimentoAutorizado_motivosNegativa.Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_procedimentoAutorizado_motivosNegativa.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_procedimentoAutorizado_motivosNegativa.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME }

{ T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341 }

function T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341.Add: I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
begin
  Result := AddItem(-1) as I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
end;

function T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341.Insert(const Index: Integer): I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
begin
  Result := AddItem(Index) as I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
end;

function T341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPMEList341.Get_Item(Index: Integer): I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
begin
  Result := List[Index] as I341_XMLCtm_autorizacaoOPME_servicosAutorizadosOPME;
end;

{ T341_XMLCtm_autorizacaoQuimio }

procedure T341_XMLCtm_autorizacaoQuimio.AfterConstruction;
begin
  RegisterChildNode('dadosAutorizacao', T341_XMLCt_autorizacaoDados);
  RegisterChildNode('dadosComplementaresBeneficiario', T341_XMLCt_dadosComplementaresBeneficiario);
  RegisterChildNode('medicoSolicitante', T341_XMLCtm_anexoSolicitante);
  RegisterChildNode('diagnosticoOncologicoQuimioterapia', T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia);
  RegisterChildNode('drogasSolicitadas', T341_XMLCtm_autorizacaoQuimio_drogasSolicitadas);
  RegisterChildNode('tratamentosAnteriores', T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores);
  RegisterChildNode('motivosNegativa', T341_XMLCtm_autorizacaoQuimio_motivosNegativa);
  inherited;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
begin
  Result := ChildNodes['dadosAutorizacao'] as I341_XMLCt_autorizacaoDados;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_StatusSolicitacao: WideString;
begin
  Result := ChildNodes['statusSolicitacao'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio.Set_StatusSolicitacao(Value: WideString);
begin
  ChildNodes['statusSolicitacao'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_NumeroCNS: WideString;
begin
  Result := ChildNodes['numeroCNS'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio.Set_NumeroCNS(Value: WideString);
begin
  ChildNodes['numeroCNS'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiario;
begin
  Result := ChildNodes['dadosComplementaresBeneficiario'] as I341_XMLCt_dadosComplementaresBeneficiario;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
begin
  Result := ChildNodes['medicoSolicitante'] as I341_XMLCtm_anexoSolicitante;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_DiagnosticoOncologicoQuimioterapia: I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia;
begin
  Result := ChildNodes['diagnosticoOncologicoQuimioterapia'] as I341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_DrogasSolicitadas: I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas;
begin
  Result := ChildNodes['drogasSolicitadas'] as I341_XMLCtm_autorizacaoQuimio_drogasSolicitadas;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_TratamentosAnteriores: I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores;
begin
  Result := ChildNodes['tratamentosAnteriores'] as I341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_NumeroCiclos: Integer;
begin
  Result := ChildNodes['numeroCiclos'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoQuimio.Set_NumeroCiclos(Value: Integer);
begin
  ChildNodes['numeroCiclos'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_CicloAtual: Integer;
begin
  Result := ChildNodes['cicloAtual'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoQuimio.Set_CicloAtual(Value: Integer);
begin
  ChildNodes['cicloAtual'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_DiasCicloAtual: Integer;
begin
  Result := ChildNodes['diasCicloAtual'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoQuimio.Set_DiasCicloAtual(Value: Integer);
begin
  ChildNodes['diasCicloAtual'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_IntervaloCiclos: Integer;
begin
  Result := ChildNodes['intervaloCiclos'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoQuimio.Set_IntervaloCiclos(Value: Integer);
begin
  ChildNodes['intervaloCiclos'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio.Get_MotivosNegativa: I341_XMLCtm_autorizacaoQuimio_motivosNegativa;
begin
  Result := ChildNodes['motivosNegativa'] as I341_XMLCtm_autorizacaoQuimio_motivosNegativa;
end;

{ T341_XMLCt_dadosComplementaresBeneficiario }

function T341_XMLCt_dadosComplementaresBeneficiario.Get_Peso: WideString;
begin
  Result := ChildNodes['peso'].Text;
end;

procedure T341_XMLCt_dadosComplementaresBeneficiario.Set_Peso(Value: WideString);
begin
  ChildNodes['peso'].NodeValue := Value;
end;

function T341_XMLCt_dadosComplementaresBeneficiario.Get_Altura: WideString;
begin
  Result := ChildNodes['altura'].Text;
end;

procedure T341_XMLCt_dadosComplementaresBeneficiario.Set_Altura(Value: WideString);
begin
  ChildNodes['altura'].NodeValue := Value;
end;

function T341_XMLCt_dadosComplementaresBeneficiario.Get_SuperficieCorporal: WideString;
begin
  Result := ChildNodes['superficieCorporal'].Text;
end;

procedure T341_XMLCt_dadosComplementaresBeneficiario.Set_SuperficieCorporal(Value: WideString);
begin
  ChildNodes['superficieCorporal'].NodeValue := Value;
end;

function T341_XMLCt_dadosComplementaresBeneficiario.Get_Idade: Integer;
begin
  Result := ChildNodes['idade'].NodeValue;
end;

procedure T341_XMLCt_dadosComplementaresBeneficiario.Set_Idade(Value: Integer);
begin
  ChildNodes['idade'].NodeValue := Value;
end;

function T341_XMLCt_dadosComplementaresBeneficiario.Get_Sexo: WideString;
begin
  Result := ChildNodes['sexo'].Text;
end;

procedure T341_XMLCt_dadosComplementaresBeneficiario.Set_Sexo(Value: WideString);
begin
  ChildNodes['sexo'].NodeValue := Value;
end;

{ T341_XMLCtm_anexoSolicitante }

function T341_XMLCtm_anexoSolicitante.Get_NomeProfissional: WideString;
begin
  Result := ChildNodes['nomeProfissional'].Text;
end;

procedure T341_XMLCtm_anexoSolicitante.Set_NomeProfissional(Value: WideString);
begin
  ChildNodes['nomeProfissional'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitante.Get_TelefoneProfissional: WideString;
begin
  Result := ChildNodes['telefoneProfissional'].Text;
end;

procedure T341_XMLCtm_anexoSolicitante.Set_TelefoneProfissional(Value: WideString);
begin
  ChildNodes['telefoneProfissional'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitante.Get_EmailProfissional: WideString;
begin
  Result := ChildNodes['emailProfissional'].Text;
end;

procedure T341_XMLCtm_anexoSolicitante.Set_EmailProfissional(Value: WideString);
begin
  ChildNodes['emailProfissional'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia }

procedure T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.AfterConstruction;
begin
  RegisterChildNode('diagQuimio', T341_XMLCt_diagnosticoOncologico);
  inherited;
end;

function T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_DiagQuimio: I341_XMLCt_diagnosticoOncologico;
begin
  Result := ChildNodes['diagQuimio'] as I341_XMLCt_diagnosticoOncologico;
end;

function T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_Tumor: WideString;
begin
  Result := ChildNodes['tumor'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_Tumor(Value: WideString);
begin
  ChildNodes['tumor'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_Nodulo: WideString;
begin
  Result := ChildNodes['nodulo'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_Nodulo(Value: WideString);
begin
  ChildNodes['nodulo'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_Metastase: WideString;
begin
  Result := ChildNodes['metastase'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_Metastase(Value: WideString);
begin
  ChildNodes['metastase'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_TipoQuimioterapia: WideString;
begin
  Result := ChildNodes['tipoQuimioterapia'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_TipoQuimioterapia(Value: WideString);
begin
  ChildNodes['tipoQuimioterapia'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_PlanoTerapeutico: WideString;
begin
  Result := ChildNodes['planoTerapeutico'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_PlanoTerapeutico(Value: WideString);
begin
  ChildNodes['planoTerapeutico'].NodeValue := Value;
end;

{ T341_XMLCt_diagnosticoOncologico }

procedure T341_XMLCt_diagnosticoOncologico.AfterConstruction;
begin
  FDiagnosticoCID := CreateCollection(T341_XMLDm_diagnosticoCID10List341, IXMLNode, 'diagnosticoCID') as I341_XMLDm_diagnosticoCID10List341;
  inherited;
end;

function T341_XMLCt_diagnosticoOncologico.Get_DataDiagnostico: WideString;
begin
  Result := ChildNodes['dataDiagnostico'].Text;
end;

procedure T341_XMLCt_diagnosticoOncologico.Set_DataDiagnostico(Value: WideString);
begin
  ChildNodes['dataDiagnostico'].NodeValue := Value;
end;

function T341_XMLCt_diagnosticoOncologico.Get_DiagnosticoCID: I341_XMLDm_diagnosticoCID10List341;
begin
  Result := FDiagnosticoCID;
end;

function T341_XMLCt_diagnosticoOncologico.Get_Estadiamento: WideString;
begin
  Result := ChildNodes['estadiamento'].Text;
end;

procedure T341_XMLCt_diagnosticoOncologico.Set_Estadiamento(Value: WideString);
begin
  ChildNodes['estadiamento'].NodeValue := Value;
end;

function T341_XMLCt_diagnosticoOncologico.Get_Finalidade: WideString;
begin
  Result := ChildNodes['finalidade'].Text;
end;

procedure T341_XMLCt_diagnosticoOncologico.Set_Finalidade(Value: WideString);
begin
  ChildNodes['finalidade'].NodeValue := Value;
end;

function T341_XMLCt_diagnosticoOncologico.Get_Ecog: WideString;
begin
  Result := ChildNodes['ecog'].Text;
end;

procedure T341_XMLCt_diagnosticoOncologico.Set_Ecog(Value: WideString);
begin
  ChildNodes['ecog'].NodeValue := Value;
end;

function T341_XMLCt_diagnosticoOncologico.Get_DiagnosticoHispatologico: WideString;
begin
  Result := ChildNodes['diagnosticoHispatologico'].Text;
end;

procedure T341_XMLCt_diagnosticoOncologico.Set_DiagnosticoHispatologico(Value: WideString);
begin
  ChildNodes['diagnosticoHispatologico'].NodeValue := Value;
end;

function T341_XMLCt_diagnosticoOncologico.Get_InfoRelevantes: WideString;
begin
  Result := ChildNodes['infoRelevantes'].Text;
end;

procedure T341_XMLCt_diagnosticoOncologico.Set_InfoRelevantes(Value: WideString);
begin
  ChildNodes['infoRelevantes'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoQuimio_drogasSolicitadas }

procedure T341_XMLCtm_autorizacaoQuimio_drogasSolicitadas.AfterConstruction;
begin
  RegisterChildNode('drogaSolicitada', T341_XMLCt_drogasSolicitadas);
  ItemTag := 'drogaSolicitada';
  ItemInterface := I341_XMLCt_drogasSolicitadas;
  inherited;
end;

function T341_XMLCtm_autorizacaoQuimio_drogasSolicitadas.Get_DrogaSolicitada(Index: Integer): I341_XMLCt_drogasSolicitadas;
begin
  Result := List[Index] as I341_XMLCt_drogasSolicitadas;
end;

function T341_XMLCtm_autorizacaoQuimio_drogasSolicitadas.Add: I341_XMLCt_drogasSolicitadas;
begin
  Result := AddItem(-1) as I341_XMLCt_drogasSolicitadas;
end;

function T341_XMLCtm_autorizacaoQuimio_drogasSolicitadas.Insert(const Index: Integer): I341_XMLCt_drogasSolicitadas;
begin
  Result := AddItem(Index) as I341_XMLCt_drogasSolicitadas;
end;

{ T341_XMLCt_drogasSolicitadas }

procedure T341_XMLCt_drogasSolicitadas.AfterConstruction;
begin
  RegisterChildNode('identificacao', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCt_drogasSolicitadas.Get_DataProvavel: WideString;
begin
  Result := ChildNodes['dataProvavel'].Text;
end;

procedure T341_XMLCt_drogasSolicitadas.Set_DataProvavel(Value: WideString);
begin
  ChildNodes['dataProvavel'].NodeValue := Value;
end;

function T341_XMLCt_drogasSolicitadas.Get_Identificacao: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['identificacao'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_drogasSolicitadas.Get_QtDoses: WideString;
begin
  Result := ChildNodes['qtDoses'].Text;
end;

procedure T341_XMLCt_drogasSolicitadas.Set_QtDoses(Value: WideString);
begin
  ChildNodes['qtDoses'].NodeValue := Value;
end;

function T341_XMLCt_drogasSolicitadas.Get_UnidadeMedida: WideString;
begin
  Result := ChildNodes['unidadeMedida'].Text;
end;

procedure T341_XMLCt_drogasSolicitadas.Set_UnidadeMedida(Value: WideString);
begin
  ChildNodes['unidadeMedida'].NodeValue := Value;
end;

function T341_XMLCt_drogasSolicitadas.Get_ViaAdministracao: WideString;
begin
  Result := ChildNodes['viaAdministracao'].Text;
end;

procedure T341_XMLCt_drogasSolicitadas.Set_ViaAdministracao(Value: WideString);
begin
  ChildNodes['viaAdministracao'].NodeValue := Value;
end;

function T341_XMLCt_drogasSolicitadas.Get_Frequencia: Integer;
begin
  Result := ChildNodes['frequencia'].NodeValue;
end;

procedure T341_XMLCt_drogasSolicitadas.Set_Frequencia(Value: Integer);
begin
  ChildNodes['frequencia'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores }

function T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores.Get_Cirurgia: WideString;
begin
  Result := ChildNodes['cirurgia'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores.Set_Cirurgia(Value: WideString);
begin
  ChildNodes['cirurgia'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores.Get_Datacirurgia: WideString;
begin
  Result := ChildNodes['datacirurgia'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores.Set_Datacirurgia(Value: WideString);
begin
  ChildNodes['datacirurgia'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores.Get_AreaIrradiada: WideString;
begin
  Result := ChildNodes['areaIrradiada'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores.Set_AreaIrradiada(Value: WideString);
begin
  ChildNodes['areaIrradiada'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores.Get_DataIrradiacao: WideString;
begin
  Result := ChildNodes['dataIrradiacao'].Text;
end;

procedure T341_XMLCtm_autorizacaoQuimio_tratamentosAnteriores.Set_DataIrradiacao(Value: WideString);
begin
  ChildNodes['dataIrradiacao'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoQuimio_motivosNegativa }

procedure T341_XMLCtm_autorizacaoQuimio_motivosNegativa.AfterConstruction;
begin
  RegisterChildNode('motivoNegativa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoNegativa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCtm_autorizacaoQuimio_motivosNegativa.Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCtm_autorizacaoQuimio_motivosNegativa.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCtm_autorizacaoQuimio_motivosNegativa.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCtm_autorizacaoRadio }

procedure T341_XMLCtm_autorizacaoRadio.AfterConstruction;
begin
  RegisterChildNode('dadosAutorizacao', T341_XMLCt_autorizacaoDados);
  RegisterChildNode('dadosComplementaresBeneficiario', T341_XMLCt_dadosComplementaresBeneficiarioRadio);
  RegisterChildNode('medicoSolicitante', T341_XMLCtm_anexoSolicitante);
  RegisterChildNode('diagnosticoOncologicoRadio', T341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio);
  RegisterChildNode('tratamentosAnteriores', T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores);
  RegisterChildNode('motivosNegativa', T341_XMLCtm_autorizacaoRadio_motivosNegativa);
  inherited;
end;

function T341_XMLCtm_autorizacaoRadio.Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
begin
  Result := ChildNodes['dadosAutorizacao'] as I341_XMLCt_autorizacaoDados;
end;

function T341_XMLCtm_autorizacaoRadio.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio.Get_NumeroCNS: WideString;
begin
  Result := ChildNodes['numeroCNS'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio.Set_NumeroCNS(Value: WideString);
begin
  ChildNodes['numeroCNS'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio.Get_StatusSolicitacao: WideString;
begin
  Result := ChildNodes['statusSolicitacao'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio.Set_StatusSolicitacao(Value: WideString);
begin
  ChildNodes['statusSolicitacao'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio.Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiarioRadio;
begin
  Result := ChildNodes['dadosComplementaresBeneficiario'] as I341_XMLCt_dadosComplementaresBeneficiarioRadio;
end;

function T341_XMLCtm_autorizacaoRadio.Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
begin
  Result := ChildNodes['medicoSolicitante'] as I341_XMLCtm_anexoSolicitante;
end;

function T341_XMLCtm_autorizacaoRadio.Get_DiagnosticoOncologicoRadio: I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio;
begin
  Result := ChildNodes['diagnosticoOncologicoRadio'] as I341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio;
end;

function T341_XMLCtm_autorizacaoRadio.Get_TratamentosAnteriores: I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores;
begin
  Result := ChildNodes['tratamentosAnteriores'] as I341_XMLCtm_autorizacaoRadio_tratamentosAnteriores;
end;

function T341_XMLCtm_autorizacaoRadio.Get_NumeroCampos: Integer;
begin
  Result := ChildNodes['numeroCampos'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoRadio.Set_NumeroCampos(Value: Integer);
begin
  ChildNodes['numeroCampos'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio.Get_DoseCampo: Integer;
begin
  Result := ChildNodes['doseCampo'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoRadio.Set_DoseCampo(Value: Integer);
begin
  ChildNodes['doseCampo'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio.Get_DoseTotal: Integer;
begin
  Result := ChildNodes['doseTotal'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoRadio.Set_DoseTotal(Value: Integer);
begin
  ChildNodes['doseTotal'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio.Get_NrDias: Integer;
begin
  Result := ChildNodes['nrDias'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoRadio.Set_NrDias(Value: Integer);
begin
  ChildNodes['nrDias'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio.Get_DtPrevistaInicio: WideString;
begin
  Result := ChildNodes['dtPrevistaInicio'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio.Set_DtPrevistaInicio(Value: WideString);
begin
  ChildNodes['dtPrevistaInicio'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio.Get_MotivosNegativa: I341_XMLCtm_autorizacaoRadio_motivosNegativa;
begin
  Result := ChildNodes['motivosNegativa'] as I341_XMLCtm_autorizacaoRadio_motivosNegativa;
end;

{ T341_XMLCt_dadosComplementaresBeneficiarioRadio }

function T341_XMLCt_dadosComplementaresBeneficiarioRadio.Get_Idade: Integer;
begin
  Result := ChildNodes['idade'].NodeValue;
end;

procedure T341_XMLCt_dadosComplementaresBeneficiarioRadio.Set_Idade(Value: Integer);
begin
  ChildNodes['idade'].NodeValue := Value;
end;

function T341_XMLCt_dadosComplementaresBeneficiarioRadio.Get_Sexo: WideString;
begin
  Result := ChildNodes['sexo'].Text;
end;

procedure T341_XMLCt_dadosComplementaresBeneficiarioRadio.Set_Sexo(Value: WideString);
begin
  ChildNodes['sexo'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio }

procedure T341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio.AfterConstruction;
begin
  RegisterChildNode('diagRadio', T341_XMLCt_diagnosticoOncologico);
  inherited;
end;

function T341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio.Get_DiagRadio: I341_XMLCt_diagnosticoOncologico;
begin
  Result := ChildNodes['diagRadio'] as I341_XMLCt_diagnosticoOncologico;
end;

function T341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio.Get_DiagnosticoImagem: WideString;
begin
  Result := ChildNodes['diagnosticoImagem'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio_diagnosticoOncologicoRadio.Set_DiagnosticoImagem(Value: WideString);
begin
  ChildNodes['diagnosticoImagem'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores }

function T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores.Get_Cirurgia: WideString;
begin
  Result := ChildNodes['cirurgia'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores.Set_Cirurgia(Value: WideString);
begin
  ChildNodes['cirurgia'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores.Get_Datacirurgia: WideString;
begin
  Result := ChildNodes['datacirurgia'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores.Set_Datacirurgia(Value: WideString);
begin
  ChildNodes['datacirurgia'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores.Get_Quimioterapia: WideString;
begin
  Result := ChildNodes['quimioterapia'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores.Set_Quimioterapia(Value: WideString);
begin
  ChildNodes['quimioterapia'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores.Get_DataQuimioterapia: WideString;
begin
  Result := ChildNodes['dataQuimioterapia'].Text;
end;

procedure T341_XMLCtm_autorizacaoRadio_tratamentosAnteriores.Set_DataQuimioterapia(Value: WideString);
begin
  ChildNodes['dataQuimioterapia'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoRadio_motivosNegativa }

procedure T341_XMLCtm_autorizacaoRadio_motivosNegativa.AfterConstruction;
begin
  RegisterChildNode('motivoNegativa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoNegativa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCtm_autorizacaoRadio_motivosNegativa.Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCtm_autorizacaoRadio_motivosNegativa.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCtm_autorizacaoRadio_motivosNegativa.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCto_anexoSituacaoInicial }

procedure T341_XMLCto_anexoSituacaoInicial.AfterConstruction;
begin
  RegisterChildNode('ct_situacaoInicial', T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial);
  inherited;
end;

function T341_XMLCto_anexoSituacaoInicial.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicial.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicial.Get_NumeroGuiaAnexo: WideString;
begin
  Result := ChildNodes['numeroGuiaAnexo'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicial.Set_NumeroGuiaAnexo(Value: WideString);
begin
  ChildNodes['numeroGuiaAnexo'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicial.Get_NumeroGuiaReferenciada: WideString;
begin
  Result := ChildNodes['numeroGuiaReferenciada'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicial.Set_NumeroGuiaReferenciada(Value: WideString);
begin
  ChildNodes['numeroGuiaReferenciada'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicial.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicial.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicial.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicial.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicial.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicial.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicial.Get_Ct_situacaoInicial: I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial;
begin
  Result := ChildNodes['ct_situacaoInicial'] as I341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial;
end;

{ T341_XMLCto_anexoSituacaoInicialList341 }

function T341_XMLCto_anexoSituacaoInicialList341.Add: I341_XMLCto_anexoSituacaoInicial;
begin
  Result := AddItem(-1) as I341_XMLCto_anexoSituacaoInicial;
end;

function T341_XMLCto_anexoSituacaoInicialList341.Insert(const Index: Integer): I341_XMLCto_anexoSituacaoInicial;
begin
  Result := AddItem(Index) as I341_XMLCto_anexoSituacaoInicial;
end;

function T341_XMLCto_anexoSituacaoInicialList341.Get_Item(Index: Integer): I341_XMLCto_anexoSituacaoInicial;
begin
  Result := List[Index] as I341_XMLCto_anexoSituacaoInicial;
end;

{ T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial }

procedure T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial.AfterConstruction;
begin
  RegisterChildNode('situacaoClinica', T341_XMLCt_situacaoClinica);
  inherited;
end;

function T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial.Get_SituacaoClinica: I341_XMLCt_situacaoClinica;
begin
  Result := ChildNodes['situacaoClinica'] as I341_XMLCt_situacaoClinica;
end;

function T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial.Get_DoencaPeriodontal: Boolean;
begin
  Result := ChildNodes['doencaPeriodontal'].NodeValue;
end;

procedure T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial.Set_DoencaPeriodontal(Value: Boolean);
begin
  ChildNodes['doencaPeriodontal'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial.Get_AlteracaoTecidoMole: Boolean;
begin
  Result := ChildNodes['alteracaoTecidoMole'].NodeValue;
end;

procedure T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial.Set_AlteracaoTecidoMole(Value: Boolean);
begin
  ChildNodes['alteracaoTecidoMole'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicial_ct_situacaoInicial.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

{ T341_XMLCt_situacaoClinica }

procedure T341_XMLCt_situacaoClinica.AfterConstruction;
begin
  RegisterChildNode('dentes', T341_XMLCt_situacaoClinica_dentes);
  ItemTag := 'dentes';
  ItemInterface := I341_XMLCt_situacaoClinica_dentes;
  inherited;
end;

function T341_XMLCt_situacaoClinica.Get_Dentes(Index: Integer): I341_XMLCt_situacaoClinica_dentes;
begin
  Result := List[Index] as I341_XMLCt_situacaoClinica_dentes;
end;

function T341_XMLCt_situacaoClinica.Add: I341_XMLCt_situacaoClinica_dentes;
begin
  Result := AddItem(-1) as I341_XMLCt_situacaoClinica_dentes;
end;

function T341_XMLCt_situacaoClinica.Insert(const Index: Integer): I341_XMLCt_situacaoClinica_dentes;
begin
  Result := AddItem(Index) as I341_XMLCt_situacaoClinica_dentes;
end;

{ T341_XMLCt_situacaoClinica_dentes }

function T341_XMLCt_situacaoClinica_dentes.Get_ElementoDentario: WideString;
begin
  Result := ChildNodes['elementoDentario'].Text;
end;

procedure T341_XMLCt_situacaoClinica_dentes.Set_ElementoDentario(Value: WideString);
begin
  ChildNodes['elementoDentario'].NodeValue := Value;
end;

function T341_XMLCt_situacaoClinica_dentes.Get_CondicaoClinica: WideString;
begin
  Result := ChildNodes['condicaoClinica'].Text;
end;

procedure T341_XMLCt_situacaoClinica_dentes.Set_CondicaoClinica(Value: WideString);
begin
  ChildNodes['condicaoClinica'].NodeValue := Value;
end;

{ T341_XMLCt_recebimentoRecurso }

procedure T341_XMLCt_recebimentoRecurso.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('protocoloRecebimento', T341_XMLCt_recursoGlosaRecebimento);
  inherited;
end;

function T341_XMLCt_recebimentoRecurso.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_recebimentoRecurso.Get_ProtocoloRecebimento: I341_XMLCt_recursoGlosaRecebimento;
begin
  Result := ChildNodes['protocoloRecebimento'] as I341_XMLCt_recursoGlosaRecebimento;
end;

{ T341_XMLCt_recursoGlosaRecebimento }

procedure T341_XMLCt_recursoGlosaRecebimento.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('recursoProtocolo', T341_XMLCt_recursoGlosaRecebimento_recursoProtocolo);
  RegisterChildNode('guiasRecurso', T341_XMLCt_recursoGlosaRecebimento_guiasRecurso);
  FGuiasRecurso := CreateCollection(T341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso, 'guiasRecurso') as I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341;
  inherited;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_NrProtocoloRecursoGlosa: WideString;
begin
  Result := ChildNodes['nrProtocoloRecursoGlosa'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento.Set_NrProtocoloRecursoGlosa(Value: WideString);
begin
  ChildNodes['nrProtocoloRecursoGlosa'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_DataEnvioRecurso: WideString;
begin
  Result := ChildNodes['dataEnvioRecurso'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento.Set_DataEnvioRecurso(Value: WideString);
begin
  ChildNodes['dataEnvioRecurso'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_DataRecebimentoRecurso: WideString;
begin
  Result := ChildNodes['dataRecebimentoRecurso'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento.Set_DataRecebimentoRecurso(Value: WideString);
begin
  ChildNodes['dataRecebimentoRecurso'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_NrProtocoloRecursado: WideString;
begin
  Result := ChildNodes['nrProtocoloRecursado'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento.Set_NrProtocoloRecursado(Value: WideString);
begin
  ChildNodes['nrProtocoloRecursado'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_RecursoProtocolo: I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo;
begin
  Result := ChildNodes['recursoProtocolo'] as I341_XMLCt_recursoGlosaRecebimento_recursoProtocolo;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_QtGuiasRecurso: Integer;
begin
  Result := ChildNodes['qtGuiasRecurso'].NodeValue;
end;

procedure T341_XMLCt_recursoGlosaRecebimento.Set_QtGuiasRecurso(Value: Integer);
begin
  ChildNodes['qtGuiasRecurso'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_GuiasRecurso: I341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341;
begin
  Result := FGuiasRecurso;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento.Get_ValorTotalRecursado: WideString;
begin
  Result := ChildNodes['valorTotalRecursado'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento.Set_ValorTotalRecursado(Value: WideString);
begin
  ChildNodes['valorTotalRecursado'].NodeValue := Value;
end;

{ T341_XMLCt_recursoGlosaRecebimento_recursoProtocolo }

function T341_XMLCt_recursoGlosaRecebimento_recursoProtocolo.Get_CodigoGlosaProtocolo: WideString;
begin
  Result := ChildNodes['codigoGlosaProtocolo'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_recursoProtocolo.Set_CodigoGlosaProtocolo(Value: WideString);
begin
  ChildNodes['codigoGlosaProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_recursoProtocolo.Get_JustificativaProtocolo: WideString;
begin
  Result := ChildNodes['justificativaProtocolo'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_recursoProtocolo.Set_JustificativaProtocolo(Value: WideString);
begin
  ChildNodes['justificativaProtocolo'].NodeValue := Value;
end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso }

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso.AfterConstruction;
begin
  RegisterChildNode('opcaoRecursoGuia', T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia);
  inherited;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso.Get_NumeroGuiaOrigem: WideString;
begin
  Result := ChildNodes['numeroGuiaOrigem'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso.Set_NumeroGuiaOrigem(Value: WideString);
begin
  ChildNodes['numeroGuiaOrigem'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso.Get_OpcaoRecursoGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia;
begin
  Result := ChildNodes['opcaoRecursoGuia'] as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia;
end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341 }

function T341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341.Add: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
begin
  Result := AddItem(-1) as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341.Insert(const Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
begin
  Result := AddItem(Index) as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecursoList341.Get_Item(Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
begin
  Result := List[Index] as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso;
end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia }

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia.AfterConstruction;
begin
  RegisterChildNode('recursoGuia', T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia);
  RegisterChildNode('itensGuia', T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia);
  FRecursoGuia := CreateCollection(T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia, 'recursoGuia') as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341;
  FItensGuia := CreateCollection(T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341, I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia, 'itensGuia') as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341;
  inherited;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia.Get_RecursoGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341;
begin
  Result := FRecursoGuia;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia.Get_ItensGuia: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341;
begin
  Result := FItensGuia;
end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia }

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia.Get_CodGlosaGuia: WideString;
begin
  Result := ChildNodes['codGlosaGuia'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia.Set_CodGlosaGuia(Value: WideString);
begin
  ChildNodes['codGlosaGuia'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia.Get_JustificativaGuia: WideString;
begin
  Result := ChildNodes['justificativaGuia'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia.Set_JustificativaGuia(Value: WideString);
begin
  ChildNodes['justificativaGuia'].NodeValue := Value;
end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341 }

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341.Add: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
begin
  Result := AddItem(-1) as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341.Insert(const Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
begin
  Result := AddItem(Index) as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuiaList341.Get_Item(Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
begin
  Result := List[Index] as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_recursoGuia;
end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia }

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.AfterConstruction;
begin
  RegisterChildNode('procRecurso', T341_XMLCt_procedimentoDados);
  RegisterChildNode('denteRegiao', T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao);
  inherited;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Get_DataInicio: WideString;
begin
  Result := ChildNodes['dataInicio'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Set_DataInicio(Value: WideString);
begin
  ChildNodes['dataInicio'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Get_DataFim: WideString;
begin
  Result := ChildNodes['dataFim'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Set_DataFim(Value: WideString);
begin
  ChildNodes['dataFim'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Get_ProcRecurso: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procRecurso'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Get_DenteRegiao: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao;
begin
  Result := ChildNodes['denteRegiao'] as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Get_DenteFace: WideString;
begin
  Result := ChildNodes['denteFace'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Set_DenteFace(Value: WideString);
begin
  ChildNodes['denteFace'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Get_CodGlosaItem: WideString;
begin
  Result := ChildNodes['codGlosaItem'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Set_CodGlosaItem(Value: WideString);
begin
  ChildNodes['codGlosaItem'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Get_ValorRecursado: WideString;
begin
  Result := ChildNodes['valorRecursado'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Set_ValorRecursado(Value: WideString);
begin
  ChildNodes['valorRecursado'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Get_JustificativaItem: WideString;
begin
  Result := ChildNodes['justificativaItem'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia.Set_JustificativaItem(Value: WideString);
begin
  ChildNodes['justificativaItem'].NodeValue := Value;
end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341 }

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341.Add: I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
begin
  Result := AddItem(-1) as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341.Insert(const Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
begin
  Result := AddItem(Index) as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuiaList341.Get_Item(Index: Integer): I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
begin
  Result := List[Index] as I341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia;
end;

{ T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao }

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao.Get_CodDente: WideString;
begin
  Result := ChildNodes['codDente'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao.Set_CodDente(Value: WideString);
begin
  ChildNodes['codDente'].NodeValue := Value;
end;

function T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao.Get_CodRegiao: WideString;
begin
  Result := ChildNodes['codRegiao'].Text;
end;

procedure T341_XMLCt_recursoGlosaRecebimento_guiasRecurso_opcaoRecursoGuia_itensGuia_denteRegiao.Set_CodRegiao(Value: WideString);
begin
  ChildNodes['codRegiao'].NodeValue := Value;
end;

{ T341_XMLCt_demonstrativoRetorno }

procedure T341_XMLCt_demonstrativoRetorno.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('demonstrativoAnaliseConta', T341_XMLCtm_demonstrativoAnaliseConta);
  RegisterChildNode('demonstrativoPagamento', T341_XMLCtm_demonstrativoPagamento);
  RegisterChildNode('demonstrativoPagamentoOdonto', T341_XMLCto_demonstrativoOdontologia);
  RegisterChildNode('situacaoDemonstrativoRetorno', T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno);
  FDemonstrativoAnaliseConta := CreateCollection(T341_XMLCtm_demonstrativoAnaliseContaList341, I341_XMLCtm_demonstrativoAnaliseConta, 'demonstrativoAnaliseConta') as I341_XMLCtm_demonstrativoAnaliseContaList341;
  inherited;
end;

function T341_XMLCt_demonstrativoRetorno.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_demonstrativoRetorno.Get_DemonstrativoAnaliseConta: I341_XMLCtm_demonstrativoAnaliseContaList341;
begin
  Result := FDemonstrativoAnaliseConta;
end;

function T341_XMLCt_demonstrativoRetorno.Get_DemonstrativoPagamento: I341_XMLCtm_demonstrativoPagamento;
begin
  Result := ChildNodes['demonstrativoPagamento'] as I341_XMLCtm_demonstrativoPagamento;
end;

function T341_XMLCt_demonstrativoRetorno.Get_DemonstrativoPagamentoOdonto: I341_XMLCto_demonstrativoOdontologia;
begin
  Result := ChildNodes['demonstrativoPagamentoOdonto'] as I341_XMLCto_demonstrativoOdontologia;
end;

function T341_XMLCt_demonstrativoRetorno.Get_SituacaoDemonstrativoRetorno: I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno;
begin
  Result := ChildNodes['situacaoDemonstrativoRetorno'] as I341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno;
end;

{ T341_XMLCtm_demonstrativoAnaliseConta }

procedure T341_XMLCtm_demonstrativoAnaliseConta.AfterConstruction;
begin
  RegisterChildNode('cabecalhoDemonstrativo', T341_XMLCt_demonstrativoCabecalho);
  RegisterChildNode('dadosPrestador', T341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador);
  RegisterChildNode('dadosConta', T341_XMLCtm_demonstrativoAnaliseConta_dadosConta);
  inherited;
end;

function T341_XMLCtm_demonstrativoAnaliseConta.Get_CabecalhoDemonstrativo: I341_XMLCt_demonstrativoCabecalho;
begin
  Result := ChildNodes['cabecalhoDemonstrativo'] as I341_XMLCt_demonstrativoCabecalho;
end;

function T341_XMLCtm_demonstrativoAnaliseConta.Get_DadosPrestador: I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador;
end;

function T341_XMLCtm_demonstrativoAnaliseConta.Get_DadosConta: I341_XMLCtm_demonstrativoAnaliseConta_dadosConta;
begin
  Result := ChildNodes['dadosConta'] as I341_XMLCtm_demonstrativoAnaliseConta_dadosConta;
end;

function T341_XMLCtm_demonstrativoAnaliseConta.Get_ValorInformadoGeral: WideString;
begin
  Result := ChildNodes['valorInformadoGeral'].Text;
end;

procedure T341_XMLCtm_demonstrativoAnaliseConta.Set_ValorInformadoGeral(Value: WideString);
begin
  ChildNodes['valorInformadoGeral'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoAnaliseConta.Get_ValorProcessadoGeral: WideString;
begin
  Result := ChildNodes['valorProcessadoGeral'].Text;
end;

procedure T341_XMLCtm_demonstrativoAnaliseConta.Set_ValorProcessadoGeral(Value: WideString);
begin
  ChildNodes['valorProcessadoGeral'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoAnaliseConta.Get_ValorLiberadoGeral: WideString;
begin
  Result := ChildNodes['valorLiberadoGeral'].Text;
end;

procedure T341_XMLCtm_demonstrativoAnaliseConta.Set_ValorLiberadoGeral(Value: WideString);
begin
  ChildNodes['valorLiberadoGeral'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoAnaliseConta.Get_ValorGlosaGeral: WideString;
begin
  Result := ChildNodes['valorGlosaGeral'].Text;
end;

procedure T341_XMLCtm_demonstrativoAnaliseConta.Set_ValorGlosaGeral(Value: WideString);
begin
  ChildNodes['valorGlosaGeral'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoAnaliseContaList341 }

function T341_XMLCtm_demonstrativoAnaliseContaList341.Add: I341_XMLCtm_demonstrativoAnaliseConta;
begin
  Result := AddItem(-1) as I341_XMLCtm_demonstrativoAnaliseConta;
end;

function T341_XMLCtm_demonstrativoAnaliseContaList341.Insert(const Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta;
begin
  Result := AddItem(Index) as I341_XMLCtm_demonstrativoAnaliseConta;
end;

function T341_XMLCtm_demonstrativoAnaliseContaList341.Get_Item(Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta;
begin
  Result := List[Index] as I341_XMLCtm_demonstrativoAnaliseConta;
end;

{ T341_XMLCt_demonstrativoCabecalho }

function T341_XMLCt_demonstrativoCabecalho.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_demonstrativoCabecalho.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoCabecalho.Get_NumeroDemonstrativo: WideString;
begin
  Result := ChildNodes['numeroDemonstrativo'].Text;
end;

procedure T341_XMLCt_demonstrativoCabecalho.Set_NumeroDemonstrativo(Value: WideString);
begin
  ChildNodes['numeroDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoCabecalho.Get_NomeOperadora: WideString;
begin
  Result := ChildNodes['nomeOperadora'].Text;
end;

procedure T341_XMLCt_demonstrativoCabecalho.Set_NomeOperadora(Value: WideString);
begin
  ChildNodes['nomeOperadora'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoCabecalho.Get_NumeroCNPJ: WideString;
begin
  Result := ChildNodes['numeroCNPJ'].Text;
end;

procedure T341_XMLCt_demonstrativoCabecalho.Set_NumeroCNPJ(Value: WideString);
begin
  ChildNodes['numeroCNPJ'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoCabecalho.Get_DataEmissao: WideString;
begin
  Result := ChildNodes['dataEmissao'].Text;
end;

procedure T341_XMLCt_demonstrativoCabecalho.Set_DataEmissao(Value: WideString);
begin
  ChildNodes['dataEmissao'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador }

procedure T341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador.AfterConstruction;
begin
  RegisterChildNode('dadosContratado', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador.Get_DadosContratado: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosContratado'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador.Get_CNES: WideString;
begin
  Result := ChildNodes['CNES'].Text;
end;

procedure T341_XMLCtm_demonstrativoAnaliseConta_dadosPrestador.Set_CNES(Value: WideString);
begin
  ChildNodes['CNES'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoAnaliseConta_dadosConta }

procedure T341_XMLCtm_demonstrativoAnaliseConta_dadosConta.AfterConstruction;
begin
  RegisterChildNode('dadosProtocolo', T341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo);
  ItemTag := 'dadosProtocolo';
  ItemInterface := I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
  inherited;
end;

function T341_XMLCtm_demonstrativoAnaliseConta_dadosConta.Get_DadosProtocolo(Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
begin
  Result := List[Index] as I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
end;

function T341_XMLCtm_demonstrativoAnaliseConta_dadosConta.Add: I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
begin
  Result := AddItem(-1) as I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
end;

function T341_XMLCtm_demonstrativoAnaliseConta_dadosConta.Insert(const Index: Integer): I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
begin
  Result := AddItem(Index) as I341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo;
end;

{ T341_XMLCt_contaMedicaResumo }

procedure T341_XMLCt_contaMedicaResumo.AfterConstruction;
begin
  RegisterChildNode('GlosaProtocolo', T341_XMLCt_motivoGlosa);
  RegisterChildNode('relacaoGuias', T341_XMLCt_contaMedicaResumo_relacaoGuias);
  FRelacaoGuias := CreateCollection(T341_XMLCt_contaMedicaResumo_relacaoGuiasList341, I341_XMLCt_contaMedicaResumo_relacaoGuias, 'relacaoGuias') as I341_XMLCt_contaMedicaResumo_relacaoGuiasList341;
  inherited;
end;

function T341_XMLCt_contaMedicaResumo.Get_NumeroLotePrestador: WideString;
begin
  Result := ChildNodes['numeroLotePrestador'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo.Set_NumeroLotePrestador(Value: WideString);
begin
  ChildNodes['numeroLotePrestador'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo.Get_DataProtocolo: WideString;
begin
  Result := ChildNodes['dataProtocolo'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo.Set_DataProtocolo(Value: WideString);
begin
  ChildNodes['dataProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo.Get_GlosaProtocolo: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['GlosaProtocolo'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_contaMedicaResumo.Get_SituacaoProtocolo: WideString;
begin
  Result := ChildNodes['situacaoProtocolo'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo.Set_SituacaoProtocolo(Value: WideString);
begin
  ChildNodes['situacaoProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo.Get_RelacaoGuias: I341_XMLCt_contaMedicaResumo_relacaoGuiasList341;
begin
  Result := FRelacaoGuias;
end;

function T341_XMLCt_contaMedicaResumo.Get_ValorInformadoProtocolo: WideString;
begin
  Result := ChildNodes['valorInformadoProtocolo'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo.Set_ValorInformadoProtocolo(Value: WideString);
begin
  ChildNodes['valorInformadoProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo.Get_ValorProcessadoProtocolo: WideString;
begin
  Result := ChildNodes['valorProcessadoProtocolo'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo.Set_ValorProcessadoProtocolo(Value: WideString);
begin
  ChildNodes['valorProcessadoProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo.Get_ValorLiberadoProtocolo: WideString;
begin
  Result := ChildNodes['valorLiberadoProtocolo'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo.Set_ValorLiberadoProtocolo(Value: WideString);
begin
  ChildNodes['valorLiberadoProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo.Get_ValorGlosaProtocolo: WideString;
begin
  Result := ChildNodes['valorGlosaProtocolo'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo.Set_ValorGlosaProtocolo(Value: WideString);
begin
  ChildNodes['valorGlosaProtocolo'].NodeValue := Value;
end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias }

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.AfterConstruction;
begin
  RegisterChildNode('motivoGlosaGuia', T341_XMLCt_motivoGlosa);
  RegisterChildNode('detalhesGuia', T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia);
  FMotivoGlosaGuia := CreateCollection(T341_XMLCt_motivoGlosaList341, I341_XMLCt_motivoGlosa, 'motivoGlosaGuia') as I341_XMLCt_motivoGlosaList341;
  FDetalhesGuia := CreateCollection(T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341, I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia, 'detalhesGuia') as I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341;
  inherited;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_DataInicioFat: WideString;
begin
  Result := ChildNodes['dataInicioFat'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_DataInicioFat(Value: WideString);
begin
  ChildNodes['dataInicioFat'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_HoraInicioFat: WideString;
begin
  Result := ChildNodes['horaInicioFat'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_HoraInicioFat(Value: WideString);
begin
  ChildNodes['horaInicioFat'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_DataFimFat: WideString;
begin
  Result := ChildNodes['dataFimFat'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_DataFimFat(Value: WideString);
begin
  ChildNodes['dataFimFat'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_HoraFimFat: WideString;
begin
  Result := ChildNodes['horaFimFat'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_HoraFimFat(Value: WideString);
begin
  ChildNodes['horaFimFat'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_MotivoGlosaGuia: I341_XMLCt_motivoGlosaList341;
begin
  Result := FMotivoGlosaGuia;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_SituacaoGuia: WideString;
begin
  Result := ChildNodes['situacaoGuia'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_SituacaoGuia(Value: WideString);
begin
  ChildNodes['situacaoGuia'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_DetalhesGuia: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341;
begin
  Result := FDetalhesGuia;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_ValorInformadoGuia: WideString;
begin
  Result := ChildNodes['valorInformadoGuia'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_ValorInformadoGuia(Value: WideString);
begin
  ChildNodes['valorInformadoGuia'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_ValorProcessadoGuia: WideString;
begin
  Result := ChildNodes['valorProcessadoGuia'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_ValorProcessadoGuia(Value: WideString);
begin
  ChildNodes['valorProcessadoGuia'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_ValorLiberadoGuia: WideString;
begin
  Result := ChildNodes['valorLiberadoGuia'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_ValorLiberadoGuia(Value: WideString);
begin
  ChildNodes['valorLiberadoGuia'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias.Get_ValorGlosaGuia: WideString;
begin
  Result := ChildNodes['valorGlosaGuia'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias.Set_ValorGlosaGuia(Value: WideString);
begin
  ChildNodes['valorGlosaGuia'].NodeValue := Value;
end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuiasList341 }

function T341_XMLCt_contaMedicaResumo_relacaoGuiasList341.Add: I341_XMLCt_contaMedicaResumo_relacaoGuias;
begin
  Result := AddItem(-1) as I341_XMLCt_contaMedicaResumo_relacaoGuias;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuiasList341.Insert(const Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias;
begin
  Result := AddItem(Index) as I341_XMLCt_contaMedicaResumo_relacaoGuias;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuiasList341.Get_Item(Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias;
begin
  Result := List[Index] as I341_XMLCt_contaMedicaResumo_relacaoGuias;
end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia }

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  RegisterChildNode('relacaoGlosa', T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa);
  FRelacaoGlosa := CreateCollection(T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341, I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa, 'relacaoGlosa') as I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341;
  inherited;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Get_DataRealizacao: WideString;
begin
  Result := ChildNodes['dataRealizacao'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Set_DataRealizacao(Value: WideString);
begin
  ChildNodes['dataRealizacao'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Get_GrauParticipacao: WideString;
begin
  Result := ChildNodes['grauParticipacao'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Set_GrauParticipacao(Value: WideString);
begin
  ChildNodes['grauParticipacao'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Get_ValorInformado: WideString;
begin
  Result := ChildNodes['valorInformado'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Set_ValorInformado(Value: WideString);
begin
  ChildNodes['valorInformado'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Get_QtdExecutada: WideString;
begin
  Result := ChildNodes['qtdExecutada'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Set_QtdExecutada(Value: WideString);
begin
  ChildNodes['qtdExecutada'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Get_ValorProcessado: WideString;
begin
  Result := ChildNodes['valorProcessado'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Set_ValorProcessado(Value: WideString);
begin
  ChildNodes['valorProcessado'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Get_ValorLiberado: WideString;
begin
  Result := ChildNodes['valorLiberado'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Set_ValorLiberado(Value: WideString);
begin
  ChildNodes['valorLiberado'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia.Get_RelacaoGlosa: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341;
begin
  Result := FRelacaoGlosa;
end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341 }

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341.Add: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
begin
  Result := AddItem(-1) as I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341.Insert(const Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
begin
  Result := AddItem(Index) as I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuiaList341.Get_Item(Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
begin
  Result := List[Index] as I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia;
end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa }

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa.Get_ValorGlosa: WideString;
begin
  Result := ChildNodes['valorGlosa'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa.Set_ValorGlosa(Value: WideString);
begin
  ChildNodes['valorGlosa'].NodeValue := Value;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa.Get_TipoGlosa: WideString;
begin
  Result := ChildNodes['tipoGlosa'].Text;
end;

procedure T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa.Set_TipoGlosa(Value: WideString);
begin
  ChildNodes['tipoGlosa'].NodeValue := Value;
end;

{ T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341 }

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341.Add: I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341.Insert(const Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
end;

function T341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosaList341.Get_Item(Index: Integer): I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
begin
  Result := List[Index] as I341_XMLCt_contaMedicaResumo_relacaoGuias_detalhesGuia_relacaoGlosa;
end;

{ T341_XMLCtm_demonstrativoAnaliseConta_dadosConta_dadosProtocolo }

{ T341_XMLCtm_demonstrativoPagamento }

procedure T341_XMLCtm_demonstrativoPagamento.AfterConstruction;
begin
  RegisterChildNode('cabecalhoDemonstrativo', T341_XMLCt_demonstrativoCabecalho);
  RegisterChildNode('dadosContratado', T341_XMLCtm_demonstrativoPagamento_dadosContratado);
  RegisterChildNode('pagamentos', T341_XMLCtm_demonstrativoPagamento_pagamentos);
  RegisterChildNode('totaisDemonstrativo', T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo);
  inherited;
end;

function T341_XMLCtm_demonstrativoPagamento.Get_CabecalhoDemonstrativo: I341_XMLCt_demonstrativoCabecalho;
begin
  Result := ChildNodes['cabecalhoDemonstrativo'] as I341_XMLCt_demonstrativoCabecalho;
end;

function T341_XMLCtm_demonstrativoPagamento.Get_DadosContratado: I341_XMLCtm_demonstrativoPagamento_dadosContratado;
begin
  Result := ChildNodes['dadosContratado'] as I341_XMLCtm_demonstrativoPagamento_dadosContratado;
end;

function T341_XMLCtm_demonstrativoPagamento.Get_Pagamentos: I341_XMLCtm_demonstrativoPagamento_pagamentos;
begin
  Result := ChildNodes['pagamentos'] as I341_XMLCtm_demonstrativoPagamento_pagamentos;
end;

function T341_XMLCtm_demonstrativoPagamento.Get_TotaisDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo;
begin
  Result := ChildNodes['totaisDemonstrativo'] as I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo;
end;

function T341_XMLCtm_demonstrativoPagamento.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoPagamento_dadosContratado }

procedure T341_XMLCtm_demonstrativoPagamento_dadosContratado.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCtm_demonstrativoPagamento_dadosContratado.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_demonstrativoPagamento_dadosContratado.Get_CNES: WideString;
begin
  Result := ChildNodes['CNES'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_dadosContratado.Set_CNES(Value: WideString);
begin
  ChildNodes['CNES'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos }

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos.AfterConstruction;
begin
  RegisterChildNode('pagamentosPorData', T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData);
  ItemTag := 'pagamentosPorData';
  ItemInterface := I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
  inherited;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos.Get_PagamentosPorData(Index: Integer): I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
begin
  Result := List[Index] as I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos.Add: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
begin
  Result := AddItem(-1) as I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos.Insert(const Index: Integer): I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
begin
  Result := AddItem(Index) as I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData;
end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData }

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData.AfterConstruction;
begin
  RegisterChildNode('dadosPagamento', T341_XMLCt_pagamentoDados);
  RegisterChildNode('dadosResumo', T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo);
  RegisterChildNode('totaisBrutosPorData', T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData);
  RegisterChildNode('debitosCreditosPorData', T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData);
  RegisterChildNode('totaisLiquidosPorData', T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData);
  inherited;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData.Get_DadosPagamento: I341_XMLCt_pagamentoDados;
begin
  Result := ChildNodes['dadosPagamento'] as I341_XMLCt_pagamentoDados;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData.Get_DadosResumo: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo;
begin
  Result := ChildNodes['dadosResumo'] as I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData.Get_TotaisBrutosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData;
begin
  Result := ChildNodes['totaisBrutosPorData'] as I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData.Get_DebitosCreditosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData;
begin
  Result := ChildNodes['debitosCreditosPorData'] as I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData.Get_TotaisLiquidosPorData: I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData;
begin
  Result := ChildNodes['totaisLiquidosPorData'] as I341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData;
end;

{ T341_XMLCt_pagamentoDados }

function T341_XMLCt_pagamentoDados.Get_DataPagamento: WideString;
begin
  Result := ChildNodes['dataPagamento'].Text;
end;

procedure T341_XMLCt_pagamentoDados.Set_DataPagamento(Value: WideString);
begin
  ChildNodes['dataPagamento'].NodeValue := Value;
end;

function T341_XMLCt_pagamentoDados.Get_FormaPagamento: WideString;
begin
  Result := ChildNodes['formaPagamento'].Text;
end;

procedure T341_XMLCt_pagamentoDados.Set_FormaPagamento(Value: WideString);
begin
  ChildNodes['formaPagamento'].NodeValue := Value;
end;

function T341_XMLCt_pagamentoDados.Get_Banco: WideString;
begin
  Result := ChildNodes['banco'].Text;
end;

procedure T341_XMLCt_pagamentoDados.Set_Banco(Value: WideString);
begin
  ChildNodes['banco'].NodeValue := Value;
end;

function T341_XMLCt_pagamentoDados.Get_Agencia: WideString;
begin
  Result := ChildNodes['agencia'].Text;
end;

procedure T341_XMLCt_pagamentoDados.Set_Agencia(Value: WideString);
begin
  ChildNodes['agencia'].NodeValue := Value;
end;

function T341_XMLCt_pagamentoDados.Get_NrContaCheque: WideString;
begin
  Result := ChildNodes['nrContaCheque'].Text;
end;

procedure T341_XMLCt_pagamentoDados.Set_NrContaCheque(Value: WideString);
begin
  ChildNodes['nrContaCheque'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo }

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo.AfterConstruction;
begin
  RegisterChildNode('relacaoProtocolos', T341_XMLCt_dadosResumoDemonstrativo);
  ItemTag := 'relacaoProtocolos';
  ItemInterface := I341_XMLCt_dadosResumoDemonstrativo;
  inherited;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo.Get_RelacaoProtocolos(Index: Integer): I341_XMLCt_dadosResumoDemonstrativo;
begin
  Result := List[Index] as I341_XMLCt_dadosResumoDemonstrativo;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo.Add: I341_XMLCt_dadosResumoDemonstrativo;
begin
  Result := AddItem(-1) as I341_XMLCt_dadosResumoDemonstrativo;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_dadosResumo.Insert(const Index: Integer): I341_XMLCt_dadosResumoDemonstrativo;
begin
  Result := AddItem(Index) as I341_XMLCt_dadosResumoDemonstrativo;
end;

{ T341_XMLCt_dadosResumoDemonstrativo }

function T341_XMLCt_dadosResumoDemonstrativo.Get_DataProtocolo: WideString;
begin
  Result := ChildNodes['dataProtocolo'].Text;
end;

procedure T341_XMLCt_dadosResumoDemonstrativo.Set_DataProtocolo(Value: WideString);
begin
  ChildNodes['dataProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_dadosResumoDemonstrativo.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_dadosResumoDemonstrativo.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_dadosResumoDemonstrativo.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_dadosResumoDemonstrativo.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_dadosResumoDemonstrativo.Get_ValorInformado: WideString;
begin
  Result := ChildNodes['valorInformado'].Text;
end;

procedure T341_XMLCt_dadosResumoDemonstrativo.Set_ValorInformado(Value: WideString);
begin
  ChildNodes['valorInformado'].NodeValue := Value;
end;

function T341_XMLCt_dadosResumoDemonstrativo.Get_ValorProcessado: WideString;
begin
  Result := ChildNodes['valorProcessado'].Text;
end;

procedure T341_XMLCt_dadosResumoDemonstrativo.Set_ValorProcessado(Value: WideString);
begin
  ChildNodes['valorProcessado'].NodeValue := Value;
end;

function T341_XMLCt_dadosResumoDemonstrativo.Get_ValorLiberado: WideString;
begin
  Result := ChildNodes['valorLiberado'].Text;
end;

procedure T341_XMLCt_dadosResumoDemonstrativo.Set_ValorLiberado(Value: WideString);
begin
  ChildNodes['valorLiberado'].NodeValue := Value;
end;

function T341_XMLCt_dadosResumoDemonstrativo.Get_ValorGlosa: WideString;
begin
  Result := ChildNodes['valorGlosa'].Text;
end;

procedure T341_XMLCt_dadosResumoDemonstrativo.Set_ValorGlosa(Value: WideString);
begin
  ChildNodes['valorGlosa'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData }

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData.Get_TotalInformadoPorData: WideString;
begin
  Result := ChildNodes['totalInformadoPorData'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData.Set_TotalInformadoPorData(Value: WideString);
begin
  ChildNodes['totalInformadoPorData'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData.Get_TotalProcessadoPorData: WideString;
begin
  Result := ChildNodes['totalProcessadoPorData'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData.Set_TotalProcessadoPorData(Value: WideString);
begin
  ChildNodes['totalProcessadoPorData'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData.Get_TotaLiberadoPorData: WideString;
begin
  Result := ChildNodes['totaLiberadoPorData'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData.Set_TotaLiberadoPorData(Value: WideString);
begin
  ChildNodes['totaLiberadoPorData'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData.Get_TotalGlosaPorData: WideString;
begin
  Result := ChildNodes['totalGlosaPorData'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisBrutosPorData.Set_TotalGlosaPorData(Value: WideString);
begin
  ChildNodes['totalGlosaPorData'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData }

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData.AfterConstruction;
begin
  RegisterChildNode('debitosCreditos', T341_XMLCt_descontos);
  ItemTag := 'debitosCreditos';
  ItemInterface := I341_XMLCt_descontos;
  inherited;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData.Get_DebitosCreditos(Index: Integer): I341_XMLCt_descontos;
begin
  Result := List[Index] as I341_XMLCt_descontos;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData.Add: I341_XMLCt_descontos;
begin
  Result := AddItem(-1) as I341_XMLCt_descontos;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_debitosCreditosPorData.Insert(const Index: Integer): I341_XMLCt_descontos;
begin
  Result := AddItem(Index) as I341_XMLCt_descontos;
end;

{ T341_XMLCt_descontos }

function T341_XMLCt_descontos.Get_Indicador: WideString;
begin
  Result := ChildNodes['indicador'].Text;
end;

procedure T341_XMLCt_descontos.Set_Indicador(Value: WideString);
begin
  ChildNodes['indicador'].NodeValue := Value;
end;

function T341_XMLCt_descontos.Get_TipoDebitoCredito: WideString;
begin
  Result := ChildNodes['tipoDebitoCredito'].Text;
end;

procedure T341_XMLCt_descontos.Set_TipoDebitoCredito(Value: WideString);
begin
  ChildNodes['tipoDebitoCredito'].NodeValue := Value;
end;

function T341_XMLCt_descontos.Get_DescricaoDbCr: WideString;
begin
  Result := ChildNodes['descricaoDbCr'].Text;
end;

procedure T341_XMLCt_descontos.Set_DescricaoDbCr(Value: WideString);
begin
  ChildNodes['descricaoDbCr'].NodeValue := Value;
end;

function T341_XMLCt_descontos.Get_ValorDbCr: WideString;
begin
  Result := ChildNodes['valorDbCr'].Text;
end;

procedure T341_XMLCt_descontos.Set_ValorDbCr(Value: WideString);
begin
  ChildNodes['valorDbCr'].NodeValue := Value;
end;

{ T341_XMLCt_descontosList341 }

function T341_XMLCt_descontosList341.Add: I341_XMLCt_descontos;
begin
  Result := AddItem(-1) as I341_XMLCt_descontos;
end;

function T341_XMLCt_descontosList341.Insert(const Index: Integer): I341_XMLCt_descontos;
begin
  Result := AddItem(Index) as I341_XMLCt_descontos;
end;

function T341_XMLCt_descontosList341.Get_Item(Index: Integer): I341_XMLCt_descontos;
begin
  Result := List[Index] as I341_XMLCt_descontos;
end;

{ T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData }

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData.Get_TotalDebitosPorData: WideString;
begin
  Result := ChildNodes['totalDebitosPorData'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData.Set_TotalDebitosPorData(Value: WideString);
begin
  ChildNodes['totalDebitosPorData'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData.Get_TotalCreditosPorData: WideString;
begin
  Result := ChildNodes['totalCreditosPorData'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData.Set_TotalCreditosPorData(Value: WideString);
begin
  ChildNodes['totalCreditosPorData'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData.Get_LiquidoPorData: WideString;
begin
  Result := ChildNodes['liquidoPorData'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_pagamentos_pagamentosPorData_totaisLiquidosPorData.Set_LiquidoPorData(Value: WideString);
begin
  ChildNodes['liquidoPorData'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo }

procedure T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo.AfterConstruction;
begin
  RegisterChildNode('totaisBrutosDemonstrativo', T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo);
  RegisterChildNode('debitosCreditosDemonstrativo', T341_XMLCt_descontos);
  RegisterChildNode('totaisLiquidosDemonstrativo', T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo);
  FDebitosCreditosDemonstrativo := CreateCollection(T341_XMLCt_descontosList341, I341_XMLCt_descontos, 'debitosCreditosDemonstrativo') as I341_XMLCt_descontosList341;
  inherited;
end;

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo.Get_TotaisBrutosDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo;
begin
  Result := ChildNodes['totaisBrutosDemonstrativo'] as I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo;
end;

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo.Get_DebitosCreditosDemonstrativo: I341_XMLCt_descontosList341;
begin
  Result := FDebitosCreditosDemonstrativo;
end;

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo.Get_TotaisLiquidosDemonstrativo: I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo;
begin
  Result := ChildNodes['totaisLiquidosDemonstrativo'] as I341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo;
end;

{ T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo }

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo.Get_ValorInformadoBruto: WideString;
begin
  Result := ChildNodes['valorInformadoBruto'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo.Set_ValorInformadoBruto(Value: WideString);
begin
  ChildNodes['valorInformadoBruto'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo.Get_ValorProcessadoBruto: WideString;
begin
  Result := ChildNodes['valorProcessadoBruto'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo.Set_ValorProcessadoBruto(Value: WideString);
begin
  ChildNodes['valorProcessadoBruto'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo.Get_ValorLiberadoBruto: WideString;
begin
  Result := ChildNodes['valorLiberadoBruto'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo.Set_ValorLiberadoBruto(Value: WideString);
begin
  ChildNodes['valorLiberadoBruto'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo.Get_ValorGlosaBruto: WideString;
begin
  Result := ChildNodes['valorGlosaBruto'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisBrutosDemonstrativo.Set_ValorGlosaBruto(Value: WideString);
begin
  ChildNodes['valorGlosaBruto'].NodeValue := Value;
end;

{ T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo }

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo.Get_TotalDebitosDemonstrativo: WideString;
begin
  Result := ChildNodes['totalDebitosDemonstrativo'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo.Set_TotalDebitosDemonstrativo(Value: WideString);
begin
  ChildNodes['totalDebitosDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo.Get_TotalCreditosdemonstrativo: WideString;
begin
  Result := ChildNodes['totalCreditosdemonstrativo'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo.Set_TotalCreditosdemonstrativo(Value: WideString);
begin
  ChildNodes['totalCreditosdemonstrativo'].NodeValue := Value;
end;

function T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo.Get_ValorLiberadoDemonstrativo: WideString;
begin
  Result := ChildNodes['valorLiberadoDemonstrativo'].Text;
end;

procedure T341_XMLCtm_demonstrativoPagamento_totaisDemonstrativo_totaisLiquidosDemonstrativo.Set_ValorLiberadoDemonstrativo(Value: WideString);
begin
  ChildNodes['valorLiberadoDemonstrativo'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia }

procedure T341_XMLCto_demonstrativoOdontologia.AfterConstruction;
begin
  RegisterChildNode('cabecalhoDemonstrativoOdonto', T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto);
  RegisterChildNode('dadosPrestador', T341_XMLCto_demonstrativoOdontologia_dadosPrestador);
  RegisterChildNode('dadosPagamentoPorData', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData);
  RegisterChildNode('totaisBrutoDemonstrativo', T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo);
  RegisterChildNode('debCredDemonstrativo', T341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo);
  FDadosPagamentoPorData := CreateCollection(T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData, 'dadosPagamentoPorData') as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341;
  inherited;
end;

function T341_XMLCto_demonstrativoOdontologia.Get_CabecalhoDemonstrativoOdonto: I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto;
begin
  Result := ChildNodes['cabecalhoDemonstrativoOdonto'] as I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto;
end;

function T341_XMLCto_demonstrativoOdontologia.Get_DadosPrestador: I341_XMLCto_demonstrativoOdontologia_dadosPrestador;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCto_demonstrativoOdontologia_dadosPrestador;
end;

function T341_XMLCto_demonstrativoOdontologia.Get_DadosPagamentoPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341;
begin
  Result := FDadosPagamentoPorData;
end;

function T341_XMLCto_demonstrativoOdontologia.Get_TotaisBrutoDemonstrativo: I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo;
begin
  Result := ChildNodes['totaisBrutoDemonstrativo'] as I341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo;
end;

function T341_XMLCto_demonstrativoOdontologia.Get_DebCredDemonstrativo: I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo;
begin
  Result := ChildNodes['debCredDemonstrativo'] as I341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo;
end;

function T341_XMLCto_demonstrativoOdontologia.Get_TotalDebitosDemonstativo: WideString;
begin
  Result := ChildNodes['totalDebitosDemonstativo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia.Set_TotalDebitosDemonstativo(Value: WideString);
begin
  ChildNodes['totalDebitosDemonstativo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia.Get_TotalCreditosDemonstrativo: WideString;
begin
  Result := ChildNodes['totalCreditosDemonstrativo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia.Set_TotalCreditosDemonstrativo(Value: WideString);
begin
  ChildNodes['totalCreditosDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia.Get_ValorRecebidoDemonstrativo: WideString;
begin
  Result := ChildNodes['valorRecebidoDemonstrativo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia.Set_ValorRecebidoDemonstrativo(Value: WideString);
begin
  ChildNodes['valorRecebidoDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto }

procedure T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.AfterConstruction;
begin
  RegisterChildNode('periodoProc', T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc);
  inherited;
end;

function T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.Get_NumeroDemonstrativo: WideString;
begin
  Result := ChildNodes['numeroDemonstrativo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.Set_NumeroDemonstrativo(Value: WideString);
begin
  ChildNodes['numeroDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.Get_NomeOperadora: WideString;
begin
  Result := ChildNodes['nomeOperadora'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.Set_NomeOperadora(Value: WideString);
begin
  ChildNodes['nomeOperadora'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.Get_CnpjOper: WideString;
begin
  Result := ChildNodes['cnpjOper'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.Set_CnpjOper(Value: WideString);
begin
  ChildNodes['cnpjOper'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto.Get_PeriodoProc: I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc;
begin
  Result := ChildNodes['periodoProc'] as I341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc;
end;

{ T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc }

function T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc.Get_Datainicio: WideString;
begin
  Result := ChildNodes['datainicio'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc.Set_Datainicio(Value: WideString);
begin
  ChildNodes['datainicio'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc.Get_Datafim: WideString;
begin
  Result := ChildNodes['datafim'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_cabecalhoDemonstrativoOdonto_periodoProc.Set_Datafim(Value: WideString);
begin
  ChildNodes['datafim'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPrestador }

procedure T341_XMLCto_demonstrativoOdontologia_dadosPrestador.AfterConstruction;
begin
  RegisterChildNode('cpfCNPJContratado', T341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado);
  inherited;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPrestador.Get_CodigoPrestador: WideString;
begin
  Result := ChildNodes['codigoPrestador'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPrestador.Set_CodigoPrestador(Value: WideString);
begin
  ChildNodes['codigoPrestador'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPrestador.Get_NomePrestador: WideString;
begin
  Result := ChildNodes['nomePrestador'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPrestador.Set_NomePrestador(Value: WideString);
begin
  ChildNodes['nomePrestador'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPrestador.Get_CpfCNPJContratado: I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado;
begin
  Result := ChildNodes['cpfCNPJContratado'] as I341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado }

function T341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado.Get_CnpjPrestador: WideString;
begin
  Result := ChildNodes['cnpjPrestador'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado.Set_CnpjPrestador(Value: WideString);
begin
  ChildNodes['cnpjPrestador'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado.Get_CpfContratado: WideString;
begin
  Result := ChildNodes['cpfContratado'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPrestador_cpfCNPJContratado.Set_CpfContratado(Value: WideString);
begin
  ChildNodes['cpfContratado'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData }

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData.AfterConstruction;
begin
  RegisterChildNode('dadosPagamento', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento);
  RegisterChildNode('protocolos', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos);
  RegisterChildNode('totaisPorData', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData);
  RegisterChildNode('debCredPorDataPagamento', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento);
  RegisterChildNode('totalLiquidoPorData', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData);
  FProtocolos := CreateCollection(T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos, 'protocolos') as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341;
  inherited;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData.Get_DadosPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento;
begin
  Result := ChildNodes['dadosPagamento'] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData.Get_Protocolos: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341;
begin
  Result := FProtocolos;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData.Get_TotaisPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData;
begin
  Result := ChildNodes['totaisPorData'] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData.Get_DebCredPorDataPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento;
begin
  Result := ChildNodes['debCredPorDataPagamento'] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData.Get_TotalLiquidoPorData: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData;
begin
  Result := ChildNodes['totalLiquidoPorData'] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341 }

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341.Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
begin
  Result := AddItem(-1) as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341.Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
begin
  Result := AddItem(Index) as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorDataList341.Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
begin
  Result := List[Index] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento }

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento.Get_DataPagamento: WideString;
begin
  Result := ChildNodes['dataPagamento'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento.Set_DataPagamento(Value: WideString);
begin
  ChildNodes['dataPagamento'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento.Get_Banco: WideString;
begin
  Result := ChildNodes['banco'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento.Set_Banco(Value: WideString);
begin
  ChildNodes['banco'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento.Get_Agencia: WideString;
begin
  Result := ChildNodes['agencia'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento.Set_Agencia(Value: WideString);
begin
  ChildNodes['agencia'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento.Get_Conta: WideString;
begin
  Result := ChildNodes['conta'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_dadosPagamento.Set_Conta(Value: WideString);
begin
  ChildNodes['conta'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos }

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos.AfterConstruction;
begin
  RegisterChildNode('dadosPagamentoGuia', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia);
  RegisterChildNode('totaisPorProtocolo', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo);
  FDadosPagamentoGuia := CreateCollection(T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia, 'dadosPagamentoGuia') as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341;
  inherited;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos.Get_DadosPagamentoGuia: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341;
begin
  Result := FDadosPagamentoGuia;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos.Get_TotaisPorProtocolo: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo;
begin
  Result := ChildNodes['totaisPorProtocolo'] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341 }

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341.Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
begin
  Result := AddItem(-1) as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341.Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
begin
  Result := AddItem(Index) as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolosList341.Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
begin
  Result := List[Index] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia }

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.AfterConstruction;
begin
  RegisterChildNode('dadosPagamento', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento);
  FDadosPagamento := CreateCollection(T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341, I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento, 'dadosPagamento') as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341;
  inherited;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_Recurso: WideString;
begin
  Result := ChildNodes['recurso'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_Recurso(Value: WideString);
begin
  ChildNodes['recurso'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_NomeExecutante: WideString;
begin
  Result := ChildNodes['nomeExecutante'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_NomeExecutante(Value: WideString);
begin
  ChildNodes['nomeExecutante'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_CarteiraBeneficiario: WideString;
begin
  Result := ChildNodes['carteiraBeneficiario'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_CarteiraBeneficiario(Value: WideString);
begin
  ChildNodes['carteiraBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_DadosPagamento: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341;
begin
  Result := FDadosPagamento;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_ObservacaoGuia: WideString;
begin
  Result := ChildNodes['observacaoGuia'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_ObservacaoGuia(Value: WideString);
begin
  ChildNodes['observacaoGuia'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_ValorTotalInformadoGuia: WideString;
begin
  Result := ChildNodes['valorTotalInformadoGuia'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_ValorTotalInformadoGuia(Value: WideString);
begin
  ChildNodes['valorTotalInformadoGuia'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_ValorTotalProcessadoGuia: WideString;
begin
  Result := ChildNodes['valorTotalProcessadoGuia'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_ValorTotalProcessadoGuia(Value: WideString);
begin
  ChildNodes['valorTotalProcessadoGuia'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_ValorTotalGlosaGuia: WideString;
begin
  Result := ChildNodes['valorTotalGlosaGuia'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_ValorTotalGlosaGuia(Value: WideString);
begin
  ChildNodes['valorTotalGlosaGuia'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_ValorTotalFranquiaGuia: WideString;
begin
  Result := ChildNodes['valorTotalFranquiaGuia'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_ValorTotalFranquiaGuia(Value: WideString);
begin
  ChildNodes['valorTotalFranquiaGuia'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Get_ValorTotalLiberadoGuia: WideString;
begin
  Result := ChildNodes['valorTotalLiberadoGuia'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia.Set_ValorTotalLiberadoGuia(Value: WideString);
begin
  ChildNodes['valorTotalLiberadoGuia'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341 }

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341.Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
begin
  Result := AddItem(-1) as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341.Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
begin
  Result := AddItem(Index) as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuiaList341.Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
begin
  Result := List[Index] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento }

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  RegisterChildNode('denteRegiao', T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao);
  FCodigosGlosa := CreateCollection(T341_XMLDm_tipoGlosaList341, IXMLNode, 'codigosGlosa') as I341_XMLDm_tipoGlosaList341;
  inherited;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_DenteRegiao: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao;
begin
  Result := ChildNodes['denteRegiao'] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_DenteFace: WideString;
begin
  Result := ChildNodes['denteFace'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Set_DenteFace(Value: WideString);
begin
  ChildNodes['denteFace'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_DataRealizacao: WideString;
begin
  Result := ChildNodes['dataRealizacao'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Set_DataRealizacao(Value: WideString);
begin
  ChildNodes['dataRealizacao'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_QtdProc: Integer;
begin
  Result := ChildNodes['qtdProc'].NodeValue;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Set_QtdProc(Value: Integer);
begin
  ChildNodes['qtdProc'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_ValorInformado: WideString;
begin
  Result := ChildNodes['valorInformado'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Set_ValorInformado(Value: WideString);
begin
  ChildNodes['valorInformado'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_ValorProcessado: WideString;
begin
  Result := ChildNodes['valorProcessado'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Set_ValorProcessado(Value: WideString);
begin
  ChildNodes['valorProcessado'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_ValorGlosaEstorno: WideString;
begin
  Result := ChildNodes['valorGlosaEstorno'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Set_ValorGlosaEstorno(Value: WideString);
begin
  ChildNodes['valorGlosaEstorno'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_ValorFranquia: WideString;
begin
  Result := ChildNodes['valorFranquia'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Set_ValorFranquia(Value: WideString);
begin
  ChildNodes['valorFranquia'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_ValorLiberado: WideString;
begin
  Result := ChildNodes['valorLiberado'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Set_ValorLiberado(Value: WideString);
begin
  ChildNodes['valorLiberado'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento.Get_CodigosGlosa: I341_XMLDm_tipoGlosaList341;
begin
  Result := FCodigosGlosa;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341 }

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341.Add: I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
begin
  Result := AddItem(-1) as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341.Insert(const Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
begin
  Result := AddItem(Index) as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamentoList341.Get_Item(Index: Integer): I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
begin
  Result := List[Index] as I341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao }

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao.Get_CodDente: WideString;
begin
  Result := ChildNodes['codDente'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao.Set_CodDente(Value: WideString);
begin
  ChildNodes['codDente'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao.Get_CodRegiao: WideString;
begin
  Result := ChildNodes['codRegiao'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_dadosPagamentoGuia_dadosPagamento_denteRegiao.Set_CodRegiao(Value: WideString);
begin
  ChildNodes['codRegiao'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo }

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Get_ValorTotalInformadoPorProtocolo: WideString;
begin
  Result := ChildNodes['valorTotalInformadoPorProtocolo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Set_ValorTotalInformadoPorProtocolo(Value: WideString);
begin
  ChildNodes['valorTotalInformadoPorProtocolo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Get_ValorTotalProcessadoPorProtocolo: WideString;
begin
  Result := ChildNodes['valorTotalProcessadoPorProtocolo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Set_ValorTotalProcessadoPorProtocolo(Value: WideString);
begin
  ChildNodes['valorTotalProcessadoPorProtocolo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Get_ValorTotalGlosaPorProtocolo: WideString;
begin
  Result := ChildNodes['valorTotalGlosaPorProtocolo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Set_ValorTotalGlosaPorProtocolo(Value: WideString);
begin
  ChildNodes['valorTotalGlosaPorProtocolo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Get_ValorTotalFranquiaPorProtocolo: WideString;
begin
  Result := ChildNodes['valorTotalFranquiaPorProtocolo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Set_ValorTotalFranquiaPorProtocolo(Value: WideString);
begin
  ChildNodes['valorTotalFranquiaPorProtocolo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Get_ValorTotalLiberadoPorProtocolo: WideString;
begin
  Result := ChildNodes['valorTotalLiberadoPorProtocolo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_protocolos_totaisPorProtocolo.Set_ValorTotalLiberadoPorProtocolo(Value: WideString);
begin
  ChildNodes['valorTotalLiberadoPorProtocolo'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData }

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Get_ValorBrutonformadoPorData: WideString;
begin
  Result := ChildNodes['valorBrutonformadoPorData'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Set_ValorBrutonformadoPorData(Value: WideString);
begin
  ChildNodes['valorBrutonformadoPorData'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Get_ValorBrutoProcessadoPorData: WideString;
begin
  Result := ChildNodes['valorBrutoProcessadoPorData'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Set_ValorBrutoProcessadoPorData(Value: WideString);
begin
  ChildNodes['valorBrutoProcessadoPorData'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Get_ValorBrutoGlosaPorData: WideString;
begin
  Result := ChildNodes['valorBrutoGlosaPorData'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Set_ValorBrutoGlosaPorData(Value: WideString);
begin
  ChildNodes['valorBrutoGlosaPorData'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Get_ValorBrutoFranquiaPorData: WideString;
begin
  Result := ChildNodes['valorBrutoFranquiaPorData'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Set_ValorBrutoFranquiaPorData(Value: WideString);
begin
  ChildNodes['valorBrutoFranquiaPorData'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Get_ValorBrutoLiberadoPorData: WideString;
begin
  Result := ChildNodes['valorBrutoLiberadoPorData'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totaisPorData.Set_ValorBrutoLiberadoPorData(Value: WideString);
begin
  ChildNodes['valorBrutoLiberadoPorData'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento }

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento.AfterConstruction;
begin
  RegisterChildNode('descontos', T341_XMLCt_descontos);
  ItemTag := 'descontos';
  ItemInterface := I341_XMLCt_descontos;
  inherited;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento.Get_Descontos(Index: Integer): I341_XMLCt_descontos;
begin
  Result := List[Index] as I341_XMLCt_descontos;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento.Add: I341_XMLCt_descontos;
begin
  Result := AddItem(-1) as I341_XMLCt_descontos;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_debCredPorDataPagamento.Insert(const Index: Integer): I341_XMLCt_descontos;
begin
  Result := AddItem(Index) as I341_XMLCt_descontos;
end;

{ T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData }

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData.Get_ValorTotalDebitosPorData: WideString;
begin
  Result := ChildNodes['valorTotalDebitosPorData'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData.Set_ValorTotalDebitosPorData(Value: WideString);
begin
  ChildNodes['valorTotalDebitosPorData'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData.Get_ValorTotalCreditosPorData: WideString;
begin
  Result := ChildNodes['valorTotalCreditosPorData'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData.Set_ValorTotalCreditosPorData(Value: WideString);
begin
  ChildNodes['valorTotalCreditosPorData'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData.Get_ValorFinalAReceberPorData: WideString;
begin
  Result := ChildNodes['valorFinalAReceberPorData'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_dadosPagamentoPorData_totalLiquidoPorData.Set_ValorFinalAReceberPorData(Value: WideString);
begin
  ChildNodes['valorFinalAReceberPorData'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo }

function T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Get_ValorInformadoPorDemonstrativoData: WideString;
begin
  Result := ChildNodes['valorInformadoPorDemonstrativoData'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Set_ValorInformadoPorDemonstrativoData(Value: WideString);
begin
  ChildNodes['valorInformadoPorDemonstrativoData'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Get_ValorlProcessadoPorDemonstrativo: WideString;
begin
  Result := ChildNodes['valorlProcessadoPorDemonstrativo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Set_ValorlProcessadoPorDemonstrativo(Value: WideString);
begin
  ChildNodes['valorlProcessadoPorDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Get_ValorlGlosaPorDemonstrativo: WideString;
begin
  Result := ChildNodes['valorlGlosaPorDemonstrativo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Set_ValorlGlosaPorDemonstrativo(Value: WideString);
begin
  ChildNodes['valorlGlosaPorDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Get_ValoFranquiaPorDemonstrativo: WideString;
begin
  Result := ChildNodes['valoFranquiaPorDemonstrativo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Set_ValoFranquiaPorDemonstrativo(Value: WideString);
begin
  ChildNodes['valoFranquiaPorDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Get_ValorLiberadoPorDemonstrativo: WideString;
begin
  Result := ChildNodes['valorLiberadoPorDemonstrativo'].Text;
end;

procedure T341_XMLCto_demonstrativoOdontologia_totaisBrutoDemonstrativo.Set_ValorLiberadoPorDemonstrativo(Value: WideString);
begin
  ChildNodes['valorLiberadoPorDemonstrativo'].NodeValue := Value;
end;

{ T341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo }

procedure T341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo.AfterConstruction;
begin
  RegisterChildNode('descontos', T341_XMLCt_descontos);
  ItemTag := 'descontos';
  ItemInterface := I341_XMLCt_descontos;
  inherited;
end;

function T341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo.Get_Descontos(Index: Integer): I341_XMLCt_descontos;
begin
  Result := List[Index] as I341_XMLCt_descontos;
end;

function T341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo.Add: I341_XMLCt_descontos;
begin
  Result := AddItem(-1) as I341_XMLCt_descontos;
end;

function T341_XMLCto_demonstrativoOdontologia_debCredDemonstrativo.Insert(const Index: Integer): I341_XMLCt_descontos;
begin
  Result := AddItem(Index) as I341_XMLCt_descontos;
end;

{ T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno }

procedure T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Get_IdentificacaoOperadora: WideString;
begin
  Result := ChildNodes['identificacaoOperadora'].Text;
end;

procedure T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Set_IdentificacaoOperadora(Value: WideString);
begin
  ChildNodes['identificacaoOperadora'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Get_ProtocoloSolicitacaoDemonstrativo: WideString;
begin
  Result := ChildNodes['protocoloSolicitacaoDemonstrativo'].Text;
end;

procedure T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Set_ProtocoloSolicitacaoDemonstrativo(Value: WideString);
begin
  ChildNodes['protocoloSolicitacaoDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Get_TipoDemonstrativo: WideString;
begin
  Result := ChildNodes['tipoDemonstrativo'].Text;
end;

procedure T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Set_TipoDemonstrativo(Value: WideString);
begin
  ChildNodes['tipoDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Get_DataSituacaoDemonstrativo: WideString;
begin
  Result := ChildNodes['dataSituacaoDemonstrativo'].Text;
end;

procedure T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Set_DataSituacaoDemonstrativo(Value: WideString);
begin
  ChildNodes['dataSituacaoDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Get_SituacaoDemonstrativo: WideString;
begin
  Result := ChildNodes['situacaoDemonstrativo'].Text;
end;

procedure T341_XMLCt_demonstrativoRetorno_situacaoDemonstrativoRetorno.Set_SituacaoDemonstrativo(Value: WideString);
begin
  ChildNodes['situacaoDemonstrativo'].NodeValue := Value;
end;

{ T341_XMLCt_situacaoProtocolo }

procedure T341_XMLCt_situacaoProtocolo.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('situacaoDoProtocolo', T341_XMLCt_protocoloStatus);
  RegisterChildNode('situacaoProtocoloAnexo', T341_XMLCt_protocoloAnexoStatus);
  inherited;
end;

function T341_XMLCt_situacaoProtocolo.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_situacaoProtocolo.Get_SituacaoDoProtocolo: I341_XMLCt_protocoloStatus;
begin
  Result := ChildNodes['situacaoDoProtocolo'] as I341_XMLCt_protocoloStatus;
end;

function T341_XMLCt_situacaoProtocolo.Get_SituacaoProtocoloAnexo: I341_XMLCt_protocoloAnexoStatus;
begin
  Result := ChildNodes['situacaoProtocoloAnexo'] as I341_XMLCt_protocoloAnexoStatus;
end;

{ T341_XMLCt_protocoloStatus }

procedure T341_XMLCt_protocoloStatus.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('lote', T341_XMLCt_protocoloStatus_lote);
  inherited;
end;

function T341_XMLCt_protocoloStatus.Get_IdentificacaoOperadora: WideString;
begin
  Result := ChildNodes['identificacaoOperadora'].Text;
end;

procedure T341_XMLCt_protocoloStatus.Set_IdentificacaoOperadora(Value: WideString);
begin
  ChildNodes['identificacaoOperadora'].NodeValue := Value;
end;

function T341_XMLCt_protocoloStatus.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_protocoloStatus.Get_Lote: I341_XMLCt_protocoloStatus_lote;
begin
  Result := ChildNodes['lote'] as I341_XMLCt_protocoloStatus_lote;
end;

{ T341_XMLCt_protocoloStatus_lote }

procedure T341_XMLCt_protocoloStatus_lote.AfterConstruction;
begin
  RegisterChildNode('detalheLote', T341_XMLCt_loteStatus);
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  inherited;
end;

function T341_XMLCt_protocoloStatus_lote.Get_DetalheLote: I341_XMLCt_loteStatus;
begin
  Result := ChildNodes['detalheLote'] as I341_XMLCt_loteStatus;
end;

function T341_XMLCt_protocoloStatus_lote.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCt_loteStatus }

procedure T341_XMLCt_loteStatus.AfterConstruction;
begin
  RegisterChildNode('valorTotalLote', T341_XMLCt_valorTotal);
  RegisterChildNode('guiasTISS', T341_XMLCt_loteStatus_guiasTISS);
  inherited;
end;

function T341_XMLCt_loteStatus.Get_StatusProtocolo: WideString;
begin
  Result := ChildNodes['statusProtocolo'].Text;
end;

procedure T341_XMLCt_loteStatus.Set_StatusProtocolo(Value: WideString);
begin
  ChildNodes['statusProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_loteStatus.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_loteStatus.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_loteStatus.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_loteStatus.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_loteStatus.Get_DataEnvioLote: WideString;
begin
  Result := ChildNodes['dataEnvioLote'].Text;
end;

procedure T341_XMLCt_loteStatus.Set_DataEnvioLote(Value: WideString);
begin
  ChildNodes['dataEnvioLote'].NodeValue := Value;
end;

function T341_XMLCt_loteStatus.Get_ValorTotalLote: I341_XMLCt_valorTotal;
begin
  Result := ChildNodes['valorTotalLote'] as I341_XMLCt_valorTotal;
end;

function T341_XMLCt_loteStatus.Get_GuiasTISS: I341_XMLCt_loteStatus_guiasTISS;
begin
  Result := ChildNodes['guiasTISS'] as I341_XMLCt_loteStatus_guiasTISS;
end;

{ T341_XMLCt_loteStatus_guiasTISS }

procedure T341_XMLCt_loteStatus_guiasTISS.AfterConstruction;
begin
  RegisterChildNode('guiasMedicas', T341_XMLCt_loteStatus_guiasTISS_guiasMedicas);
  RegisterChildNode('guiasOdonto', T341_XMLCt_loteStatus_guiasTISS_guiasOdonto);
  FGuiasMedicas := CreateCollection(T341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341, I341_XMLCt_loteStatus_guiasTISS_guiasMedicas, 'guiasMedicas') as I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341;
  FGuiasOdonto := CreateCollection(T341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341, I341_XMLCt_loteStatus_guiasTISS_guiasOdonto, 'guiasOdonto') as I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341;
  inherited;
end;

function T341_XMLCt_loteStatus_guiasTISS.Get_GuiasMedicas: I341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341;
begin
  Result := FGuiasMedicas;
end;

function T341_XMLCt_loteStatus_guiasTISS.Get_GuiasOdonto: I341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341;
begin
  Result := FGuiasOdonto;
end;

{ T341_XMLCt_loteStatus_guiasTISS_guiasMedicas }

procedure T341_XMLCt_loteStatus_guiasTISS_guiasMedicas.AfterConstruction;
begin
  RegisterChildNode('guias', T341_XMLCt_guiaDados);
  inherited;
end;

function T341_XMLCt_loteStatus_guiasTISS_guiasMedicas.Get_Guias: I341_XMLCt_guiaDados;
begin
  Result := ChildNodes['guias'] as I341_XMLCt_guiaDados;
end;

{ T341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341 }

function T341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341.Add: I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
begin
  Result := AddItem(-1) as I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
end;

function T341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341.Insert(const Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
begin
  Result := AddItem(Index) as I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
end;

function T341_XMLCt_loteStatus_guiasTISS_guiasMedicasList341.Get_Item(Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
begin
  Result := List[Index] as I341_XMLCt_loteStatus_guiasTISS_guiasMedicas;
end;

{ T341_XMLCt_loteStatus_guiasTISS_guiasOdonto }

procedure T341_XMLCt_loteStatus_guiasTISS_guiasOdonto.AfterConstruction;
begin
  RegisterChildNode('guias', T341_XMLCt_guiaDadosOdonto);
  inherited;
end;

function T341_XMLCt_loteStatus_guiasTISS_guiasOdonto.Get_Guias: I341_XMLCt_guiaDadosOdonto;
begin
  Result := ChildNodes['guias'] as I341_XMLCt_guiaDadosOdonto;
end;

{ T341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341 }

function T341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341.Add: I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
begin
  Result := AddItem(-1) as I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
end;

function T341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341.Insert(const Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
begin
  Result := AddItem(Index) as I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
end;

function T341_XMLCt_loteStatus_guiasTISS_guiasOdontoList341.Get_Item(Index: Integer): I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
begin
  Result := List[Index] as I341_XMLCt_loteStatus_guiasTISS_guiasOdonto;
end;

{ T341_XMLCt_protocoloAnexoStatus }

procedure T341_XMLCt_protocoloAnexoStatus.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('loteAnexo', T341_XMLCt_protocoloAnexoStatus_loteAnexo);
  inherited;
end;

function T341_XMLCt_protocoloAnexoStatus.Get_IdentificacaoOperadora: WideString;
begin
  Result := ChildNodes['identificacaoOperadora'].Text;
end;

procedure T341_XMLCt_protocoloAnexoStatus.Set_IdentificacaoOperadora(Value: WideString);
begin
  ChildNodes['identificacaoOperadora'].NodeValue := Value;
end;

function T341_XMLCt_protocoloAnexoStatus.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_protocoloAnexoStatus.Get_LoteAnexo: I341_XMLCt_protocoloAnexoStatus_loteAnexo;
begin
  Result := ChildNodes['loteAnexo'] as I341_XMLCt_protocoloAnexoStatus_loteAnexo;
end;

{ T341_XMLCt_protocoloAnexoStatus_loteAnexo }

procedure T341_XMLCt_protocoloAnexoStatus_loteAnexo.AfterConstruction;
begin
  RegisterChildNode('detalheLoteAnexo', T341_XMLCt_loteAnexoStatus);
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  inherited;
end;

function T341_XMLCt_protocoloAnexoStatus_loteAnexo.Get_DetalheLoteAnexo: I341_XMLCt_loteAnexoStatus;
begin
  Result := ChildNodes['detalheLoteAnexo'] as I341_XMLCt_loteAnexoStatus;
end;

function T341_XMLCt_protocoloAnexoStatus_loteAnexo.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCt_loteAnexoStatus }

procedure T341_XMLCt_loteAnexoStatus.AfterConstruction;
begin
  RegisterChildNode('anexosClinicos', T341_XMLCt_loteAnexoStatus_anexosClinicos);
  inherited;
end;

function T341_XMLCt_loteAnexoStatus.Get_StatusProtocolo: WideString;
begin
  Result := ChildNodes['statusProtocolo'].Text;
end;

procedure T341_XMLCt_loteAnexoStatus.Set_StatusProtocolo(Value: WideString);
begin
  ChildNodes['statusProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_loteAnexoStatus.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_loteAnexoStatus.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_loteAnexoStatus.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_loteAnexoStatus.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_loteAnexoStatus.Get_DataEnvioLote: WideString;
begin
  Result := ChildNodes['dataEnvioLote'].Text;
end;

procedure T341_XMLCt_loteAnexoStatus.Set_DataEnvioLote(Value: WideString);
begin
  ChildNodes['dataEnvioLote'].NodeValue := Value;
end;

function T341_XMLCt_loteAnexoStatus.Get_AnexosClinicos: I341_XMLCt_loteAnexoStatus_anexosClinicos;
begin
  Result := ChildNodes['anexosClinicos'] as I341_XMLCt_loteAnexoStatus_anexosClinicos;
end;

{ T341_XMLCt_loteAnexoStatus_anexosClinicos }

procedure T341_XMLCt_loteAnexoStatus_anexosClinicos.AfterConstruction;
begin
  RegisterChildNode('anexoOPME', T341_XMLCtm_autorizacaoOPME);
  RegisterChildNode('anexoQuimio', T341_XMLCtm_autorizacaoQuimio);
  RegisterChildNode('anexoRadio', T341_XMLCtm_autorizacaoRadio);
  inherited;
end;

function T341_XMLCt_loteAnexoStatus_anexosClinicos.Get_AnexoOPME: I341_XMLCtm_autorizacaoOPME;
begin
  Result := ChildNodes['anexoOPME'] as I341_XMLCtm_autorizacaoOPME;
end;

function T341_XMLCt_loteAnexoStatus_anexosClinicos.Get_AnexoQuimio: I341_XMLCtm_autorizacaoQuimio;
begin
  Result := ChildNodes['anexoQuimio'] as I341_XMLCtm_autorizacaoQuimio;
end;

function T341_XMLCt_loteAnexoStatus_anexosClinicos.Get_AnexoRadio: I341_XMLCtm_autorizacaoRadio;
begin
  Result := ChildNodes['anexoRadio'] as I341_XMLCtm_autorizacaoRadio;
end;

{ T341_XMLCt_situacaoAutorizacao }

procedure T341_XMLCt_situacaoAutorizacao.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('autorizacaoInternacao', T341_XMLCtm_autorizacaoInternacao);
  RegisterChildNode('autorizacaoServico', T341_XMLCtm_autorizacaoServico);
  RegisterChildNode('autorizacaoProrrogacao', T341_XMLCtm_autorizacaoProrrogacao);
  RegisterChildNode('autorizacaoServicoOdonto', T341_XMLCto_autorizacaoServico);
  inherited;
end;

function T341_XMLCt_situacaoAutorizacao.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_situacaoAutorizacao.Get_AutorizacaoInternacao: I341_XMLCtm_autorizacaoInternacao;
begin
  Result := ChildNodes['autorizacaoInternacao'] as I341_XMLCtm_autorizacaoInternacao;
end;

function T341_XMLCt_situacaoAutorizacao.Get_AutorizacaoServico: I341_XMLCtm_autorizacaoServico;
begin
  Result := ChildNodes['autorizacaoServico'] as I341_XMLCtm_autorizacaoServico;
end;

function T341_XMLCt_situacaoAutorizacao.Get_AutorizacaoProrrogacao: I341_XMLCtm_autorizacaoProrrogacao;
begin
  Result := ChildNodes['autorizacaoProrrogacao'] as I341_XMLCtm_autorizacaoProrrogacao;
end;

function T341_XMLCt_situacaoAutorizacao.Get_AutorizacaoServicoOdonto: I341_XMLCto_autorizacaoServico;
begin
  Result := ChildNodes['autorizacaoServicoOdonto'] as I341_XMLCto_autorizacaoServico;
end;

{ T341_XMLCtm_autorizacaoInternacao }

procedure T341_XMLCtm_autorizacaoInternacao.AfterConstruction;
begin
  RegisterChildNode('autorizacaoDosServicos', T341_XMLCtm_autorizacaoServico);
  inherited;
end;

function T341_XMLCtm_autorizacaoInternacao.Get_AutorizacaoDosServicos: I341_XMLCtm_autorizacaoServico;
begin
  Result := ChildNodes['autorizacaoDosServicos'] as I341_XMLCtm_autorizacaoServico;
end;

function T341_XMLCtm_autorizacaoInternacao.Get_DataProvavelAdmissao: WideString;
begin
  Result := ChildNodes['dataProvavelAdmissao'].Text;
end;

procedure T341_XMLCtm_autorizacaoInternacao.Set_DataProvavelAdmissao(Value: WideString);
begin
  ChildNodes['dataProvavelAdmissao'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoInternacao.Get_QtdDiariasAutorizadas: Integer;
begin
  Result := ChildNodes['qtdDiariasAutorizadas'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoInternacao.Set_QtdDiariasAutorizadas(Value: Integer);
begin
  ChildNodes['qtdDiariasAutorizadas'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoInternacao.Get_TipoAcomodacaoAutorizada: WideString;
begin
  Result := ChildNodes['tipoAcomodacaoAutorizada'].Text;
end;

procedure T341_XMLCtm_autorizacaoInternacao.Set_TipoAcomodacaoAutorizada(Value: WideString);
begin
  ChildNodes['tipoAcomodacaoAutorizada'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoServico }

procedure T341_XMLCtm_autorizacaoServico.AfterConstruction;
begin
  RegisterChildNode('dadosAutorizacao', T341_XMLCt_autorizacaoDados);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('prestadorAutorizado', T341_XMLCtm_autorizacaoServico_prestadorAutorizado);
  RegisterChildNode('motivosNegativa', T341_XMLCtm_autorizacaoServico_motivosNegativa);
  RegisterChildNode('servicosAutorizados', T341_XMLCtm_autorizacaoServico_servicosAutorizados);
  RegisterChildNode('autorizacaoQuimio', T341_XMLCtm_autorizacaoQuimio);
  RegisterChildNode('autorizacaoRadio', T341_XMLCtm_autorizacaoRadio);
  inherited;
end;

function T341_XMLCtm_autorizacaoServico.Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
begin
  Result := ChildNodes['dadosAutorizacao'] as I341_XMLCt_autorizacaoDados;
end;

function T341_XMLCtm_autorizacaoServico.Get_TipoEtapaAutorizacao: WideString;
begin
  Result := ChildNodes['tipoEtapaAutorizacao'].Text;
end;

procedure T341_XMLCtm_autorizacaoServico.Set_TipoEtapaAutorizacao(Value: WideString);
begin
  ChildNodes['tipoEtapaAutorizacao'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoServico.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_autorizacaoServico.Get_PrestadorAutorizado: I341_XMLCtm_autorizacaoServico_prestadorAutorizado;
begin
  Result := ChildNodes['prestadorAutorizado'] as I341_XMLCtm_autorizacaoServico_prestadorAutorizado;
end;

function T341_XMLCtm_autorizacaoServico.Get_StatusSolicitacao: WideString;
begin
  Result := ChildNodes['statusSolicitacao'].Text;
end;

procedure T341_XMLCtm_autorizacaoServico.Set_StatusSolicitacao(Value: WideString);
begin
  ChildNodes['statusSolicitacao'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoServico.Get_MotivosNegativa: I341_XMLCtm_autorizacaoServico_motivosNegativa;
begin
  Result := ChildNodes['motivosNegativa'] as I341_XMLCtm_autorizacaoServico_motivosNegativa;
end;

function T341_XMLCtm_autorizacaoServico.Get_ServicosAutorizados: I341_XMLCtm_autorizacaoServico_servicosAutorizados;
begin
  Result := ChildNodes['servicosAutorizados'] as I341_XMLCtm_autorizacaoServico_servicosAutorizados;
end;

function T341_XMLCtm_autorizacaoServico.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_autorizacaoServico.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoServico.Get_AutorizacaoQuimio: I341_XMLCtm_autorizacaoQuimio;
begin
  Result := ChildNodes['autorizacaoQuimio'] as I341_XMLCtm_autorizacaoQuimio;
end;

function T341_XMLCtm_autorizacaoServico.Get_AutorizacaoRadio: I341_XMLCtm_autorizacaoRadio;
begin
  Result := ChildNodes['autorizacaoRadio'] as I341_XMLCtm_autorizacaoRadio;
end;

{ T341_XMLCtm_autorizacaoServico_prestadorAutorizado }

procedure T341_XMLCtm_autorizacaoServico_prestadorAutorizado.AfterConstruction;
begin
  RegisterChildNode('dadosContratado', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCtm_autorizacaoServico_prestadorAutorizado.Get_DadosContratado: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosContratado'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_autorizacaoServico_prestadorAutorizado.Get_CnesContratado: WideString;
begin
  Result := ChildNodes['cnesContratado'].Text;
end;

procedure T341_XMLCtm_autorizacaoServico_prestadorAutorizado.Set_CnesContratado(Value: WideString);
begin
  ChildNodes['cnesContratado'].NodeValue := Value;
end;

{ T341_XMLCtm_autorizacaoServico_motivosNegativa }

procedure T341_XMLCtm_autorizacaoServico_motivosNegativa.AfterConstruction;
begin
  RegisterChildNode('motivoNegativa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoNegativa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCtm_autorizacaoServico_motivosNegativa.Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCtm_autorizacaoServico_motivosNegativa.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCtm_autorizacaoServico_motivosNegativa.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCtm_autorizacaoServico_servicosAutorizados }

procedure T341_XMLCtm_autorizacaoServico_servicosAutorizados.AfterConstruction;
begin
  RegisterChildNode('servicoAutorizado', T341_XMLCt_procedimentoAutorizado);
  ItemTag := 'servicoAutorizado';
  ItemInterface := I341_XMLCt_procedimentoAutorizado;
  inherited;
end;

function T341_XMLCtm_autorizacaoServico_servicosAutorizados.Get_ServicoAutorizado(Index: Integer): I341_XMLCt_procedimentoAutorizado;
begin
  Result := List[Index] as I341_XMLCt_procedimentoAutorizado;
end;

function T341_XMLCtm_autorizacaoServico_servicosAutorizados.Add: I341_XMLCt_procedimentoAutorizado;
begin
  Result := AddItem(-1) as I341_XMLCt_procedimentoAutorizado;
end;

function T341_XMLCtm_autorizacaoServico_servicosAutorizados.Insert(const Index: Integer): I341_XMLCt_procedimentoAutorizado;
begin
  Result := AddItem(Index) as I341_XMLCt_procedimentoAutorizado;
end;

{ T341_XMLCtm_autorizacaoProrrogacao }

procedure T341_XMLCtm_autorizacaoProrrogacao.AfterConstruction;
begin
  RegisterChildNode('autorizacaoDosServicos', T341_XMLCtm_autorizacaoServico);
  inherited;
end;

function T341_XMLCtm_autorizacaoProrrogacao.Get_AutorizacaoDosServicos: I341_XMLCtm_autorizacaoServico;
begin
  Result := ChildNodes['autorizacaoDosServicos'] as I341_XMLCtm_autorizacaoServico;
end;

function T341_XMLCtm_autorizacaoProrrogacao.Get_DiariasAutorizadas: Integer;
begin
  Result := ChildNodes['diariasAutorizadas'].NodeValue;
end;

procedure T341_XMLCtm_autorizacaoProrrogacao.Set_DiariasAutorizadas(Value: Integer);
begin
  ChildNodes['diariasAutorizadas'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoProrrogacao.Get_AcomodacaoAutorizada: WideString;
begin
  Result := ChildNodes['acomodacaoAutorizada'].Text;
end;

procedure T341_XMLCtm_autorizacaoProrrogacao.Set_AcomodacaoAutorizada(Value: WideString);
begin
  ChildNodes['acomodacaoAutorizada'].NodeValue := Value;
end;

function T341_XMLCtm_autorizacaoProrrogacao.Get_JustificativaOperadora: WideString;
begin
  Result := ChildNodes['justificativaOperadora'].Text;
end;

procedure T341_XMLCtm_autorizacaoProrrogacao.Set_JustificativaOperadora(Value: WideString);
begin
  ChildNodes['justificativaOperadora'].NodeValue := Value;
end;

{ T341_XMLCto_autorizacaoServico }

procedure T341_XMLCto_autorizacaoServico.AfterConstruction;
begin
  RegisterChildNode('dadosAutorizacao', T341_XMLCt_autorizacaoDados);
  RegisterChildNode('prestadorAutorizado', T341_XMLCt_contratadoDados);
  RegisterChildNode('procedimentosAutorizados', T341_XMLCto_autorizacaoServico_procedimentosAutorizados);
  RegisterChildNode('motivosNegativa', T341_XMLCto_autorizacaoServico_motivosNegativa);
  FProcedimentosAutorizados := CreateCollection(T341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341, I341_XMLCto_autorizacaoServico_procedimentosAutorizados, 'procedimentosAutorizados') as I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341;
  inherited;
end;

function T341_XMLCto_autorizacaoServico.Get_DadosAutorizacao: I341_XMLCt_autorizacaoDados;
begin
  Result := ChildNodes['dadosAutorizacao'] as I341_XMLCt_autorizacaoDados;
end;

function T341_XMLCto_autorizacaoServico.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCto_autorizacaoServico.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCto_autorizacaoServico.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico.Get_NumeroCNS: WideString;
begin
  Result := ChildNodes['numeroCNS'].Text;
end;

procedure T341_XMLCto_autorizacaoServico.Set_NumeroCNS(Value: WideString);
begin
  ChildNodes['numeroCNS'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico.Get_TipoIdent: WideString;
begin
  Result := ChildNodes['tipoIdent'].Text;
end;

procedure T341_XMLCto_autorizacaoServico.Set_TipoIdent(Value: WideString);
begin
  ChildNodes['tipoIdent'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico.Get_IdentificadorBeneficiario: WideString;
begin
  Result := ChildNodes['identificadorBeneficiario'].Text;
end;

procedure T341_XMLCto_autorizacaoServico.Set_IdentificadorBeneficiario(Value: WideString);
begin
  ChildNodes['identificadorBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico.Get_TemplateBiometrico: WideString;
begin
  Result := ChildNodes['templateBiometrico'].Text;
end;

procedure T341_XMLCto_autorizacaoServico.Set_TemplateBiometrico(Value: WideString);
begin
  ChildNodes['templateBiometrico'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico.Get_StatusSolicitacao: WideString;
begin
  Result := ChildNodes['statusSolicitacao'].Text;
end;

procedure T341_XMLCto_autorizacaoServico.Set_StatusSolicitacao(Value: WideString);
begin
  ChildNodes['statusSolicitacao'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico.Get_PrestadorAutorizado: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['prestadorAutorizado'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCto_autorizacaoServico.Get_ProcedimentosAutorizados: I341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341;
begin
  Result := FProcedimentosAutorizados;
end;

function T341_XMLCto_autorizacaoServico.Get_MotivosNegativa: I341_XMLCto_autorizacaoServico_motivosNegativa;
begin
  Result := ChildNodes['motivosNegativa'] as I341_XMLCto_autorizacaoServico_motivosNegativa;
end;

{ T341_XMLCto_autorizacaoServico_procedimentosAutorizados }

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados.AfterConstruction;
begin
  RegisterChildNode('procSolic', T341_XMLCt_procedimentoDados);
  RegisterChildNode('denteRegiao', T341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao);
  RegisterChildNode('motivosNegativa', T341_XMLCt_motivoGlosa);
  FMotivosNegativa := CreateCollection(T341_XMLCt_motivoGlosaList341, I341_XMLCt_motivoGlosa, 'motivosNegativa') as I341_XMLCt_motivoGlosaList341;
  inherited;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_ProcSolic: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procSolic'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_DenteRegiao: I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao;
begin
  Result := ChildNodes['denteRegiao'] as I341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_DenteFace: WideString;
begin
  Result := ChildNodes['denteFace'].Text;
end;

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Set_DenteFace(Value: WideString);
begin
  ChildNodes['denteFace'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_QtdProc: Integer;
begin
  Result := ChildNodes['qtdProc'].NodeValue;
end;

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Set_QtdProc(Value: Integer);
begin
  ChildNodes['qtdProc'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_QtdUS: WideString;
begin
  Result := ChildNodes['qtdUS'].Text;
end;

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Set_QtdUS(Value: WideString);
begin
  ChildNodes['qtdUS'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_ValorProc: WideString;
begin
  Result := ChildNodes['valorProc'].Text;
end;

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Set_ValorProc(Value: WideString);
begin
  ChildNodes['valorProc'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_ValorFranquia: WideString;
begin
  Result := ChildNodes['valorFranquia'].Text;
end;

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Set_ValorFranquia(Value: WideString);
begin
  ChildNodes['valorFranquia'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_Aut: WideString;
begin
  Result := ChildNodes['aut'].Text;
end;

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Set_Aut(Value: WideString);
begin
  ChildNodes['aut'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados.Get_MotivosNegativa: I341_XMLCt_motivoGlosaList341;
begin
  Result := FMotivosNegativa;
end;

{ T341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341 }

function T341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341.Add: I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
begin
  Result := AddItem(-1) as I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341.Insert(const Index: Integer): I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
begin
  Result := AddItem(Index) as I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizadosList341.Get_Item(Index: Integer): I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
begin
  Result := List[Index] as I341_XMLCto_autorizacaoServico_procedimentosAutorizados;
end;

{ T341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao }

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao.Get_CodDente: WideString;
begin
  Result := ChildNodes['codDente'].Text;
end;

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao.Set_CodDente(Value: WideString);
begin
  ChildNodes['codDente'].NodeValue := Value;
end;

function T341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao.Get_CodRegiao: WideString;
begin
  Result := ChildNodes['codRegiao'].Text;
end;

procedure T341_XMLCto_autorizacaoServico_procedimentosAutorizados_denteRegiao.Set_CodRegiao(Value: WideString);
begin
  ChildNodes['codRegiao'].NodeValue := Value;
end;

{ T341_XMLCto_autorizacaoServico_motivosNegativa }

procedure T341_XMLCto_autorizacaoServico_motivosNegativa.AfterConstruction;
begin
  RegisterChildNode('motivoNegativa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoNegativa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCto_autorizacaoServico_motivosNegativa.Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCto_autorizacaoServico_motivosNegativa.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCto_autorizacaoServico_motivosNegativa.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLOperadoraPrestador_respostaElegibilidade }

procedure T341_XMLOperadoraPrestador_respostaElegibilidade.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('reciboElegibilidade', T341_XMLCt_elegibilidadeRecibo);
  inherited;
end;

function T341_XMLOperadoraPrestador_respostaElegibilidade.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLOperadoraPrestador_respostaElegibilidade.Get_ReciboElegibilidade: I341_XMLCt_elegibilidadeRecibo;
begin
  Result := ChildNodes['reciboElegibilidade'] as I341_XMLCt_elegibilidadeRecibo;
end;

{ T341_XMLCt_elegibilidadeRecibo }

procedure T341_XMLCt_elegibilidadeRecibo.AfterConstruction;
begin
  RegisterChildNode('motivosNegativa', T341_XMLCt_elegibilidadeRecibo_motivosNegativa);
  inherited;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_ValidadeCarteira: WideString;
begin
  Result := ChildNodes['validadeCarteira'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_ValidadeCarteira(Value: WideString);
begin
  ChildNodes['validadeCarteira'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_NumeroCNS: WideString;
begin
  Result := ChildNodes['numeroCNS'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_NumeroCNS(Value: WideString);
begin
  ChildNodes['numeroCNS'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_TipoIdent: WideString;
begin
  Result := ChildNodes['tipoIdent'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_TipoIdent(Value: WideString);
begin
  ChildNodes['tipoIdent'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_IdentificadorBeneficiario: WideString;
begin
  Result := ChildNodes['identificadorBeneficiario'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_IdentificadorBeneficiario(Value: WideString);
begin
  ChildNodes['identificadorBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_TemplateBiometrico: WideString;
begin
  Result := ChildNodes['templateBiometrico'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_TemplateBiometrico(Value: WideString);
begin
  ChildNodes['templateBiometrico'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_RespostaSolicitacao: WideString;
begin
  Result := ChildNodes['respostaSolicitacao'].Text;
end;

procedure T341_XMLCt_elegibilidadeRecibo.Set_RespostaSolicitacao(Value: WideString);
begin
  ChildNodes['respostaSolicitacao'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeRecibo.Get_MotivosNegativa: I341_XMLCt_elegibilidadeRecibo_motivosNegativa;
begin
  Result := ChildNodes['motivosNegativa'] as I341_XMLCt_elegibilidadeRecibo_motivosNegativa;
end;

{ T341_XMLCt_elegibilidadeRecibo_motivosNegativa }

procedure T341_XMLCt_elegibilidadeRecibo_motivosNegativa.AfterConstruction;
begin
  RegisterChildNode('motivoNegativa', T341_XMLCt_motivoGlosa);
  ItemTag := 'motivoNegativa';
  ItemInterface := I341_XMLCt_motivoGlosa;
  inherited;
end;

function T341_XMLCt_elegibilidadeRecibo_motivosNegativa.Get_MotivoNegativa(Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := List[Index] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_elegibilidadeRecibo_motivosNegativa.Add: I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(-1) as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_elegibilidadeRecibo_motivosNegativa.Insert(const Index: Integer): I341_XMLCt_motivoGlosa;
begin
  Result := AddItem(Index) as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCt_reciboCancelaGuia }

procedure T341_XMLCt_reciboCancelaGuia.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('reciboCancelaGuia', T341_XMLCt_guiaCancelamentoRecibo);
  inherited;
end;

function T341_XMLCt_reciboCancelaGuia.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_reciboCancelaGuia.Get_ReciboCancelaGuia: I341_XMLCt_guiaCancelamentoRecibo;
begin
  Result := ChildNodes['reciboCancelaGuia'] as I341_XMLCt_guiaCancelamentoRecibo;
end;

{ T341_XMLCt_guiaCancelamentoRecibo }

procedure T341_XMLCt_guiaCancelamentoRecibo.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('guiasCanceladas', T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas);
  inherited;
end;

function T341_XMLCt_guiaCancelamentoRecibo.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_guiaCancelamentoRecibo.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_guiaCancelamentoRecibo.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_guiaCancelamentoRecibo.Get_GuiasCanceladas: I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas;
begin
  Result := ChildNodes['guiasCanceladas'] as I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas;
end;

{ T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas }

procedure T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas.AfterConstruction;
begin
  RegisterChildNode('dadosGuia', T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia);
  ItemTag := 'dadosGuia';
  ItemInterface := I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
  inherited;
end;

function T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas.Get_DadosGuia(Index: Integer): I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
begin
  Result := List[Index] as I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
end;

function T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas.Add: I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
begin
  Result := AddItem(-1) as I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
end;

function T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas.Insert(const Index: Integer): I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
begin
  Result := AddItem(Index) as I341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia;
end;

{ T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia }

function T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia.Get_TipoGuia: WideString;
begin
  Result := ChildNodes['tipoGuia'].Text;
end;

procedure T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia.Set_TipoGuia(Value: WideString);
begin
  ChildNodes['tipoGuia'].NodeValue := Value;
end;

function T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia.Get_StatusCancelamento: WideString;
begin
  Result := ChildNodes['statusCancelamento'].Text;
end;

procedure T341_XMLCt_guiaCancelamentoRecibo_guiasCanceladas_dadosGuia.Set_StatusCancelamento(Value: WideString);
begin
  ChildNodes['statusCancelamento'].NodeValue := Value;
end;

{ T341_XMLCt_reciboComunicacao }

procedure T341_XMLCt_reciboComunicacao.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('reciboComunicacao', T341_XMLCtm_beneficiarioComunicacaoRecibo);
  inherited;
end;

function T341_XMLCt_reciboComunicacao.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_reciboComunicacao.Get_ReciboComunicacao: I341_XMLCtm_beneficiarioComunicacaoRecibo;
begin
  Result := ChildNodes['reciboComunicacao'] as I341_XMLCtm_beneficiarioComunicacaoRecibo;
end;

{ T341_XMLCtm_beneficiarioComunicacaoRecibo }

procedure T341_XMLCtm_beneficiarioComunicacaoRecibo.AfterConstruction;
begin
  RegisterChildNode('beneficiarioComunicacao', T341_XMLCtm_beneficiarioComunicacao);
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  inherited;
end;

function T341_XMLCtm_beneficiarioComunicacaoRecibo.Get_StatusComunicacao: WideString;
begin
  Result := ChildNodes['statusComunicacao'].Text;
end;

procedure T341_XMLCtm_beneficiarioComunicacaoRecibo.Set_StatusComunicacao(Value: WideString);
begin
  ChildNodes['statusComunicacao'].NodeValue := Value;
end;

function T341_XMLCtm_beneficiarioComunicacaoRecibo.Get_BeneficiarioComunicacao: I341_XMLCtm_beneficiarioComunicacao;
begin
  Result := ChildNodes['beneficiarioComunicacao'] as I341_XMLCtm_beneficiarioComunicacao;
end;

function T341_XMLCtm_beneficiarioComunicacaoRecibo.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCtm_beneficiarioComunicacao }

procedure T341_XMLCtm_beneficiarioComunicacao.AfterConstruction;
begin
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('dadosInternacao', T341_XMLCtm_beneficiarioComunicacao_dadosInternacao);
  inherited;
end;

function T341_XMLCtm_beneficiarioComunicacao.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_beneficiarioComunicacao.Get_DataEvento: WideString;
begin
  Result := ChildNodes['dataEvento'].Text;
end;

procedure T341_XMLCtm_beneficiarioComunicacao.Set_DataEvento(Value: WideString);
begin
  ChildNodes['dataEvento'].NodeValue := Value;
end;

function T341_XMLCtm_beneficiarioComunicacao.Get_TipoEvento: WideString;
begin
  Result := ChildNodes['tipoEvento'].Text;
end;

procedure T341_XMLCtm_beneficiarioComunicacao.Set_TipoEvento(Value: WideString);
begin
  ChildNodes['tipoEvento'].NodeValue := Value;
end;

function T341_XMLCtm_beneficiarioComunicacao.Get_DadosInternacao: I341_XMLCtm_beneficiarioComunicacao_dadosInternacao;
begin
  Result := ChildNodes['dadosInternacao'] as I341_XMLCtm_beneficiarioComunicacao_dadosInternacao;
end;

{ T341_XMLCtm_beneficiarioComunicacao_dadosInternacao }

function T341_XMLCtm_beneficiarioComunicacao_dadosInternacao.Get_MotivoEncerramento: WideString;
begin
  Result := ChildNodes['motivoEncerramento'].Text;
end;

procedure T341_XMLCtm_beneficiarioComunicacao_dadosInternacao.Set_MotivoEncerramento(Value: WideString);
begin
  ChildNodes['motivoEncerramento'].NodeValue := Value;
end;

function T341_XMLCtm_beneficiarioComunicacao_dadosInternacao.Get_TipoInternacao: WideString;
begin
  Result := ChildNodes['tipoInternacao'].Text;
end;

procedure T341_XMLCtm_beneficiarioComunicacao_dadosInternacao.Set_TipoInternacao(Value: WideString);
begin
  ChildNodes['tipoInternacao'].NodeValue := Value;
end;

{ T341_XMLCt_respostaGlosa }

procedure T341_XMLCt_respostaGlosa.AfterConstruction;
begin
  RegisterChildNode('reciboGlosa', T341_XMLCt_glosaRecibo);
  RegisterChildNode('reciboGlosaOdonto', T341_XMLCt_glosaReciboOdonto);
  RegisterChildNode('reciboGlosaStatus', T341_XMLCt_respostaGlosa_reciboGlosaStatus);
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  inherited;
end;

function T341_XMLCt_respostaGlosa.Get_ReciboGlosa: I341_XMLCt_glosaRecibo;
begin
  Result := ChildNodes['reciboGlosa'] as I341_XMLCt_glosaRecibo;
end;

function T341_XMLCt_respostaGlosa.Get_ReciboGlosaOdonto: I341_XMLCt_glosaReciboOdonto;
begin
  Result := ChildNodes['reciboGlosaOdonto'] as I341_XMLCt_glosaReciboOdonto;
end;

function T341_XMLCt_respostaGlosa.Get_ReciboGlosaStatus: I341_XMLCt_respostaGlosa_reciboGlosaStatus;
begin
  Result := ChildNodes['reciboGlosaStatus'] as I341_XMLCt_respostaGlosa_reciboGlosaStatus;
end;

function T341_XMLCt_respostaGlosa.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

{ T341_XMLCt_glosaRecibo }

procedure T341_XMLCt_glosaRecibo.AfterConstruction;
begin
  RegisterChildNode('dadosContratado', T341_XMLCt_glosaRecibo_dadosContratado);
  RegisterChildNode('opcaoRecurso', T341_XMLCt_glosaRecibo_opcaoRecurso);
  inherited;
end;

function T341_XMLCt_glosaRecibo.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_glosaRecibo.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo.Get_NumeroGuiaRecGlosaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaRecGlosaPrestador'].Text;
end;

procedure T341_XMLCt_glosaRecibo.Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaRecGlosaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo.Get_NumeroGuiaRecGlosaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaRecGlosaOperadora'].Text;
end;

procedure T341_XMLCt_glosaRecibo.Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaRecGlosaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo.Get_NomeOperadora: WideString;
begin
  Result := ChildNodes['nomeOperadora'].Text;
end;

procedure T341_XMLCt_glosaRecibo.Set_NomeOperadora(Value: WideString);
begin
  ChildNodes['nomeOperadora'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo.Get_ObjetoRecurso: WideString;
begin
  Result := ChildNodes['objetoRecurso'].Text;
end;

procedure T341_XMLCt_glosaRecibo.Set_ObjetoRecurso(Value: WideString);
begin
  ChildNodes['objetoRecurso'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo.Get_DadosContratado: I341_XMLCt_glosaRecibo_dadosContratado;
begin
  Result := ChildNodes['dadosContratado'] as I341_XMLCt_glosaRecibo_dadosContratado;
end;

function T341_XMLCt_glosaRecibo.Get_NumeroLote: Integer;
begin
  Result := ChildNodes['numeroLote'].NodeValue;
end;

procedure T341_XMLCt_glosaRecibo.Set_NumeroLote(Value: Integer);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo.Get_NumeroProtocolo: Integer;
begin
  Result := ChildNodes['numeroProtocolo'].NodeValue;
end;

procedure T341_XMLCt_glosaRecibo.Set_NumeroProtocolo(Value: Integer);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo.Get_OpcaoRecurso: I341_XMLCt_glosaRecibo_opcaoRecurso;
begin
  Result := ChildNodes['opcaoRecurso'] as I341_XMLCt_glosaRecibo_opcaoRecurso;
end;

function T341_XMLCt_glosaRecibo.Get_DataRecurso: WideString;
begin
  Result := ChildNodes['dataRecurso'].Text;
end;

procedure T341_XMLCt_glosaRecibo.Set_DataRecurso(Value: WideString);
begin
  ChildNodes['dataRecurso'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo.Get_ValorTotalRecursado: WideString;
begin
  Result := ChildNodes['valorTotalRecursado'].Text;
end;

procedure T341_XMLCt_glosaRecibo.Set_ValorTotalRecursado(Value: WideString);
begin
  ChildNodes['valorTotalRecursado'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo.Get_ValorTotalAcatado: WideString;
begin
  Result := ChildNodes['valorTotalAcatado'].Text;
end;

procedure T341_XMLCt_glosaRecibo.Set_ValorTotalAcatado(Value: WideString);
begin
  ChildNodes['valorTotalAcatado'].NodeValue := Value;
end;

{ T341_XMLCt_glosaRecibo_dadosContratado }

function T341_XMLCt_glosaRecibo_dadosContratado.Get_CodigoPrestador: WideString;
begin
  Result := ChildNodes['codigoPrestador'].Text;
end;

procedure T341_XMLCt_glosaRecibo_dadosContratado.Set_CodigoPrestador(Value: WideString);
begin
  ChildNodes['codigoPrestador'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo_dadosContratado.Get_NomePrestador: WideString;
begin
  Result := ChildNodes['nomePrestador'].Text;
end;

procedure T341_XMLCt_glosaRecibo_dadosContratado.Set_NomePrestador(Value: WideString);
begin
  ChildNodes['nomePrestador'].NodeValue := Value;
end;

{ T341_XMLCt_glosaRecibo_opcaoRecurso }

procedure T341_XMLCt_glosaRecibo_opcaoRecurso.AfterConstruction;
begin
  RegisterChildNode('recursoProtocolo', T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo);
  RegisterChildNode('recursoGuia', T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia);
  FRecursoGuia := CreateCollection(T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341, I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia, 'recursoGuia') as I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341;
  inherited;
end;

function T341_XMLCt_glosaRecibo_opcaoRecurso.Get_RecursoProtocolo: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo;
begin
  Result := ChildNodes['recursoProtocolo'] as I341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo;
end;

function T341_XMLCt_glosaRecibo_opcaoRecurso.Get_RecursoGuia: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341;
begin
  Result := FRecursoGuia;
end;

{ T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo }

function T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo.Get_CodigoGlosaProtocolo: WideString;
begin
  Result := ChildNodes['codigoGlosaProtocolo'].Text;
end;

procedure T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo.Set_CodigoGlosaProtocolo(Value: WideString);
begin
  ChildNodes['codigoGlosaProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo.Get_JustificativaProtocolo: WideString;
begin
  Result := ChildNodes['justificativaProtocolo'].Text;
end;

procedure T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo.Set_JustificativaProtocolo(Value: WideString);
begin
  ChildNodes['justificativaProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo.Get_RecursoAcatado: WideString;
begin
  Result := ChildNodes['recursoAcatado'].Text;
end;

procedure T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo.Set_RecursoAcatado(Value: WideString);
begin
  ChildNodes['recursoAcatado'].NodeValue := Value;
end;

function T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo.Get_JustificativaOPSnaoAcatadoProt: WideString;
begin
  Result := ChildNodes['justificativaOPSnaoAcatadoProt'].Text;
end;

procedure T341_XMLCt_glosaRecibo_opcaoRecurso_recursoProtocolo.Set_JustificativaOPSnaoAcatadoProt(Value: WideString);
begin
  ChildNodes['justificativaOPSnaoAcatadoProt'].NodeValue := Value;
end;

{ T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia }

procedure T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia.AfterConstruction;
begin
  RegisterChildNode('respostaGuia', T341_XMLCt_respostaGlosaGuiaMedica);
  RegisterChildNode('respostaGuiaItens', T341_XMLCt_respostaGlosaItemMedico);
  inherited;
end;

function T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia.Get_RespostaGuia: I341_XMLCt_respostaGlosaGuiaMedica;
begin
  Result := ChildNodes['respostaGuia'] as I341_XMLCt_respostaGlosaGuiaMedica;
end;

function T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia.Get_RespostaGuiaItens: I341_XMLCt_respostaGlosaItemMedico;
begin
  Result := ChildNodes['respostaGuiaItens'] as I341_XMLCt_respostaGlosaItemMedico;
end;

{ T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341 }

function T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341.Add: I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
begin
  Result := AddItem(-1) as I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
end;

function T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341.Insert(const Index: Integer): I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
begin
  Result := AddItem(Index) as I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
end;

function T341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuiaList341.Get_Item(Index: Integer): I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
begin
  Result := List[Index] as I341_XMLCt_glosaRecibo_opcaoRecurso_recursoGuia;
end;

{ T341_XMLCt_respostaGlosaGuiaMedica }

function T341_XMLCt_respostaGlosaGuiaMedica.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_respostaGlosaGuiaMedica.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaGuiaMedica.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_respostaGlosaGuiaMedica.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaGuiaMedica.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_respostaGlosaGuiaMedica.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaGuiaMedica.Get_CodGlosa: WideString;
begin
  Result := ChildNodes['codGlosa'].Text;
end;

procedure T341_XMLCt_respostaGlosaGuiaMedica.Set_CodGlosa(Value: WideString);
begin
  ChildNodes['codGlosa'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaGuiaMedica.Get_JustificativaPrestador: WideString;
begin
  Result := ChildNodes['justificativaPrestador'].Text;
end;

procedure T341_XMLCt_respostaGlosaGuiaMedica.Set_JustificativaPrestador(Value: WideString);
begin
  ChildNodes['justificativaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaGuiaMedica.Get_RecursoGuiaAcatado: WideString;
begin
  Result := ChildNodes['recursoGuiaAcatado'].Text;
end;

procedure T341_XMLCt_respostaGlosaGuiaMedica.Set_RecursoGuiaAcatado(Value: WideString);
begin
  ChildNodes['recursoGuiaAcatado'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaGuiaMedica.Get_JustificativaOPSnaoAcatadoGuia: WideString;
begin
  Result := ChildNodes['justificativaOPSnaoAcatadoGuia'].Text;
end;

procedure T341_XMLCt_respostaGlosaGuiaMedica.Set_JustificativaOPSnaoAcatadoGuia(Value: WideString);
begin
  ChildNodes['justificativaOPSnaoAcatadoGuia'].NodeValue := Value;
end;

{ T341_XMLCt_respostaGlosaItemMedico }

procedure T341_XMLCt_respostaGlosaItemMedico.AfterConstruction;
begin
  RegisterChildNode('procRecurso', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_DataRealizacao: WideString;
begin
  Result := ChildNodes['dataRealizacao'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_DataRealizacao(Value: WideString);
begin
  ChildNodes['dataRealizacao'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_DataFim: WideString;
begin
  Result := ChildNodes['dataFim'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_DataFim(Value: WideString);
begin
  ChildNodes['dataFim'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_ProcRecurso: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procRecurso'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_CodGlosa: WideString;
begin
  Result := ChildNodes['codGlosa'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_CodGlosa(Value: WideString);
begin
  ChildNodes['codGlosa'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_ValorRecursado: WideString;
begin
  Result := ChildNodes['valorRecursado'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_ValorRecursado(Value: WideString);
begin
  ChildNodes['valorRecursado'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_JustificativaPrestador: WideString;
begin
  Result := ChildNodes['justificativaPrestador'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_JustificativaPrestador(Value: WideString);
begin
  ChildNodes['justificativaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_ValorAcatadado: WideString;
begin
  Result := ChildNodes['valorAcatadado'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_ValorAcatadado(Value: WideString);
begin
  ChildNodes['valorAcatadado'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosaItemMedico.Get_JustificativaOperadora: WideString;
begin
  Result := ChildNodes['justificativaOperadora'].Text;
end;

procedure T341_XMLCt_respostaGlosaItemMedico.Set_JustificativaOperadora(Value: WideString);
begin
  ChildNodes['justificativaOperadora'].NodeValue := Value;
end;

{ T341_XMLCt_glosaReciboOdonto }

procedure T341_XMLCt_glosaReciboOdonto.AfterConstruction;
begin
  RegisterChildNode('dadosContratado', T341_XMLCt_glosaReciboOdonto_dadosContratado);
  RegisterChildNode('opcaoRecurso', T341_XMLCt_glosaReciboOdonto_opcaoRecurso);
  inherited;
end;

function T341_XMLCt_glosaReciboOdonto.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto.Get_NumeroGuiaRecGlosaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaRecGlosaPrestador'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaRecGlosaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto.Get_NomeOperadora: WideString;
begin
  Result := ChildNodes['nomeOperadora'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_NomeOperadora(Value: WideString);
begin
  ChildNodes['nomeOperadora'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto.Get_NumeroGuiaRecGlosaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaRecGlosaOperadora'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaRecGlosaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto.Get_ObjetoRecurso: WideString;
begin
  Result := ChildNodes['objetoRecurso'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_ObjetoRecurso(Value: WideString);
begin
  ChildNodes['objetoRecurso'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto.Get_DadosContratado: I341_XMLCt_glosaReciboOdonto_dadosContratado;
begin
  Result := ChildNodes['dadosContratado'] as I341_XMLCt_glosaReciboOdonto_dadosContratado;
end;

function T341_XMLCt_glosaReciboOdonto.Get_NumeroLote: Integer;
begin
  Result := ChildNodes['numeroLote'].NodeValue;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_NumeroLote(Value: Integer);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto.Get_NumeroProtocolo: Integer;
begin
  Result := ChildNodes['numeroProtocolo'].NodeValue;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_NumeroProtocolo(Value: Integer);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto.Get_OpcaoRecurso: I341_XMLCt_glosaReciboOdonto_opcaoRecurso;
begin
  Result := ChildNodes['opcaoRecurso'] as I341_XMLCt_glosaReciboOdonto_opcaoRecurso;
end;

function T341_XMLCt_glosaReciboOdonto.Get_DataRecurso: WideString;
begin
  Result := ChildNodes['dataRecurso'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_DataRecurso(Value: WideString);
begin
  ChildNodes['dataRecurso'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto.Get_ValorTotalRecursado: WideString;
begin
  Result := ChildNodes['valorTotalRecursado'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_ValorTotalRecursado(Value: WideString);
begin
  ChildNodes['valorTotalRecursado'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto.Get_ValorTotalAcatado: WideString;
begin
  Result := ChildNodes['valorTotalAcatado'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto.Set_ValorTotalAcatado(Value: WideString);
begin
  ChildNodes['valorTotalAcatado'].NodeValue := Value;
end;

{ T341_XMLCt_glosaReciboOdonto_dadosContratado }

function T341_XMLCt_glosaReciboOdonto_dadosContratado.Get_CodigoPrestador: WideString;
begin
  Result := ChildNodes['codigoPrestador'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto_dadosContratado.Set_CodigoPrestador(Value: WideString);
begin
  ChildNodes['codigoPrestador'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto_dadosContratado.Get_NomePrestador: WideString;
begin
  Result := ChildNodes['nomePrestador'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto_dadosContratado.Set_NomePrestador(Value: WideString);
begin
  ChildNodes['nomePrestador'].NodeValue := Value;
end;

{ T341_XMLCt_glosaReciboOdonto_opcaoRecurso }

procedure T341_XMLCt_glosaReciboOdonto_opcaoRecurso.AfterConstruction;
begin
  RegisterChildNode('recursoProtocolo', T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo);
  RegisterChildNode('recursoGuia', T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia);
  FRecursoGuia := CreateCollection(T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341, I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia, 'recursoGuia') as I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341;
  inherited;
end;

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso.Get_RecursoProtocolo: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo;
begin
  Result := ChildNodes['recursoProtocolo'] as I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo;
end;

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso.Get_RecursoGuia: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341;
begin
  Result := FRecursoGuia;
end;

{ T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo }

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo.Get_CodigoGlosaProtocolo: WideString;
begin
  Result := ChildNodes['codigoGlosaProtocolo'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo.Set_CodigoGlosaProtocolo(Value: WideString);
begin
  ChildNodes['codigoGlosaProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo.Get_JustificativaProtocolo: WideString;
begin
  Result := ChildNodes['justificativaProtocolo'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo.Set_JustificativaProtocolo(Value: WideString);
begin
  ChildNodes['justificativaProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo.Get_RecursoAcatado: WideString;
begin
  Result := ChildNodes['recursoAcatado'].Text;
end;

procedure T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoProtocolo.Set_RecursoAcatado(Value: WideString);
begin
  ChildNodes['recursoAcatado'].NodeValue := Value;
end;

{ T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia }

procedure T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia.AfterConstruction;
begin
  RegisterChildNode('respostaRecursoGuiaOdonto', T341_XMLCt_respostaRecursoGuiaOdonto);
  RegisterChildNode('respostaRecursoItemOdonto', T341_XMLCt_respostaRecursoItemOdonto);
  inherited;
end;

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia.Get_RespostaRecursoGuiaOdonto: I341_XMLCt_respostaRecursoGuiaOdonto;
begin
  Result := ChildNodes['respostaRecursoGuiaOdonto'] as I341_XMLCt_respostaRecursoGuiaOdonto;
end;

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia.Get_RespostaRecursoItemOdonto: I341_XMLCt_respostaRecursoItemOdonto;
begin
  Result := ChildNodes['respostaRecursoItemOdonto'] as I341_XMLCt_respostaRecursoItemOdonto;
end;

{ T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341 }

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341.Add: I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
begin
  Result := AddItem(-1) as I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
end;

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341.Insert(const Index: Integer): I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
begin
  Result := AddItem(Index) as I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
end;

function T341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuiaList341.Get_Item(Index: Integer): I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
begin
  Result := List[Index] as I341_XMLCt_glosaReciboOdonto_opcaoRecurso_recursoGuia;
end;

{ T341_XMLCt_respostaRecursoGuiaOdonto }

function T341_XMLCt_respostaRecursoGuiaOdonto.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_respostaRecursoGuiaOdonto.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoGuiaOdonto.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_respostaRecursoGuiaOdonto.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoGuiaOdonto.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_respostaRecursoGuiaOdonto.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoGuiaOdonto.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCt_respostaRecursoGuiaOdonto.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoGuiaOdonto.Get_CodGlosaGuia: WideString;
begin
  Result := ChildNodes['codGlosaGuia'].Text;
end;

procedure T341_XMLCt_respostaRecursoGuiaOdonto.Set_CodGlosaGuia(Value: WideString);
begin
  ChildNodes['codGlosaGuia'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoGuiaOdonto.Get_JustificativaGuia: WideString;
begin
  Result := ChildNodes['justificativaGuia'].Text;
end;

procedure T341_XMLCt_respostaRecursoGuiaOdonto.Set_JustificativaGuia(Value: WideString);
begin
  ChildNodes['justificativaGuia'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoGuiaOdonto.Get_RecursoAcatadoGuia: WideString;
begin
  Result := ChildNodes['recursoAcatadoGuia'].Text;
end;

procedure T341_XMLCt_respostaRecursoGuiaOdonto.Set_RecursoAcatadoGuia(Value: WideString);
begin
  ChildNodes['recursoAcatadoGuia'].NodeValue := Value;
end;

{ T341_XMLCt_respostaRecursoItemOdonto }

procedure T341_XMLCt_respostaRecursoItemOdonto.AfterConstruction;
begin
  RegisterChildNode('recursoProcedimento', T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento);
  FRecursoProcedimento := CreateCollection(T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341, I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento, 'recursoProcedimento') as I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341;
  inherited;
end;

function T341_XMLCt_respostaRecursoItemOdonto.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto.Get_RecursoProcedimento: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341;
begin
  Result := FRecursoProcedimento;
end;

{ T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento }

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.AfterConstruction;
begin
  RegisterChildNode('denteRegiao', T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao);
  RegisterChildNode('procRecurso', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_DataRealizacao: WideString;
begin
  Result := ChildNodes['dataRealizacao'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Set_DataRealizacao(Value: WideString);
begin
  ChildNodes['dataRealizacao'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_DenteRegiao: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao;
begin
  Result := ChildNodes['denteRegiao'] as I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_DenteFace: WideString;
begin
  Result := ChildNodes['denteFace'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Set_DenteFace(Value: WideString);
begin
  ChildNodes['denteFace'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_Quantidade: Integer;
begin
  Result := ChildNodes['quantidade'].NodeValue;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Set_Quantidade(Value: Integer);
begin
  ChildNodes['quantidade'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_ProcRecurso: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procRecurso'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_CodGlosaProc: WideString;
begin
  Result := ChildNodes['codGlosaProc'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Set_CodGlosaProc(Value: WideString);
begin
  ChildNodes['codGlosaProc'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_ValorRecursado: WideString;
begin
  Result := ChildNodes['valorRecursado'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Set_ValorRecursado(Value: WideString);
begin
  ChildNodes['valorRecursado'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_JustificativaPrestador: WideString;
begin
  Result := ChildNodes['justificativaPrestador'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Set_JustificativaPrestador(Value: WideString);
begin
  ChildNodes['justificativaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_ValorAcatado: WideString;
begin
  Result := ChildNodes['valorAcatado'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Set_ValorAcatado(Value: WideString);
begin
  ChildNodes['valorAcatado'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Get_JustificativaOperadora: WideString;
begin
  Result := ChildNodes['justificativaOperadora'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento.Set_JustificativaOperadora(Value: WideString);
begin
  ChildNodes['justificativaOperadora'].NodeValue := Value;
end;

{ T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341 }

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341.Add: I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
begin
  Result := AddItem(-1) as I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341.Insert(const Index: Integer): I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
begin
  Result := AddItem(Index) as I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimentoList341.Get_Item(Index: Integer): I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
begin
  Result := List[Index] as I341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento;
end;

{ T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao }

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao.Get_CodDente: WideString;
begin
  Result := ChildNodes['codDente'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao.Set_CodDente(Value: WideString);
begin
  ChildNodes['codDente'].NodeValue := Value;
end;

function T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao.Get_CodRegiao: WideString;
begin
  Result := ChildNodes['codRegiao'].Text;
end;

procedure T341_XMLCt_respostaRecursoItemOdonto_recursoProcedimento_denteRegiao.Set_CodRegiao(Value: WideString);
begin
  ChildNodes['codRegiao'].NodeValue := Value;
end;

{ T341_XMLCt_respostaGlosa_reciboGlosaStatus }

procedure T341_XMLCt_respostaGlosa_reciboGlosaStatus.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCt_respostaGlosa_reciboGlosaStatus.Get_NrProtocoloRecursoGlosa: WideString;
begin
  Result := ChildNodes['nrProtocoloRecursoGlosa'].Text;
end;

procedure T341_XMLCt_respostaGlosa_reciboGlosaStatus.Set_NrProtocoloRecursoGlosa(Value: WideString);
begin
  ChildNodes['nrProtocoloRecursoGlosa'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosa_reciboGlosaStatus.Get_DataEnvioRecurso: WideString;
begin
  Result := ChildNodes['dataEnvioRecurso'].Text;
end;

procedure T341_XMLCt_respostaGlosa_reciboGlosaStatus.Set_DataEnvioRecurso(Value: WideString);
begin
  ChildNodes['dataEnvioRecurso'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosa_reciboGlosaStatus.Get_DataRecebimentoRecurso: WideString;
begin
  Result := ChildNodes['dataRecebimentoRecurso'].Text;
end;

procedure T341_XMLCt_respostaGlosa_reciboGlosaStatus.Set_DataRecebimentoRecurso(Value: WideString);
begin
  ChildNodes['dataRecebimentoRecurso'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosa_reciboGlosaStatus.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_respostaGlosa_reciboGlosaStatus.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosa_reciboGlosaStatus.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_respostaGlosa_reciboGlosaStatus.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosa_reciboGlosaStatus.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_respostaGlosa_reciboGlosaStatus.Get_NrProtocoloSituacaoRecursoGlosa: WideString;
begin
  Result := ChildNodes['nrProtocoloSituacaoRecursoGlosa'].Text;
end;

procedure T341_XMLCt_respostaGlosa_reciboGlosaStatus.Set_NrProtocoloSituacaoRecursoGlosa(Value: WideString);
begin
  ChildNodes['nrProtocoloSituacaoRecursoGlosa'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosa_reciboGlosaStatus.Get_DataSituacao: WideString;
begin
  Result := ChildNodes['dataSituacao'].Text;
end;

procedure T341_XMLCt_respostaGlosa_reciboGlosaStatus.Set_DataSituacao(Value: WideString);
begin
  ChildNodes['dataSituacao'].NodeValue := Value;
end;

function T341_XMLCt_respostaGlosa_reciboGlosaStatus.Get_SituacaoProtocolo: WideString;
begin
  Result := ChildNodes['situacaoProtocolo'].Text;
end;

procedure T341_XMLCt_respostaGlosa_reciboGlosaStatus.Set_SituacaoProtocolo(Value: WideString);
begin
  ChildNodes['situacaoProtocolo'].NodeValue := Value;
end;

{ T341_XMLPrestadorOperadora }

procedure T341_XMLPrestadorOperadora.AfterConstruction;
begin
  RegisterChildNode('loteGuias', T341_XMLCtm_guiaLote);
  RegisterChildNode('loteAnexos', T341_XMLCt_anexoLote);
  RegisterChildNode('solicitacaoDemonstrativoRetorno', T341_XMLCt_demonstrativoSolicitacao);
  RegisterChildNode('solicitacaoStatusProtocolo', T341_XMLCt_protocoloSolicitacaoStatus);
  RegisterChildNode('solicitacaoProcedimento', T341_XMLCt_solicitacaoProcedimento);
  RegisterChildNode('solicitaStatusAutorizacao', T341_XMLCt_autorizacaoSolicitaStatus);
  RegisterChildNode('verificaElegibilidade', T341_XMLCt_elegibilidadeVerifica);
  RegisterChildNode('cancelaGuia', T341_XMLCt_guiaCancelamento);
  RegisterChildNode('comunicacaoInternacao', T341_XMLCtm_beneficiarioComunicacao);
  RegisterChildNode('recursoGlosa', T341_XMLCt_guiaRecursoLote);
  RegisterChildNode('solicitacaoStatusRecursoGlosa', T341_XMLCt_protocoloSolicitacaoStatus);
  inherited;
end;

function T341_XMLPrestadorOperadora.Get_LoteGuias: I341_XMLCtm_guiaLote;
begin
  Result := ChildNodes['loteGuias'] as I341_XMLCtm_guiaLote;
end;

function T341_XMLPrestadorOperadora.Get_LoteAnexos: I341_XMLCt_anexoLote;
begin
  Result := ChildNodes['loteAnexos'] as I341_XMLCt_anexoLote;
end;

function T341_XMLPrestadorOperadora.Get_SolicitacaoDemonstrativoRetorno: I341_XMLCt_demonstrativoSolicitacao;
begin
  Result := ChildNodes['solicitacaoDemonstrativoRetorno'] as I341_XMLCt_demonstrativoSolicitacao;
end;

function T341_XMLPrestadorOperadora.Get_SolicitacaoStatusProtocolo: I341_XMLCt_protocoloSolicitacaoStatus;
begin
  Result := ChildNodes['solicitacaoStatusProtocolo'] as I341_XMLCt_protocoloSolicitacaoStatus;
end;

function T341_XMLPrestadorOperadora.Get_SolicitacaoProcedimento: I341_XMLCt_solicitacaoProcedimento;
begin
  Result := ChildNodes['solicitacaoProcedimento'] as I341_XMLCt_solicitacaoProcedimento;
end;

function T341_XMLPrestadorOperadora.Get_SolicitaStatusAutorizacao: I341_XMLCt_autorizacaoSolicitaStatus;
begin
  Result := ChildNodes['solicitaStatusAutorizacao'] as I341_XMLCt_autorizacaoSolicitaStatus;
end;

function T341_XMLPrestadorOperadora.Get_VerificaElegibilidade: I341_XMLCt_elegibilidadeVerifica;
begin
  Result := ChildNodes['verificaElegibilidade'] as I341_XMLCt_elegibilidadeVerifica;
end;

function T341_XMLPrestadorOperadora.Get_CancelaGuia: I341_XMLCt_guiaCancelamento;
begin
  Result := ChildNodes['cancelaGuia'] as I341_XMLCt_guiaCancelamento;
end;

function T341_XMLPrestadorOperadora.Get_ComunicacaoInternacao: I341_XMLCtm_beneficiarioComunicacao;
begin
  Result := ChildNodes['comunicacaoInternacao'] as I341_XMLCtm_beneficiarioComunicacao;
end;

function T341_XMLPrestadorOperadora.Get_RecursoGlosa: I341_XMLCt_guiaRecursoLote;
begin
  Result := ChildNodes['recursoGlosa'] as I341_XMLCt_guiaRecursoLote;
end;

function T341_XMLPrestadorOperadora.Get_SolicitacaoStatusRecursoGlosa: I341_XMLCt_protocoloSolicitacaoStatus;
begin
  Result := ChildNodes['solicitacaoStatusRecursoGlosa'] as I341_XMLCt_protocoloSolicitacaoStatus;
end;

{ T341_XMLCtm_guiaLote }

procedure T341_XMLCtm_guiaLote.AfterConstruction;
begin
  RegisterChildNode('guiasTISS', T341_XMLCtm_guiaLote_guiasTISS);
  inherited;
end;

function T341_XMLCtm_guiaLote.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCtm_guiaLote.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCtm_guiaLote.Get_GuiasTISS: I341_XMLCtm_guiaLote_guiasTISS;
begin
  Result := ChildNodes['guiasTISS'] as I341_XMLCtm_guiaLote_guiasTISS;
end;

{ T341_XMLCtm_guiaLote_guiasTISS }

procedure T341_XMLCtm_guiaLote_guiasTISS.AfterConstruction;
begin
  RegisterChildNode('guiaSP-SADT', T341_XMLCtm_spsadtGuia);
  RegisterChildNode('guiaResumoInternacao', T341_XMLCtm_internacaoResumoGuia);
  RegisterChildNode('guiaHonorarios', T341_XMLCtm_honorarioIndividualGuia);
  RegisterChildNode('guiaConsulta', T341_XMLCtm_consultaGuia);
  RegisterChildNode('guiaOdonto', T341_XMLCto_guiaOdontologia);
  FGuiaSPSADT := CreateCollection(T341_XMLCtm_spsadtGuiaList341, I341_XMLCtm_spsadtGuia, 'guiaSP-SADT') as I341_XMLCtm_spsadtGuiaList341;
  FGuiaResumoInternacao := CreateCollection(T341_XMLCtm_internacaoResumoGuiaList341, I341_XMLCtm_internacaoResumoGuia, 'guiaResumoInternacao') as I341_XMLCtm_internacaoResumoGuiaList341;
  FGuiaHonorarios := CreateCollection(T341_XMLCtm_honorarioIndividualGuiaList341, I341_XMLCtm_honorarioIndividualGuia, 'guiaHonorarios') as I341_XMLCtm_honorarioIndividualGuiaList341;
  FGuiaConsulta := CreateCollection(T341_XMLCtm_consultaGuiaList341, I341_XMLCtm_consultaGuia, 'guiaConsulta') as I341_XMLCtm_consultaGuiaList341;
  FGuiaOdonto := CreateCollection(T341_XMLCto_guiaOdontologiaList341, I341_XMLCto_guiaOdontologia, 'guiaOdonto') as I341_XMLCto_guiaOdontologiaList341;
  inherited;
end;

function T341_XMLCtm_guiaLote_guiasTISS.Get_GuiaSPSADT: I341_XMLCtm_spsadtGuiaList341;
begin
  Result := FGuiaSPSADT;
end;

function T341_XMLCtm_guiaLote_guiasTISS.Get_GuiaResumoInternacao: I341_XMLCtm_internacaoResumoGuiaList341;
begin
  Result := FGuiaResumoInternacao;
end;

function T341_XMLCtm_guiaLote_guiasTISS.Get_GuiaHonorarios: I341_XMLCtm_honorarioIndividualGuiaList341;
begin
  Result := FGuiaHonorarios;
end;

function T341_XMLCtm_guiaLote_guiasTISS.Get_GuiaConsulta: I341_XMLCtm_consultaGuiaList341;
begin
  Result := FGuiaConsulta;
end;

function T341_XMLCtm_guiaLote_guiasTISS.Get_GuiaOdonto: I341_XMLCto_guiaOdontologiaList341;
begin
  Result := FGuiaOdonto;
end;

{ T341_XMLCtm_spsadtGuia }

procedure T341_XMLCtm_spsadtGuia.AfterConstruction;
begin
  RegisterChildNode('cabecalhoGuia', T341_XMLCtm_spsadtGuia_cabecalhoGuia);
  RegisterChildNode('dadosAutorizacao', T341_XMLCt_autorizacaoSADT);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('dadosSolicitante', T341_XMLCtm_spsadtGuia_dadosSolicitante);
  RegisterChildNode('dadosSolicitacao', T341_XMLCtm_spsadtGuia_dadosSolicitacao);
  RegisterChildNode('dadosExecutante', T341_XMLCtm_spsadtGuia_dadosExecutante);
  RegisterChildNode('dadosAtendimento', T341_XMLCtm_spsadtAtendimento);
  RegisterChildNode('procedimentosExecutados', T341_XMLCtm_spsadtGuia_procedimentosExecutados);
  RegisterChildNode('outrasDespesas', T341_XMLCt_outrasDespesas);
  RegisterChildNode('valorTotal', T341_XMLCt_guiaValorTotal);
  RegisterChildNode('assinaturaDigitalGuia', T341_XMLSignature);
  inherited;
end;

function T341_XMLCtm_spsadtGuia.Get_CabecalhoGuia: I341_XMLCtm_spsadtGuia_cabecalhoGuia;
begin
  Result := ChildNodes['cabecalhoGuia'] as I341_XMLCtm_spsadtGuia_cabecalhoGuia;
end;

function T341_XMLCtm_spsadtGuia.Get_DadosAutorizacao: I341_XMLCt_autorizacaoSADT;
begin
  Result := ChildNodes['dadosAutorizacao'] as I341_XMLCt_autorizacaoSADT;
end;

function T341_XMLCtm_spsadtGuia.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_spsadtGuia.Get_DadosSolicitante: I341_XMLCtm_spsadtGuia_dadosSolicitante;
begin
  Result := ChildNodes['dadosSolicitante'] as I341_XMLCtm_spsadtGuia_dadosSolicitante;
end;

function T341_XMLCtm_spsadtGuia.Get_DadosSolicitacao: I341_XMLCtm_spsadtGuia_dadosSolicitacao;
begin
  Result := ChildNodes['dadosSolicitacao'] as I341_XMLCtm_spsadtGuia_dadosSolicitacao;
end;

function T341_XMLCtm_spsadtGuia.Get_DadosExecutante: I341_XMLCtm_spsadtGuia_dadosExecutante;
begin
  Result := ChildNodes['dadosExecutante'] as I341_XMLCtm_spsadtGuia_dadosExecutante;
end;

function T341_XMLCtm_spsadtGuia.Get_DadosAtendimento: I341_XMLCtm_spsadtAtendimento;
begin
  Result := ChildNodes['dadosAtendimento'] as I341_XMLCtm_spsadtAtendimento;
end;

function T341_XMLCtm_spsadtGuia.Get_ProcedimentosExecutados: I341_XMLCtm_spsadtGuia_procedimentosExecutados;
begin
  Result := ChildNodes['procedimentosExecutados'] as I341_XMLCtm_spsadtGuia_procedimentosExecutados;
end;

function T341_XMLCtm_spsadtGuia.Get_OutrasDespesas: I341_XMLCt_outrasDespesas;
begin
  Result := ChildNodes['outrasDespesas'] as I341_XMLCt_outrasDespesas;
end;

function T341_XMLCtm_spsadtGuia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_spsadtGuia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtGuia.Get_ValorTotal: I341_XMLCt_guiaValorTotal;
begin
  Result := ChildNodes['valorTotal'] as I341_XMLCt_guiaValorTotal;
end;

function T341_XMLCtm_spsadtGuia.Get_AssinaturaDigitalGuia: I341_XMLSignature;
begin
  Result := ChildNodes['assinaturaDigitalGuia'] as I341_XMLSignature;
end;

{ T341_XMLCtm_spsadtGuiaList341 }

function T341_XMLCtm_spsadtGuiaList341.Add: I341_XMLCtm_spsadtGuia;
begin
  Result := AddItem(-1) as I341_XMLCtm_spsadtGuia;
end;

function T341_XMLCtm_spsadtGuiaList341.Insert(const Index: Integer): I341_XMLCtm_spsadtGuia;
begin
  Result := AddItem(Index) as I341_XMLCtm_spsadtGuia;
end;

function T341_XMLCtm_spsadtGuiaList341.Get_Item(Index: Integer): I341_XMLCtm_spsadtGuia;
begin
  Result := List[Index] as I341_XMLCtm_spsadtGuia;
end;

{ T341_XMLCt_guiaCabecalho }

function T341_XMLCt_guiaCabecalho.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_guiaCabecalho.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_guiaCabecalho.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_guiaCabecalho.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

{ T341_XMLCtm_spsadtGuia_cabecalhoGuia }

function T341_XMLCtm_spsadtGuia_cabecalhoGuia.Get_GuiaPrincipal: WideString;
begin
  Result := ChildNodes['guiaPrincipal'].Text;
end;

procedure T341_XMLCtm_spsadtGuia_cabecalhoGuia.Set_GuiaPrincipal(Value: WideString);
begin
  ChildNodes['guiaPrincipal'].NodeValue := Value;
end;

{ T341_XMLCt_autorizacaoSADT }

function T341_XMLCt_autorizacaoSADT.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_autorizacaoSADT.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoSADT.Get_DataAutorizacao: WideString;
begin
  Result := ChildNodes['dataAutorizacao'].Text;
end;

procedure T341_XMLCt_autorizacaoSADT.Set_DataAutorizacao(Value: WideString);
begin
  ChildNodes['dataAutorizacao'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoSADT.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_autorizacaoSADT.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoSADT.Get_DataValidadeSenha: WideString;
begin
  Result := ChildNodes['dataValidadeSenha'].Text;
end;

procedure T341_XMLCt_autorizacaoSADT.Set_DataValidadeSenha(Value: WideString);
begin
  ChildNodes['dataValidadeSenha'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoSADT.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCt_autorizacaoSADT.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoSADT.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCt_autorizacaoSADT.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

{ T341_XMLCtm_spsadtGuia_dadosSolicitante }

procedure T341_XMLCtm_spsadtGuia_dadosSolicitante.AfterConstruction;
begin
  RegisterChildNode('contratadoSolicitante', T341_XMLCt_contratadoDados);
  RegisterChildNode('profissionalSolicitante', T341_XMLCt_contratadoProfissionalDados);
  inherited;
end;

function T341_XMLCtm_spsadtGuia_dadosSolicitante.Get_ContratadoSolicitante: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['contratadoSolicitante'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_spsadtGuia_dadosSolicitante.Get_ProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados;
begin
  Result := ChildNodes['profissionalSolicitante'] as I341_XMLCt_contratadoProfissionalDados;
end;

{ T341_XMLCt_contratadoProfissionalDados }

function T341_XMLCt_contratadoProfissionalDados.Get_NomeProfissional: WideString;
begin
  Result := ChildNodes['nomeProfissional'].Text;
end;

procedure T341_XMLCt_contratadoProfissionalDados.Set_NomeProfissional(Value: WideString);
begin
  ChildNodes['nomeProfissional'].NodeValue := Value;
end;

function T341_XMLCt_contratadoProfissionalDados.Get_ConselhoProfissional: WideString;
begin
  Result := ChildNodes['conselhoProfissional'].Text;
end;

procedure T341_XMLCt_contratadoProfissionalDados.Set_ConselhoProfissional(Value: WideString);
begin
  ChildNodes['conselhoProfissional'].NodeValue := Value;
end;

function T341_XMLCt_contratadoProfissionalDados.Get_NumeroConselhoProfissional: WideString;
begin
  Result := ChildNodes['numeroConselhoProfissional'].Text;
end;

procedure T341_XMLCt_contratadoProfissionalDados.Set_NumeroConselhoProfissional(Value: WideString);
begin
  ChildNodes['numeroConselhoProfissional'].NodeValue := Value;
end;

function T341_XMLCt_contratadoProfissionalDados.Get_UF: WideString;
begin
  Result := ChildNodes['UF'].Text;
end;

procedure T341_XMLCt_contratadoProfissionalDados.Set_UF(Value: WideString);
begin
  ChildNodes['UF'].NodeValue := Value;
end;

function T341_XMLCt_contratadoProfissionalDados.Get_CBOS: WideString;
begin
  Result := ChildNodes['CBOS'].Text;
end;

procedure T341_XMLCt_contratadoProfissionalDados.Set_CBOS(Value: WideString);
begin
  ChildNodes['CBOS'].NodeValue := Value;
end;

{ T341_XMLCtm_spsadtGuia_dadosSolicitacao }

function T341_XMLCtm_spsadtGuia_dadosSolicitacao.Get_DataSolicitacao: WideString;
begin
  Result := ChildNodes['dataSolicitacao'].Text;
end;

procedure T341_XMLCtm_spsadtGuia_dadosSolicitacao.Set_DataSolicitacao(Value: WideString);
begin
  ChildNodes['dataSolicitacao'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtGuia_dadosSolicitacao.Get_CaraterAtendimento: WideString;
begin
  Result := ChildNodes['caraterAtendimento'].Text;
end;

procedure T341_XMLCtm_spsadtGuia_dadosSolicitacao.Set_CaraterAtendimento(Value: WideString);
begin
  ChildNodes['caraterAtendimento'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtGuia_dadosSolicitacao.Get_IndicacaoClinica: WideString;
begin
  Result := ChildNodes['indicacaoClinica'].Text;
end;

procedure T341_XMLCtm_spsadtGuia_dadosSolicitacao.Set_IndicacaoClinica(Value: WideString);
begin
  ChildNodes['indicacaoClinica'].NodeValue := Value;
end;

{ T341_XMLCtm_spsadtGuia_dadosExecutante }

procedure T341_XMLCtm_spsadtGuia_dadosExecutante.AfterConstruction;
begin
  RegisterChildNode('contratadoExecutante', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCtm_spsadtGuia_dadosExecutante.Get_ContratadoExecutante: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['contratadoExecutante'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_spsadtGuia_dadosExecutante.Get_CNES: WideString;
begin
  Result := ChildNodes['CNES'].Text;
end;

procedure T341_XMLCtm_spsadtGuia_dadosExecutante.Set_CNES(Value: WideString);
begin
  ChildNodes['CNES'].NodeValue := Value;
end;

{ T341_XMLCtm_spsadtAtendimento }

function T341_XMLCtm_spsadtAtendimento.Get_TipoAtendimento: WideString;
begin
  Result := ChildNodes['tipoAtendimento'].Text;
end;

procedure T341_XMLCtm_spsadtAtendimento.Set_TipoAtendimento(Value: WideString);
begin
  ChildNodes['tipoAtendimento'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtAtendimento.Get_IndicacaoAcidente: WideString;
begin
  Result := ChildNodes['indicacaoAcidente'].Text;
end;

procedure T341_XMLCtm_spsadtAtendimento.Set_IndicacaoAcidente(Value: WideString);
begin
  ChildNodes['indicacaoAcidente'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtAtendimento.Get_TipoConsulta: WideString;
begin
  Result := ChildNodes['tipoConsulta'].Text;
end;

procedure T341_XMLCtm_spsadtAtendimento.Set_TipoConsulta(Value: WideString);
begin
  ChildNodes['tipoConsulta'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtAtendimento.Get_MotivoEncerramento: WideString;
begin
  Result := ChildNodes['motivoEncerramento'].Text;
end;

procedure T341_XMLCtm_spsadtAtendimento.Set_MotivoEncerramento(Value: WideString);
begin
  ChildNodes['motivoEncerramento'].NodeValue := Value;
end;

{ T341_XMLCtm_spsadtGuia_procedimentosExecutados }

procedure T341_XMLCtm_spsadtGuia_procedimentosExecutados.AfterConstruction;
begin
  RegisterChildNode('procedimentoExecutado', T341_XMLCt_procedimentoExecutadoSadt);
  ItemTag := 'procedimentoExecutado';
  ItemInterface := I341_XMLCt_procedimentoExecutadoSadt;
  inherited;
end;

function T341_XMLCtm_spsadtGuia_procedimentosExecutados.Get_ProcedimentoExecutado(Index: Integer): I341_XMLCt_procedimentoExecutadoSadt;
begin
  Result := List[Index] as I341_XMLCt_procedimentoExecutadoSadt;
end;

function T341_XMLCtm_spsadtGuia_procedimentosExecutados.Add: I341_XMLCt_procedimentoExecutadoSadt;
begin
  Result := AddItem(-1) as I341_XMLCt_procedimentoExecutadoSadt;
end;

function T341_XMLCtm_spsadtGuia_procedimentosExecutados.Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoSadt;
begin
  Result := AddItem(Index) as I341_XMLCt_procedimentoExecutadoSadt;
end;

{ T341_XMLCt_procedimentoExecutadoSadt }

procedure T341_XMLCt_procedimentoExecutadoSadt.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  RegisterChildNode('equipeSadt', T341_XMLCt_identEquipeSADT);
  FEquipeSadt := CreateCollection(T341_XMLCt_identEquipeSADTList341, I341_XMLCt_identEquipeSADT, 'equipeSadt') as I341_XMLCt_identEquipeSADTList341;
  inherited;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_DataExecucao: WideString;
begin
  Result := ChildNodes['dataExecucao'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_DataExecucao(Value: WideString);
begin
  ChildNodes['dataExecucao'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_HoraInicial: WideString;
begin
  Result := ChildNodes['horaInicial'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_HoraInicial(Value: WideString);
begin
  ChildNodes['horaInicial'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_HoraFinal: WideString;
begin
  Result := ChildNodes['horaFinal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_HoraFinal(Value: WideString);
begin
  ChildNodes['horaFinal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_QuantidadeExecutada: Integer;
begin
  Result := ChildNodes['quantidadeExecutada'].NodeValue;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_QuantidadeExecutada(Value: Integer);
begin
  ChildNodes['quantidadeExecutada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_ViaAcesso: WideString;
begin
  Result := ChildNodes['viaAcesso'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_ViaAcesso(Value: WideString);
begin
  ChildNodes['viaAcesso'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_TecnicaUtilizada: WideString;
begin
  Result := ChildNodes['tecnicaUtilizada'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_TecnicaUtilizada(Value: WideString);
begin
  ChildNodes['tecnicaUtilizada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_ReducaoAcrescimo: WideString;
begin
  Result := ChildNodes['reducaoAcrescimo'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_ReducaoAcrescimo(Value: WideString);
begin
  ChildNodes['reducaoAcrescimo'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_ValorUnitario: WideString;
begin
  Result := ChildNodes['valorUnitario'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_ValorUnitario(Value: WideString);
begin
  ChildNodes['valorUnitario'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_ValorTotal: WideString;
begin
  Result := ChildNodes['valorTotal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoSadt.Set_ValorTotal(Value: WideString);
begin
  ChildNodes['valorTotal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoSadt.Get_EquipeSadt: I341_XMLCt_identEquipeSADTList341;
begin
  Result := FEquipeSadt;
end;

{ T341_XMLCt_identEquipeSADT }

procedure T341_XMLCt_identEquipeSADT.AfterConstruction;
begin
  RegisterChildNode('codProfissional', T341_XMLCt_identEquipeSADT_codProfissional);
  inherited;
end;

function T341_XMLCt_identEquipeSADT.Get_GrauPart: WideString;
begin
  Result := ChildNodes['grauPart'].Text;
end;

procedure T341_XMLCt_identEquipeSADT.Set_GrauPart(Value: WideString);
begin
  ChildNodes['grauPart'].NodeValue := Value;
end;

function T341_XMLCt_identEquipeSADT.Get_CodProfissional: I341_XMLCt_identEquipeSADT_codProfissional;
begin
  Result := ChildNodes['codProfissional'] as I341_XMLCt_identEquipeSADT_codProfissional;
end;

function T341_XMLCt_identEquipeSADT.Get_NomeProf: WideString;
begin
  Result := ChildNodes['nomeProf'].Text;
end;

procedure T341_XMLCt_identEquipeSADT.Set_NomeProf(Value: WideString);
begin
  ChildNodes['nomeProf'].NodeValue := Value;
end;

function T341_XMLCt_identEquipeSADT.Get_Conselho: WideString;
begin
  Result := ChildNodes['conselho'].Text;
end;

procedure T341_XMLCt_identEquipeSADT.Set_Conselho(Value: WideString);
begin
  ChildNodes['conselho'].NodeValue := Value;
end;

function T341_XMLCt_identEquipeSADT.Get_NumeroConselhoProfissional: WideString;
begin
  Result := ChildNodes['numeroConselhoProfissional'].Text;
end;

procedure T341_XMLCt_identEquipeSADT.Set_NumeroConselhoProfissional(Value: WideString);
begin
  ChildNodes['numeroConselhoProfissional'].NodeValue := Value;
end;

function T341_XMLCt_identEquipeSADT.Get_UF: WideString;
begin
  Result := ChildNodes['UF'].Text;
end;

procedure T341_XMLCt_identEquipeSADT.Set_UF(Value: WideString);
begin
  ChildNodes['UF'].NodeValue := Value;
end;

function T341_XMLCt_identEquipeSADT.Get_CBOS: WideString;
begin
  Result := ChildNodes['CBOS'].Text;
end;

procedure T341_XMLCt_identEquipeSADT.Set_CBOS(Value: WideString);
begin
  ChildNodes['CBOS'].NodeValue := Value;
end;

{ T341_XMLCt_identEquipeSADTList341 }

function T341_XMLCt_identEquipeSADTList341.Add: I341_XMLCt_identEquipeSADT;
begin
  Result := AddItem(-1) as I341_XMLCt_identEquipeSADT;
end;

function T341_XMLCt_identEquipeSADTList341.Insert(const Index: Integer): I341_XMLCt_identEquipeSADT;
begin
  Result := AddItem(Index) as I341_XMLCt_identEquipeSADT;
end;

function T341_XMLCt_identEquipeSADTList341.Get_Item(Index: Integer): I341_XMLCt_identEquipeSADT;
begin
  Result := List[Index] as I341_XMLCt_identEquipeSADT;
end;

{ T341_XMLCt_identEquipeSADT_codProfissional }

function T341_XMLCt_identEquipeSADT_codProfissional.Get_CodigoPrestadorNaOperadora: WideString;
begin
  Result := ChildNodes['codigoPrestadorNaOperadora'].Text;
end;

procedure T341_XMLCt_identEquipeSADT_codProfissional.Set_CodigoPrestadorNaOperadora(Value: WideString);
begin
  ChildNodes['codigoPrestadorNaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_identEquipeSADT_codProfissional.Get_CpfContratado: WideString;
begin
  Result := ChildNodes['cpfContratado'].Text;
end;

procedure T341_XMLCt_identEquipeSADT_codProfissional.Set_CpfContratado(Value: WideString);
begin
  ChildNodes['cpfContratado'].NodeValue := Value;
end;

{ T341_XMLCt_outrasDespesas }

procedure T341_XMLCt_outrasDespesas.AfterConstruction;
begin
  RegisterChildNode('despesa', T341_XMLCt_outrasDespesas_despesa);
  ItemTag := 'despesa';
  ItemInterface := I341_XMLCt_outrasDespesas_despesa;
  inherited;
end;

function T341_XMLCt_outrasDespesas.Get_Despesa(Index: Integer): I341_XMLCt_outrasDespesas_despesa;
begin
  Result := List[Index] as I341_XMLCt_outrasDespesas_despesa;
end;

function T341_XMLCt_outrasDespesas.Add: I341_XMLCt_outrasDespesas_despesa;
begin
  Result := AddItem(-1) as I341_XMLCt_outrasDespesas_despesa;
end;

function T341_XMLCt_outrasDespesas.Insert(const Index: Integer): I341_XMLCt_outrasDespesas_despesa;
begin
  Result := AddItem(Index) as I341_XMLCt_outrasDespesas_despesa;
end;

{ T341_XMLCt_outrasDespesas_despesa }

procedure T341_XMLCt_outrasDespesas_despesa.AfterConstruction;
begin
  RegisterChildNode('servicosExecutados', T341_XMLCt_procedimentoExecutadoOutras);
  inherited;
end;

function T341_XMLCt_outrasDespesas_despesa.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_outrasDespesas_despesa.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_outrasDespesas_despesa.Get_CodigoDespesa: WideString;
begin
  Result := ChildNodes['codigoDespesa'].Text;
end;

procedure T341_XMLCt_outrasDespesas_despesa.Set_CodigoDespesa(Value: WideString);
begin
  ChildNodes['codigoDespesa'].NodeValue := Value;
end;

function T341_XMLCt_outrasDespesas_despesa.Get_ServicosExecutados: I341_XMLCt_procedimentoExecutadoOutras;
begin
  Result := ChildNodes['servicosExecutados'] as I341_XMLCt_procedimentoExecutadoOutras;
end;

function T341_XMLCt_outrasDespesas_despesa.Get_ItemVinculado: Integer;
begin
  Result := ChildNodes['itemVinculado'].NodeValue;
end;

procedure T341_XMLCt_outrasDespesas_despesa.Set_ItemVinculado(Value: Integer);
begin
  ChildNodes['itemVinculado'].NodeValue := Value;
end;

{ T341_XMLCt_procedimentoExecutadoOutras }

function T341_XMLCt_procedimentoExecutadoOutras.Get_DataExecucao: WideString;
begin
  Result := ChildNodes['dataExecucao'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_DataExecucao(Value: WideString);
begin
  ChildNodes['dataExecucao'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_HoraInicial: WideString;
begin
  Result := ChildNodes['horaInicial'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_HoraInicial(Value: WideString);
begin
  ChildNodes['horaInicial'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_HoraFinal: WideString;
begin
  Result := ChildNodes['horaFinal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_HoraFinal(Value: WideString);
begin
  ChildNodes['horaFinal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_CodigoTabela: WideString;
begin
  Result := ChildNodes['codigoTabela'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_CodigoTabela(Value: WideString);
begin
  ChildNodes['codigoTabela'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_CodigoProcedimento: WideString;
begin
  Result := ChildNodes['codigoProcedimento'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_CodigoProcedimento(Value: WideString);
begin
  ChildNodes['codigoProcedimento'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_QuantidadeExecutada: WideString;
begin
  Result := ChildNodes['quantidadeExecutada'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_QuantidadeExecutada(Value: WideString);
begin
  ChildNodes['quantidadeExecutada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_UnidadeMedida: WideString;
begin
  Result := ChildNodes['unidadeMedida'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_UnidadeMedida(Value: WideString);
begin
  ChildNodes['unidadeMedida'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_ReducaoAcrescimo: WideString;
begin
  Result := ChildNodes['reducaoAcrescimo'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_ReducaoAcrescimo(Value: WideString);
begin
  ChildNodes['reducaoAcrescimo'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_ValorUnitario: WideString;
begin
  Result := ChildNodes['valorUnitario'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_ValorUnitario(Value: WideString);
begin
  ChildNodes['valorUnitario'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_ValorTotal: WideString;
begin
  Result := ChildNodes['valorTotal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_ValorTotal(Value: WideString);
begin
  ChildNodes['valorTotal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_DescricaoProcedimento: WideString;
begin
  Result := ChildNodes['descricaoProcedimento'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_DescricaoProcedimento(Value: WideString);
begin
  ChildNodes['descricaoProcedimento'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_RegistroANVISA: WideString;
begin
  Result := ChildNodes['registroANVISA'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_RegistroANVISA(Value: WideString);
begin
  ChildNodes['registroANVISA'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_CodigoRefFabricante: WideString;
begin
  Result := ChildNodes['codigoRefFabricante'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_CodigoRefFabricante(Value: WideString);
begin
  ChildNodes['codigoRefFabricante'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoOutras.Get_AutorizacaoFuncionamento: WideString;
begin
  Result := ChildNodes['autorizacaoFuncionamento'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoOutras.Set_AutorizacaoFuncionamento(Value: WideString);
begin
  ChildNodes['autorizacaoFuncionamento'].NodeValue := Value;
end;

{ T341_XMLCt_guiaValorTotal }

function T341_XMLCt_guiaValorTotal.Get_ValorProcedimentos: WideString;
begin
  Result := ChildNodes['valorProcedimentos'].Text;
end;

procedure T341_XMLCt_guiaValorTotal.Set_ValorProcedimentos(Value: WideString);
begin
  ChildNodes['valorProcedimentos'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotal.Get_ValorDiarias: WideString;
begin
  Result := ChildNodes['valorDiarias'].Text;
end;

procedure T341_XMLCt_guiaValorTotal.Set_ValorDiarias(Value: WideString);
begin
  ChildNodes['valorDiarias'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotal.Get_ValorTaxasAlugueis: WideString;
begin
  Result := ChildNodes['valorTaxasAlugueis'].Text;
end;

procedure T341_XMLCt_guiaValorTotal.Set_ValorTaxasAlugueis(Value: WideString);
begin
  ChildNodes['valorTaxasAlugueis'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotal.Get_ValorMateriais: WideString;
begin
  Result := ChildNodes['valorMateriais'].Text;
end;

procedure T341_XMLCt_guiaValorTotal.Set_ValorMateriais(Value: WideString);
begin
  ChildNodes['valorMateriais'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotal.Get_ValorMedicamentos: WideString;
begin
  Result := ChildNodes['valorMedicamentos'].Text;
end;

procedure T341_XMLCt_guiaValorTotal.Set_ValorMedicamentos(Value: WideString);
begin
  ChildNodes['valorMedicamentos'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotal.Get_ValorOPME: WideString;
begin
  Result := ChildNodes['valorOPME'].Text;
end;

procedure T341_XMLCt_guiaValorTotal.Set_ValorOPME(Value: WideString);
begin
  ChildNodes['valorOPME'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotal.Get_ValorGasesMedicinais: WideString;
begin
  Result := ChildNodes['valorGasesMedicinais'].Text;
end;

procedure T341_XMLCt_guiaValorTotal.Set_ValorGasesMedicinais(Value: WideString);
begin
  ChildNodes['valorGasesMedicinais'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotal.Get_ValorTotalGeral: WideString;
begin
  Result := ChildNodes['valorTotalGeral'].Text;
end;

procedure T341_XMLCt_guiaValorTotal.Set_ValorTotalGeral(Value: WideString);
begin
  ChildNodes['valorTotalGeral'].NodeValue := Value;
end;

{ T341_XMLIXMLSignatureType_ds }

procedure T341_XMLIXMLSignatureType_ds.AfterConstruction;
begin
  RegisterChildNode('SignedInfo', T341_XMLIXMLSignedInfoType_ds);
  RegisterChildNode('SignatureValue', T341_XMLIXMLSignatureValueType_ds);
  RegisterChildNode('KeyInfo', T341_XMLIXMLKeyInfoType_ds);
  RegisterChildNode('Object', T341_XMLIXMLObjectType_ds);
  FObject_ := CreateCollection(T341_XMLIXMLObjectType_dsList341, IXMLObjectType_ds, 'Object') as IXMLObjectType_dsList341;
  inherited;
end;

function T341_XMLIXMLSignatureType_ds.Get_Id: WideString;
begin
  Result := AttributeNodes['Id'].Text;
end;

procedure T341_XMLIXMLSignatureType_ds.Set_Id(Value: WideString);
begin
  SetAttribute('Id', Value);
end;

function T341_XMLIXMLSignatureType_ds.Get_SignedInfo: IXMLSignedInfoType_ds;
begin
  Result := ChildNodes['SignedInfo'] as IXMLSignedInfoType_ds;
end;

function T341_XMLIXMLSignatureType_ds.Get_SignatureValue: IXMLSignatureValueType_ds;
begin
  Result := ChildNodes['SignatureValue'] as IXMLSignatureValueType_ds;
end;

function T341_XMLIXMLSignatureType_ds.Get_KeyInfo: IXMLKeyInfoType_ds;
begin
  Result := ChildNodes['KeyInfo'] as IXMLKeyInfoType_ds;
end;

function T341_XMLIXMLSignatureType_ds.Get_Object_: IXMLObjectType_dsList341;
begin
  Result := FObject_;
end;

{ T341_XMLIXMLSignedInfoType_ds }

procedure T341_XMLIXMLSignedInfoType_ds.AfterConstruction;
begin
  RegisterChildNode('CanonicalizationMethod', T341_XMLIXMLCanonicalizationMethodType_ds);
  RegisterChildNode('SignatureMethod', T341_XMLIXMLSignatureMethodType_ds);
  RegisterChildNode('Reference', T341_XMLIXMLReferenceType_ds);
  FReference := CreateCollection(T341_XMLIXMLReferenceType_dsList341, IXMLReferenceType_ds, 'Reference') as IXMLReferenceType_dsList341;
  inherited;
end;

function T341_XMLIXMLSignedInfoType_ds.Get_Id: WideString;
begin
  Result := AttributeNodes['Id'].Text;
end;

procedure T341_XMLIXMLSignedInfoType_ds.Set_Id(Value: WideString);
begin
  SetAttribute('Id', Value);
end;

function T341_XMLIXMLSignedInfoType_ds.Get_CanonicalizationMethod: IXMLCanonicalizationMethodType_ds;
begin
  Result := ChildNodes['CanonicalizationMethod'] as IXMLCanonicalizationMethodType_ds;
end;

function T341_XMLIXMLSignedInfoType_ds.Get_SignatureMethod: IXMLSignatureMethodType_ds;
begin
  Result := ChildNodes['SignatureMethod'] as IXMLSignatureMethodType_ds;
end;

function T341_XMLIXMLSignedInfoType_ds.Get_Reference: IXMLReferenceType_dsList341;
begin
  Result := FReference;
end;

{ T341_XMLIXMLCanonicalizationMethodType_ds }

function T341_XMLIXMLCanonicalizationMethodType_ds.Get_Algorithm: WideString;
begin
  Result := AttributeNodes['Algorithm'].Text;
end;

procedure T341_XMLIXMLCanonicalizationMethodType_ds.Set_Algorithm(Value: WideString);
begin
  SetAttribute('Algorithm', Value);
end;

{ T341_XMLIXMLSignatureMethodType_ds }

function T341_XMLIXMLSignatureMethodType_ds.Get_Algorithm: WideString;
begin
  Result := AttributeNodes['Algorithm'].Text;
end;

procedure T341_XMLIXMLSignatureMethodType_ds.Set_Algorithm(Value: WideString);
begin
  SetAttribute('Algorithm', Value);
end;

function T341_XMLIXMLSignatureMethodType_ds.Get_HMACOutputLength: Integer;
begin
  Result := ChildNodes['HMACOutputLength'].NodeValue;
end;

procedure T341_XMLIXMLSignatureMethodType_ds.Set_HMACOutputLength(Value: Integer);
begin
  ChildNodes['HMACOutputLength'].NodeValue := Value;
end;

{ T341_XMLIXMLReferenceType_ds }

procedure T341_XMLIXMLReferenceType_ds.AfterConstruction;
begin
  RegisterChildNode('Transforms', T341_XMLIXMLTransformsType_ds);
  RegisterChildNode('DigestMethod', T341_XMLIXMLDigestMethodType_ds);
  inherited;
end;

function T341_XMLIXMLReferenceType_ds.Get_Id: WideString;
begin
  Result := AttributeNodes['Id'].Text;
end;

procedure T341_XMLIXMLReferenceType_ds.Set_Id(Value: WideString);
begin
  SetAttribute('Id', Value);
end;

function T341_XMLIXMLReferenceType_ds.Get_URI: WideString;
begin
  Result := AttributeNodes['URI'].Text;
end;

procedure T341_XMLIXMLReferenceType_ds.Set_URI(Value: WideString);
begin
  SetAttribute('URI', Value);
end;

function T341_XMLIXMLReferenceType_ds.Get_Type_: WideString;
begin
  Result := AttributeNodes['Type'].Text;
end;

procedure T341_XMLIXMLReferenceType_ds.Set_Type_(Value: WideString);
begin
  SetAttribute('Type', Value);
end;

function T341_XMLIXMLReferenceType_ds.Get_Transforms: IXMLTransformsType_ds;
begin
  Result := ChildNodes['Transforms'] as IXMLTransformsType_ds;
end;

function T341_XMLIXMLReferenceType_ds.Get_DigestMethod: IXMLDigestMethodType_ds;
begin
  Result := ChildNodes['DigestMethod'] as IXMLDigestMethodType_ds;
end;

function T341_XMLIXMLReferenceType_ds.Get_DigestValue: WideString;
begin
  Result := ChildNodes['DigestValue'].Text;
end;

procedure T341_XMLIXMLReferenceType_ds.Set_DigestValue(Value: WideString);
begin
  ChildNodes['DigestValue'].NodeValue := Value;
end;

{ T341_XMLIXMLReferenceType_dsList341 }

function T341_XMLIXMLReferenceType_dsList341.Add: IXMLReferenceType_ds;
begin
  Result := AddItem(-1) as IXMLReferenceType_ds;
end;

function T341_XMLIXMLReferenceType_dsList341.Insert(const Index: Integer): IXMLReferenceType_ds;
begin
  Result := AddItem(Index) as IXMLReferenceType_ds;
end;

function T341_XMLIXMLReferenceType_dsList341.Get_Item(Index: Integer): IXMLReferenceType_ds;
begin
  Result := List[Index] as IXMLReferenceType_ds;
end;

{ T341_XMLIXMLTransformsType_ds }

procedure T341_XMLIXMLTransformsType_ds.AfterConstruction;
begin
  RegisterChildNode('Transform', T341_XMLIXMLTransformType_ds);
  ItemTag := 'Transform';
  ItemInterface := IXMLTransformType_ds;
  inherited;
end;

function T341_XMLIXMLTransformsType_ds.Get_Transform(Index: Integer): IXMLTransformType_ds;
begin
  Result := List[Index] as IXMLTransformType_ds;
end;

function T341_XMLIXMLTransformsType_ds.Add: IXMLTransformType_ds;
begin
  Result := AddItem(-1) as IXMLTransformType_ds;
end;

function T341_XMLIXMLTransformsType_ds.Insert(const Index: Integer): IXMLTransformType_ds;
begin
  Result := AddItem(Index) as IXMLTransformType_ds;
end;

{ T341_XMLIXMLTransformType_ds }

procedure T341_XMLIXMLTransformType_ds.AfterConstruction;
begin
  ItemTag := 'XPath';
  ItemInterface := IXMLNode;
  inherited;
end;

function T341_XMLIXMLTransformType_ds.Get_Algorithm: WideString;
begin
  Result := AttributeNodes['Algorithm'].Text;
end;

procedure T341_XMLIXMLTransformType_ds.Set_Algorithm(Value: WideString);
begin
  SetAttribute('Algorithm', Value);
end;

function T341_XMLIXMLTransformType_ds.Get_XPath(Index: Integer): WideString;
begin
  Result := List[Index].Text;
end;

function T341_XMLIXMLTransformType_ds.Add(const XPath: WideString): IXMLNode;
begin
  Result := AddItem(-1);
  Result.NodeValue := XPath;
end;

function T341_XMLIXMLTransformType_ds.Insert(const Index: Integer; const XPath: WideString): IXMLNode;
begin
  Result := AddItem(Index);
  Result.NodeValue := XPath;
end;

{ T341_XMLIXMLDigestMethodType_ds }

function T341_XMLIXMLDigestMethodType_ds.Get_Algorithm: WideString;
begin
  Result := AttributeNodes['Algorithm'].Text;
end;

procedure T341_XMLIXMLDigestMethodType_ds.Set_Algorithm(Value: WideString);
begin
  SetAttribute('Algorithm', Value);
end;

{ T341_XMLIXMLSignatureValueType_ds }

function T341_XMLIXMLSignatureValueType_ds.Get_Id: WideString;
begin
  Result := AttributeNodes['Id'].Text;
end;

procedure T341_XMLIXMLSignatureValueType_ds.Set_Id(Value: WideString);
begin
  SetAttribute('Id', Value);
end;

{ T341_XMLIXMLKeyInfoType_ds }

procedure T341_XMLIXMLKeyInfoType_ds.AfterConstruction;
begin
  RegisterChildNode('KeyValue', T341_XMLIXMLKeyValueType_ds);
  RegisterChildNode('RetrievalMethod', T341_XMLIXMLRetrievalMethodType_ds);
  RegisterChildNode('X509Data', T341_XMLIXMLX509DataType_ds);
  RegisterChildNode('PGPData', T341_XMLIXMLPGPDataType_ds);
  RegisterChildNode('SPKIData', T341_XMLIXMLSPKIDataType_ds);
  FKeyName := CreateCollection(T341_XMLString_List341, IXMLNode, 'KeyName') as I341_XMLString_List341;
  FKeyValue := CreateCollection(T341_XMLIXMLKeyValueType_dsList341, IXMLKeyValueType_ds, 'KeyValue') as IXMLKeyValueType_dsList341;
  FRetrievalMethod := CreateCollection(T341_XMLIXMLRetrievalMethodType_dsList341, IXMLRetrievalMethodType_ds, 'RetrievalMethod') as IXMLRetrievalMethodType_dsList341;
  FX509Data := CreateCollection(T341_XMLIXMLX509DataType_dsList341, IXMLX509DataType_ds, 'X509Data') as IXMLX509DataType_dsList341;
  FPGPData := CreateCollection(T341_XMLIXMLPGPDataType_dsList341, IXMLPGPDataType_ds, 'PGPData') as IXMLPGPDataType_dsList341;
  FSPKIData := CreateCollection(T341_XMLIXMLSPKIDataType_dsList341, IXMLSPKIDataType_ds, 'SPKIData') as IXMLSPKIDataType_dsList341;
  FMgmtData := CreateCollection(T341_XMLString_List341, IXMLNode, 'MgmtData') as I341_XMLString_List341;
  inherited;
end;

function T341_XMLIXMLKeyInfoType_ds.Get_Id: WideString;
begin
  Result := AttributeNodes['Id'].Text;
end;

procedure T341_XMLIXMLKeyInfoType_ds.Set_Id(Value: WideString);
begin
  SetAttribute('Id', Value);
end;

function T341_XMLIXMLKeyInfoType_ds.Get_KeyName: I341_XMLString_List341;
begin
  Result := FKeyName;
end;

function T341_XMLIXMLKeyInfoType_ds.Get_KeyValue: IXMLKeyValueType_dsList341;
begin
  Result := FKeyValue;
end;

function T341_XMLIXMLKeyInfoType_ds.Get_RetrievalMethod: IXMLRetrievalMethodType_dsList341;
begin
  Result := FRetrievalMethod;
end;

function T341_XMLIXMLKeyInfoType_ds.Get_X509Data: IXMLX509DataType_dsList341;
begin
  Result := FX509Data;
end;

function T341_XMLIXMLKeyInfoType_ds.Get_PGPData: IXMLPGPDataType_dsList341;
begin
  Result := FPGPData;
end;

function T341_XMLIXMLKeyInfoType_ds.Get_SPKIData: IXMLSPKIDataType_dsList341;
begin
  Result := FSPKIData;
end;

function T341_XMLIXMLKeyInfoType_ds.Get_MgmtData: I341_XMLString_List341;
begin
  Result := FMgmtData;
end;

{ T341_XMLIXMLKeyValueType_ds }

procedure T341_XMLIXMLKeyValueType_ds.AfterConstruction;
begin
  RegisterChildNode('DSAKeyValue', T341_XMLIXMLDSAKeyValueType_ds);
  RegisterChildNode('RSAKeyValue', T341_XMLIXMLRSAKeyValueType_ds);
  inherited;
end;

function T341_XMLIXMLKeyValueType_ds.Get_DSAKeyValue: IXMLDSAKeyValueType_ds;
begin
  Result := ChildNodes['DSAKeyValue'] as IXMLDSAKeyValueType_ds;
end;

function T341_XMLIXMLKeyValueType_ds.Get_RSAKeyValue: IXMLRSAKeyValueType_ds;
begin
  Result := ChildNodes['RSAKeyValue'] as IXMLRSAKeyValueType_ds;
end;

{ T341_XMLIXMLKeyValueType_dsList341 }

function T341_XMLIXMLKeyValueType_dsList341.Add: IXMLKeyValueType_ds;
begin
  Result := AddItem(-1) as IXMLKeyValueType_ds;
end;

function T341_XMLIXMLKeyValueType_dsList341.Insert(const Index: Integer): IXMLKeyValueType_ds;
begin
  Result := AddItem(Index) as IXMLKeyValueType_ds;
end;

function T341_XMLIXMLKeyValueType_dsList341.Get_Item(Index: Integer): IXMLKeyValueType_ds;
begin
  Result := List[Index] as IXMLKeyValueType_ds;
end;

{ T341_XMLIXMLDSAKeyValueType_ds }

function T341_XMLIXMLDSAKeyValueType_ds.Get_P: WideString;
begin
  Result := ChildNodes[WideString('P')].Text;
end;

procedure T341_XMLIXMLDSAKeyValueType_ds.Set_P(Value: WideString);
begin
  ChildNodes[WideString('P')].NodeValue := Value;
end;

function T341_XMLIXMLDSAKeyValueType_ds.Get_Q: WideString;
begin
  Result := ChildNodes[WideString('Q')].Text;
end;

procedure T341_XMLIXMLDSAKeyValueType_ds.Set_Q(Value: WideString);
begin
  ChildNodes[WideString('Q')].NodeValue := Value;
end;

function T341_XMLIXMLDSAKeyValueType_ds.Get_G: WideString;
begin
  Result := ChildNodes[WideString('G')].Text;
end;

procedure T341_XMLIXMLDSAKeyValueType_ds.Set_G(Value: WideString);
begin
  ChildNodes[WideString('G')].NodeValue := Value;
end;

function T341_XMLIXMLDSAKeyValueType_ds.Get_Y: WideString;
begin
  Result := ChildNodes[WideString('Y')].Text;
end;

procedure T341_XMLIXMLDSAKeyValueType_ds.Set_Y(Value: WideString);
begin
  ChildNodes[WideString('Y')].NodeValue := Value;
end;

function T341_XMLIXMLDSAKeyValueType_ds.Get_J: WideString;
begin
  Result := ChildNodes[WideString('J')].Text;
end;

procedure T341_XMLIXMLDSAKeyValueType_ds.Set_J(Value: WideString);
begin
  ChildNodes[WideString('J')].NodeValue := Value;
end;

function T341_XMLIXMLDSAKeyValueType_ds.Get_Seed: WideString;
begin
  Result := ChildNodes['Seed'].Text;
end;

procedure T341_XMLIXMLDSAKeyValueType_ds.Set_Seed(Value: WideString);
begin
  ChildNodes['Seed'].NodeValue := Value;
end;

function T341_XMLIXMLDSAKeyValueType_ds.Get_PgenCounter: WideString;
begin
  Result := ChildNodes['PgenCounter'].Text;
end;

procedure T341_XMLIXMLDSAKeyValueType_ds.Set_PgenCounter(Value: WideString);
begin
  ChildNodes['PgenCounter'].NodeValue := Value;
end;

{ T341_XMLIXMLRSAKeyValueType_ds }

function T341_XMLIXMLRSAKeyValueType_ds.Get_Modulus: WideString;
begin
  Result := ChildNodes['Modulus'].Text;
end;

procedure T341_XMLIXMLRSAKeyValueType_ds.Set_Modulus(Value: WideString);
begin
  ChildNodes['Modulus'].NodeValue := Value;
end;

function T341_XMLIXMLRSAKeyValueType_ds.Get_Exponent: WideString;
begin
  Result := ChildNodes['Exponent'].Text;
end;

procedure T341_XMLIXMLRSAKeyValueType_ds.Set_Exponent(Value: WideString);
begin
  ChildNodes['Exponent'].NodeValue := Value;
end;

{ T341_XMLIXMLRetrievalMethodType_ds }

procedure T341_XMLIXMLRetrievalMethodType_ds.AfterConstruction;
begin
  RegisterChildNode('Transforms', T341_XMLIXMLTransformsType_ds);
  inherited;
end;

function T341_XMLIXMLRetrievalMethodType_ds.Get_URI: WideString;
begin
  Result := AttributeNodes['URI'].Text;
end;

procedure T341_XMLIXMLRetrievalMethodType_ds.Set_URI(Value: WideString);
begin
  SetAttribute('URI', Value);
end;

function T341_XMLIXMLRetrievalMethodType_ds.Get_Type_: WideString;
begin
  Result := AttributeNodes['Type'].Text;
end;

procedure T341_XMLIXMLRetrievalMethodType_ds.Set_Type_(Value: WideString);
begin
  SetAttribute('Type', Value);
end;

function T341_XMLIXMLRetrievalMethodType_ds.Get_Transforms: IXMLTransformsType_ds;
begin
  Result := ChildNodes['Transforms'] as IXMLTransformsType_ds;
end;

{ T341_XMLIXMLRetrievalMethodType_dsList341 }

function T341_XMLIXMLRetrievalMethodType_dsList341.Add: IXMLRetrievalMethodType_ds;
begin
  Result := AddItem(-1) as IXMLRetrievalMethodType_ds;
end;

function T341_XMLIXMLRetrievalMethodType_dsList341.Insert(const Index: Integer): IXMLRetrievalMethodType_ds;
begin
  Result := AddItem(Index) as IXMLRetrievalMethodType_ds;
end;

function T341_XMLIXMLRetrievalMethodType_dsList341.Get_Item(Index: Integer): IXMLRetrievalMethodType_ds;
begin
  Result := List[Index] as IXMLRetrievalMethodType_ds;
end;

{ T341_XMLIXMLX509DataType_ds }

procedure T341_XMLIXMLX509DataType_ds.AfterConstruction;
begin
  RegisterChildNode('X509IssuerSerial', T341_XMLIXMLX509IssuerSerialType_ds);
  FX509IssuerSerial := CreateCollection(T341_XMLIXMLX509IssuerSerialType_dsList341, IXMLX509IssuerSerialType_ds, 'X509IssuerSerial') as IXMLX509IssuerSerialType_dsList341;
  FX509SKI := CreateCollection(T341_XMLBase64BinaryList341, IXMLNode, 'X509SKI') as I341_XMLBase64BinaryList341;
  FX509SubjectName := CreateCollection(T341_XMLString_List341, IXMLNode, 'X509SubjectName') as I341_XMLString_List341;
  FX509Certificate := CreateCollection(T341_XMLBase64BinaryList341, IXMLNode, 'X509Certificate') as I341_XMLBase64BinaryList341;
  FX509CRL := CreateCollection(T341_XMLBase64BinaryList341, IXMLNode, 'X509CRL') as I341_XMLBase64BinaryList341;
  inherited;
end;

function T341_XMLIXMLX509DataType_ds.Get_X509IssuerSerial: IXMLX509IssuerSerialType_dsList341;
begin
  Result := FX509IssuerSerial;
end;

function T341_XMLIXMLX509DataType_ds.Get_X509SKI: I341_XMLBase64BinaryList341;
begin
  Result := FX509SKI;
end;

function T341_XMLIXMLX509DataType_ds.Get_X509SubjectName: I341_XMLString_List341;
begin
  Result := FX509SubjectName;
end;

function T341_XMLIXMLX509DataType_ds.Get_X509Certificate: I341_XMLBase64BinaryList341;
begin
  Result := FX509Certificate;
end;

function T341_XMLIXMLX509DataType_ds.Get_X509CRL: I341_XMLBase64BinaryList341;
begin
  Result := FX509CRL;
end;

{ T341_XMLIXMLX509DataType_dsList341 }

function T341_XMLIXMLX509DataType_dsList341.Add: IXMLX509DataType_ds;
begin
  Result := AddItem(-1) as IXMLX509DataType_ds;
end;

function T341_XMLIXMLX509DataType_dsList341.Insert(const Index: Integer): IXMLX509DataType_ds;
begin
  Result := AddItem(Index) as IXMLX509DataType_ds;
end;

function T341_XMLIXMLX509DataType_dsList341.Get_Item(Index: Integer): IXMLX509DataType_ds;
begin
  Result := List[Index] as IXMLX509DataType_ds;
end;

{ T341_XMLIXMLX509IssuerSerialType_ds }

function T341_XMLIXMLX509IssuerSerialType_ds.Get_X509IssuerName: WideString;
begin
  Result := ChildNodes['X509IssuerName'].Text;
end;

procedure T341_XMLIXMLX509IssuerSerialType_ds.Set_X509IssuerName(Value: WideString);
begin
  ChildNodes['X509IssuerName'].NodeValue := Value;
end;

function T341_XMLIXMLX509IssuerSerialType_ds.Get_X509SerialNumber: Integer;
begin
  Result := ChildNodes['X509SerialNumber'].NodeValue;
end;

procedure T341_XMLIXMLX509IssuerSerialType_ds.Set_X509SerialNumber(Value: Integer);
begin
  ChildNodes['X509SerialNumber'].NodeValue := Value;
end;

{ T341_XMLIXMLX509IssuerSerialType_dsList341 }

function T341_XMLIXMLX509IssuerSerialType_dsList341.Add: IXMLX509IssuerSerialType_ds;
begin
  Result := AddItem(-1) as IXMLX509IssuerSerialType_ds;
end;

function T341_XMLIXMLX509IssuerSerialType_dsList341.Insert(const Index: Integer): IXMLX509IssuerSerialType_ds;
begin
  Result := AddItem(Index) as IXMLX509IssuerSerialType_ds;
end;

function T341_XMLIXMLX509IssuerSerialType_dsList341.Get_Item(Index: Integer): IXMLX509IssuerSerialType_ds;
begin
  Result := List[Index] as IXMLX509IssuerSerialType_ds;
end;

{ T341_XMLIXMLPGPDataType_ds }

function T341_XMLIXMLPGPDataType_ds.Get_PGPKeyID: WideString;
begin
  Result := ChildNodes['PGPKeyID'].Text;
end;

procedure T341_XMLIXMLPGPDataType_ds.Set_PGPKeyID(Value: WideString);
begin
  ChildNodes['PGPKeyID'].NodeValue := Value;
end;

function T341_XMLIXMLPGPDataType_ds.Get_PGPKeyPacket: WideString;
begin
  Result := ChildNodes['PGPKeyPacket'].Text;
end;

procedure T341_XMLIXMLPGPDataType_ds.Set_PGPKeyPacket(Value: WideString);
begin
  ChildNodes['PGPKeyPacket'].NodeValue := Value;
end;

{ T341_XMLIXMLPGPDataType_dsList341 }

function T341_XMLIXMLPGPDataType_dsList341.Add: IXMLPGPDataType_ds;
begin
  Result := AddItem(-1) as IXMLPGPDataType_ds;
end;

function T341_XMLIXMLPGPDataType_dsList341.Insert(const Index: Integer): IXMLPGPDataType_ds;
begin
  Result := AddItem(Index) as IXMLPGPDataType_ds;
end;

function T341_XMLIXMLPGPDataType_dsList341.Get_Item(Index: Integer): IXMLPGPDataType_ds;
begin
  Result := List[Index] as IXMLPGPDataType_ds;
end;

{ T341_XMLIXMLSPKIDataType_ds }

procedure T341_XMLIXMLSPKIDataType_ds.AfterConstruction;
begin
  ItemTag := 'SPKISexp';
  ItemInterface := IXMLNode;
  inherited;
end;

function T341_XMLIXMLSPKIDataType_ds.Get_SPKISexp(Index: Integer): WideString;
begin
  Result := List[Index].Text;
end;

function T341_XMLIXMLSPKIDataType_ds.Add(const SPKISexp: WideString): IXMLNode;
begin
  Result := AddItem(-1);
  Result.NodeValue := SPKISexp;
end;

function T341_XMLIXMLSPKIDataType_ds.Insert(const Index: Integer; const SPKISexp: WideString): IXMLNode;
begin
  Result := AddItem(Index);
  Result.NodeValue := SPKISexp;
end;

{ T341_XMLIXMLSPKIDataType_dsList341 }

function T341_XMLIXMLSPKIDataType_dsList341.Add: IXMLSPKIDataType_ds;
begin
  Result := AddItem(-1) as IXMLSPKIDataType_ds;
end;

function T341_XMLIXMLSPKIDataType_dsList341.Insert(const Index: Integer): IXMLSPKIDataType_ds;
begin
  Result := AddItem(Index) as IXMLSPKIDataType_ds;
end;

function T341_XMLIXMLSPKIDataType_dsList341.Get_Item(Index: Integer): IXMLSPKIDataType_ds;
begin
  Result := List[Index] as IXMLSPKIDataType_ds;
end;

{ T341_XMLIXMLObjectType_ds }

function T341_XMLIXMLObjectType_ds.Get_Id: WideString;
begin
  Result := AttributeNodes['Id'].Text;
end;

procedure T341_XMLIXMLObjectType_ds.Set_Id(Value: WideString);
begin
  SetAttribute('Id', Value);
end;

function T341_XMLIXMLObjectType_ds.Get_MimeType: WideString;
begin
  Result := AttributeNodes['MimeType'].Text;
end;

procedure T341_XMLIXMLObjectType_ds.Set_MimeType(Value: WideString);
begin
  SetAttribute('MimeType', Value);
end;

function T341_XMLIXMLObjectType_ds.Get_Encoding: WideString;
begin
  Result := AttributeNodes['Encoding'].Text;
end;

procedure T341_XMLIXMLObjectType_ds.Set_Encoding(Value: WideString);
begin
  SetAttribute('Encoding', Value);
end;

{ T341_XMLIXMLObjectType_dsList341 }

function T341_XMLIXMLObjectType_dsList341.Add: IXMLObjectType_ds;
begin
  Result := AddItem(-1) as IXMLObjectType_ds;
end;

function T341_XMLIXMLObjectType_dsList341.Insert(const Index: Integer): IXMLObjectType_ds;
begin
  Result := AddItem(Index) as IXMLObjectType_ds;
end;

function T341_XMLIXMLObjectType_dsList341.Get_Item(Index: Integer): IXMLObjectType_ds;
begin
  Result := List[Index] as IXMLObjectType_ds;
end;

{ T341_XMLSignature }

{ T341_XMLCtm_internacaoResumoGuia }

procedure T341_XMLCtm_internacaoResumoGuia.AfterConstruction;
begin
  RegisterChildNode('cabecalhoGuia', T341_XMLCt_guiaCabecalho);
  RegisterChildNode('dadosAutorizacao', T341_XMLCt_autorizacaoInternacao);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('dadosExecutante', T341_XMLCtm_internacaoResumoGuia_dadosExecutante);
  RegisterChildNode('dadosInternacao', T341_XMLCtm_internacaoDados);
  RegisterChildNode('dadosSaidaInternacao', T341_XMLCtm_internacaoDadosSaida);
  RegisterChildNode('procedimentosExecutados', T341_XMLCtm_internacaoResumoGuia_procedimentosExecutados);
  RegisterChildNode('valorTotal', T341_XMLCt_guiaValorTotal);
  RegisterChildNode('outrasDespesas', T341_XMLCt_outrasDespesas);
  RegisterChildNode('assinaturaDigitalGuia', T341_XMLSignature);
  inherited;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_CabecalhoGuia: I341_XMLCt_guiaCabecalho;
begin
  Result := ChildNodes['cabecalhoGuia'] as I341_XMLCt_guiaCabecalho;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_NumeroGuiaSolicitacaoInternacao: WideString;
begin
  Result := ChildNodes['numeroGuiaSolicitacaoInternacao'].Text;
end;

procedure T341_XMLCtm_internacaoResumoGuia.Set_NumeroGuiaSolicitacaoInternacao(Value: WideString);
begin
  ChildNodes['numeroGuiaSolicitacaoInternacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_DadosAutorizacao: I341_XMLCt_autorizacaoInternacao;
begin
  Result := ChildNodes['dadosAutorizacao'] as I341_XMLCt_autorizacaoInternacao;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_DadosExecutante: I341_XMLCtm_internacaoResumoGuia_dadosExecutante;
begin
  Result := ChildNodes['dadosExecutante'] as I341_XMLCtm_internacaoResumoGuia_dadosExecutante;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_DadosInternacao: I341_XMLCtm_internacaoDados;
begin
  Result := ChildNodes['dadosInternacao'] as I341_XMLCtm_internacaoDados;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_DadosSaidaInternacao: I341_XMLCtm_internacaoDadosSaida;
begin
  Result := ChildNodes['dadosSaidaInternacao'] as I341_XMLCtm_internacaoDadosSaida;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_ProcedimentosExecutados: I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados;
begin
  Result := ChildNodes['procedimentosExecutados'] as I341_XMLCtm_internacaoResumoGuia_procedimentosExecutados;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_ValorTotal: I341_XMLCt_guiaValorTotal;
begin
  Result := ChildNodes['valorTotal'] as I341_XMLCt_guiaValorTotal;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_OutrasDespesas: I341_XMLCt_outrasDespesas;
begin
  Result := ChildNodes['outrasDespesas'] as I341_XMLCt_outrasDespesas;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_internacaoResumoGuia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoResumoGuia.Get_AssinaturaDigitalGuia: I341_XMLSignature;
begin
  Result := ChildNodes['assinaturaDigitalGuia'] as I341_XMLSignature;
end;

{ T341_XMLCtm_internacaoResumoGuiaList341 }

function T341_XMLCtm_internacaoResumoGuiaList341.Add: I341_XMLCtm_internacaoResumoGuia;
begin
  Result := AddItem(-1) as I341_XMLCtm_internacaoResumoGuia;
end;

function T341_XMLCtm_internacaoResumoGuiaList341.Insert(const Index: Integer): I341_XMLCtm_internacaoResumoGuia;
begin
  Result := AddItem(Index) as I341_XMLCtm_internacaoResumoGuia;
end;

function T341_XMLCtm_internacaoResumoGuiaList341.Get_Item(Index: Integer): I341_XMLCtm_internacaoResumoGuia;
begin
  Result := List[Index] as I341_XMLCtm_internacaoResumoGuia;
end;

{ T341_XMLCt_autorizacaoInternacao }

function T341_XMLCt_autorizacaoInternacao.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_autorizacaoInternacao.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoInternacao.Get_DataAutorizacao: WideString;
begin
  Result := ChildNodes['dataAutorizacao'].Text;
end;

procedure T341_XMLCt_autorizacaoInternacao.Set_DataAutorizacao(Value: WideString);
begin
  ChildNodes['dataAutorizacao'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoInternacao.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_autorizacaoInternacao.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoInternacao.Get_DataValidadeSenha: WideString;
begin
  Result := ChildNodes['dataValidadeSenha'].Text;
end;

procedure T341_XMLCt_autorizacaoInternacao.Set_DataValidadeSenha(Value: WideString);
begin
  ChildNodes['dataValidadeSenha'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoInternacao.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCt_autorizacaoInternacao.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCt_autorizacaoInternacao.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCt_autorizacaoInternacao.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

{ T341_XMLCtm_internacaoResumoGuia_dadosExecutante }

procedure T341_XMLCtm_internacaoResumoGuia_dadosExecutante.AfterConstruction;
begin
  RegisterChildNode('contratadoExecutante', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCtm_internacaoResumoGuia_dadosExecutante.Get_ContratadoExecutante: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['contratadoExecutante'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_internacaoResumoGuia_dadosExecutante.Get_CNES: WideString;
begin
  Result := ChildNodes['CNES'].Text;
end;

procedure T341_XMLCtm_internacaoResumoGuia_dadosExecutante.Set_CNES(Value: WideString);
begin
  ChildNodes['CNES'].NodeValue := Value;
end;

{ T341_XMLCtm_internacaoDados }

procedure T341_XMLCtm_internacaoDados.AfterConstruction;
begin
  RegisterChildNode('declaracoes', T341_XMLCtm_internacaoDados_declaracoes);
  FDeclaracoes := CreateCollection(T341_XMLCtm_internacaoDados_declaracoesList341, I341_XMLCtm_internacaoDados_declaracoes, 'declaracoes') as I341_XMLCtm_internacaoDados_declaracoesList341;
  inherited;
end;

function T341_XMLCtm_internacaoDados.Get_CaraterAtendimento: WideString;
begin
  Result := ChildNodes['caraterAtendimento'].Text;
end;

procedure T341_XMLCtm_internacaoDados.Set_CaraterAtendimento(Value: WideString);
begin
  ChildNodes['caraterAtendimento'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados.Get_TipoFaturamento: WideString;
begin
  Result := ChildNodes['tipoFaturamento'].Text;
end;

procedure T341_XMLCtm_internacaoDados.Set_TipoFaturamento(Value: WideString);
begin
  ChildNodes['tipoFaturamento'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados.Get_DataInicioFaturamento: WideString;
begin
  Result := ChildNodes['dataInicioFaturamento'].Text;
end;

procedure T341_XMLCtm_internacaoDados.Set_DataInicioFaturamento(Value: WideString);
begin
  ChildNodes['dataInicioFaturamento'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados.Get_HoraInicioFaturamento: WideString;
begin
  Result := ChildNodes['horaInicioFaturamento'].Text;
end;

procedure T341_XMLCtm_internacaoDados.Set_HoraInicioFaturamento(Value: WideString);
begin
  ChildNodes['horaInicioFaturamento'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados.Get_DataFinalFaturamento: WideString;
begin
  Result := ChildNodes['dataFinalFaturamento'].Text;
end;

procedure T341_XMLCtm_internacaoDados.Set_DataFinalFaturamento(Value: WideString);
begin
  ChildNodes['dataFinalFaturamento'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados.Get_HoraFinalFaturamento: WideString;
begin
  Result := ChildNodes['horaFinalFaturamento'].Text;
end;

procedure T341_XMLCtm_internacaoDados.Set_HoraFinalFaturamento(Value: WideString);
begin
  ChildNodes['horaFinalFaturamento'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados.Get_TipoInternacao: WideString;
begin
  Result := ChildNodes['tipoInternacao'].Text;
end;

procedure T341_XMLCtm_internacaoDados.Set_TipoInternacao(Value: WideString);
begin
  ChildNodes['tipoInternacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados.Get_RegimeInternacao: WideString;
begin
  Result := ChildNodes['regimeInternacao'].Text;
end;

procedure T341_XMLCtm_internacaoDados.Set_RegimeInternacao(Value: WideString);
begin
  ChildNodes['regimeInternacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados.Get_Declaracoes: I341_XMLCtm_internacaoDados_declaracoesList341;
begin
  Result := FDeclaracoes;
end;

{ T341_XMLCtm_internacaoDados_declaracoes }

function T341_XMLCtm_internacaoDados_declaracoes.Get_DeclaracaoNascido: WideString;
begin
  Result := ChildNodes['declaracaoNascido'].Text;
end;

procedure T341_XMLCtm_internacaoDados_declaracoes.Set_DeclaracaoNascido(Value: WideString);
begin
  ChildNodes['declaracaoNascido'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados_declaracoes.Get_DiagnosticoObito: WideString;
begin
  Result := ChildNodes['diagnosticoObito'].Text;
end;

procedure T341_XMLCtm_internacaoDados_declaracoes.Set_DiagnosticoObito(Value: WideString);
begin
  ChildNodes['diagnosticoObito'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados_declaracoes.Get_DeclaracaoObito: WideString;
begin
  Result := ChildNodes['declaracaoObito'].Text;
end;

procedure T341_XMLCtm_internacaoDados_declaracoes.Set_DeclaracaoObito(Value: WideString);
begin
  ChildNodes['declaracaoObito'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDados_declaracoes.Get_IndicadorDORN: WideString;
begin
  Result := ChildNodes['indicadorDORN'].Text;
end;

procedure T341_XMLCtm_internacaoDados_declaracoes.Set_IndicadorDORN(Value: WideString);
begin
  ChildNodes['indicadorDORN'].NodeValue := Value;
end;

{ T341_XMLCtm_internacaoDados_declaracoesList341 }

function T341_XMLCtm_internacaoDados_declaracoesList341.Add: I341_XMLCtm_internacaoDados_declaracoes;
begin
  Result := AddItem(-1) as I341_XMLCtm_internacaoDados_declaracoes;
end;

function T341_XMLCtm_internacaoDados_declaracoesList341.Insert(const Index: Integer): I341_XMLCtm_internacaoDados_declaracoes;
begin
  Result := AddItem(Index) as I341_XMLCtm_internacaoDados_declaracoes;
end;

function T341_XMLCtm_internacaoDados_declaracoesList341.Get_Item(Index: Integer): I341_XMLCtm_internacaoDados_declaracoes;
begin
  Result := List[Index] as I341_XMLCtm_internacaoDados_declaracoes;
end;

{ T341_XMLCtm_internacaoDadosSaida }

procedure T341_XMLCtm_internacaoDadosSaida.AfterConstruction;
begin
  FDiagnostico := CreateCollection(T341_XMLSt_texto4List341, IXMLNode, 'diagnostico') as I341_XMLSt_texto4List341;
  inherited;
end;

function T341_XMLCtm_internacaoDadosSaida.Get_Diagnostico: I341_XMLSt_texto4List341;
begin
  Result := FDiagnostico;
end;

function T341_XMLCtm_internacaoDadosSaida.Get_IndicadorAcidente: WideString;
begin
  Result := ChildNodes['indicadorAcidente'].Text;
end;

procedure T341_XMLCtm_internacaoDadosSaida.Set_IndicadorAcidente(Value: WideString);
begin
  ChildNodes['indicadorAcidente'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoDadosSaida.Get_MotivoEncerramento: WideString;
begin
  Result := ChildNodes['motivoEncerramento'].Text;
end;

procedure T341_XMLCtm_internacaoDadosSaida.Set_MotivoEncerramento(Value: WideString);
begin
  ChildNodes['motivoEncerramento'].NodeValue := Value;
end;

{ T341_XMLCtm_internacaoResumoGuia_procedimentosExecutados }

procedure T341_XMLCtm_internacaoResumoGuia_procedimentosExecutados.AfterConstruction;
begin
  RegisterChildNode('procedimentoExecutado', T341_XMLCt_procedimentoExecutadoInt);
  ItemTag := 'procedimentoExecutado';
  ItemInterface := I341_XMLCt_procedimentoExecutadoInt;
  inherited;
end;

function T341_XMLCtm_internacaoResumoGuia_procedimentosExecutados.Get_ProcedimentoExecutado(Index: Integer): I341_XMLCt_procedimentoExecutadoInt;
begin
  Result := List[Index] as I341_XMLCt_procedimentoExecutadoInt;
end;

function T341_XMLCtm_internacaoResumoGuia_procedimentosExecutados.Add: I341_XMLCt_procedimentoExecutadoInt;
begin
  Result := AddItem(-1) as I341_XMLCt_procedimentoExecutadoInt;
end;

function T341_XMLCtm_internacaoResumoGuia_procedimentosExecutados.Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoInt;
begin
  Result := AddItem(Index) as I341_XMLCt_procedimentoExecutadoInt;
end;

{ T341_XMLCt_procedimentoExecutadoInt }

procedure T341_XMLCt_procedimentoExecutadoInt.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  RegisterChildNode('identEquipe', T341_XMLCt_procedimentoExecutadoInt_identEquipe);
  FIdentEquipe := CreateCollection(T341_XMLCt_procedimentoExecutadoInt_identEquipeList341, I341_XMLCt_procedimentoExecutadoInt_identEquipe, 'identEquipe') as I341_XMLCt_procedimentoExecutadoInt_identEquipeList341;
  inherited;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_DataExecucao: WideString;
begin
  Result := ChildNodes['dataExecucao'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_DataExecucao(Value: WideString);
begin
  ChildNodes['dataExecucao'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_HoraInicial: WideString;
begin
  Result := ChildNodes['horaInicial'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_HoraInicial(Value: WideString);
begin
  ChildNodes['horaInicial'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_HoraFinal: WideString;
begin
  Result := ChildNodes['horaFinal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_HoraFinal(Value: WideString);
begin
  ChildNodes['horaFinal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_QuantidadeExecutada: Integer;
begin
  Result := ChildNodes['quantidadeExecutada'].NodeValue;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_QuantidadeExecutada(Value: Integer);
begin
  ChildNodes['quantidadeExecutada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_ViaAcesso: WideString;
begin
  Result := ChildNodes['viaAcesso'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_ViaAcesso(Value: WideString);
begin
  ChildNodes['viaAcesso'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_TecnicaUtilizada: WideString;
begin
  Result := ChildNodes['tecnicaUtilizada'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_TecnicaUtilizada(Value: WideString);
begin
  ChildNodes['tecnicaUtilizada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_ReducaoAcrescimo: WideString;
begin
  Result := ChildNodes['reducaoAcrescimo'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_ReducaoAcrescimo(Value: WideString);
begin
  ChildNodes['reducaoAcrescimo'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_ValorUnitario: WideString;
begin
  Result := ChildNodes['valorUnitario'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_ValorUnitario(Value: WideString);
begin
  ChildNodes['valorUnitario'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_ValorTotal: WideString;
begin
  Result := ChildNodes['valorTotal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoInt.Set_ValorTotal(Value: WideString);
begin
  ChildNodes['valorTotal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoInt.Get_IdentEquipe: I341_XMLCt_procedimentoExecutadoInt_identEquipeList341;
begin
  Result := FIdentEquipe;
end;

{ T341_XMLCt_procedimentoExecutadoInt_identEquipe }

procedure T341_XMLCt_procedimentoExecutadoInt_identEquipe.AfterConstruction;
begin
  RegisterChildNode('identificacaoEquipe', T341_XMLCt_identEquipe);
  inherited;
end;

function T341_XMLCt_procedimentoExecutadoInt_identEquipe.Get_IdentificacaoEquipe: I341_XMLCt_identEquipe;
begin
  Result := ChildNodes['identificacaoEquipe'] as I341_XMLCt_identEquipe;
end;

{ T341_XMLCt_procedimentoExecutadoInt_identEquipeList341 }

function T341_XMLCt_procedimentoExecutadoInt_identEquipeList341.Add: I341_XMLCt_procedimentoExecutadoInt_identEquipe;
begin
  Result := AddItem(-1) as I341_XMLCt_procedimentoExecutadoInt_identEquipe;
end;

function T341_XMLCt_procedimentoExecutadoInt_identEquipeList341.Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoInt_identEquipe;
begin
  Result := AddItem(Index) as I341_XMLCt_procedimentoExecutadoInt_identEquipe;
end;

function T341_XMLCt_procedimentoExecutadoInt_identEquipeList341.Get_Item(Index: Integer): I341_XMLCt_procedimentoExecutadoInt_identEquipe;
begin
  Result := List[Index] as I341_XMLCt_procedimentoExecutadoInt_identEquipe;
end;

{ T341_XMLCt_identEquipe }

procedure T341_XMLCt_identEquipe.AfterConstruction;
begin
  RegisterChildNode('codProfissional', T341_XMLCt_identEquipe_codProfissional);
  inherited;
end;

function T341_XMLCt_identEquipe.Get_GrauPart: WideString;
begin
  Result := ChildNodes['grauPart'].Text;
end;

procedure T341_XMLCt_identEquipe.Set_GrauPart(Value: WideString);
begin
  ChildNodes['grauPart'].NodeValue := Value;
end;

function T341_XMLCt_identEquipe.Get_CodProfissional: I341_XMLCt_identEquipe_codProfissional;
begin
  Result := ChildNodes['codProfissional'] as I341_XMLCt_identEquipe_codProfissional;
end;

function T341_XMLCt_identEquipe.Get_NomeProf: WideString;
begin
  Result := ChildNodes['nomeProf'].Text;
end;

procedure T341_XMLCt_identEquipe.Set_NomeProf(Value: WideString);
begin
  ChildNodes['nomeProf'].NodeValue := Value;
end;

function T341_XMLCt_identEquipe.Get_Conselho: WideString;
begin
  Result := ChildNodes['conselho'].Text;
end;

procedure T341_XMLCt_identEquipe.Set_Conselho(Value: WideString);
begin
  ChildNodes['conselho'].NodeValue := Value;
end;

function T341_XMLCt_identEquipe.Get_NumeroConselhoProfissional: WideString;
begin
  Result := ChildNodes['numeroConselhoProfissional'].Text;
end;

procedure T341_XMLCt_identEquipe.Set_NumeroConselhoProfissional(Value: WideString);
begin
  ChildNodes['numeroConselhoProfissional'].NodeValue := Value;
end;

function T341_XMLCt_identEquipe.Get_UF: WideString;
begin
  Result := ChildNodes['UF'].Text;
end;

procedure T341_XMLCt_identEquipe.Set_UF(Value: WideString);
begin
  ChildNodes['UF'].NodeValue := Value;
end;

function T341_XMLCt_identEquipe.Get_CBOS: WideString;
begin
  Result := ChildNodes['CBOS'].Text;
end;

procedure T341_XMLCt_identEquipe.Set_CBOS(Value: WideString);
begin
  ChildNodes['CBOS'].NodeValue := Value;
end;

{ T341_XMLCt_identEquipe_codProfissional }

function T341_XMLCt_identEquipe_codProfissional.Get_CodigoPrestadorNaOperadora: WideString;
begin
  Result := ChildNodes['codigoPrestadorNaOperadora'].Text;
end;

procedure T341_XMLCt_identEquipe_codProfissional.Set_CodigoPrestadorNaOperadora(Value: WideString);
begin
  ChildNodes['codigoPrestadorNaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_identEquipe_codProfissional.Get_CpfContratado: WideString;
begin
  Result := ChildNodes['cpfContratado'].Text;
end;

procedure T341_XMLCt_identEquipe_codProfissional.Set_CpfContratado(Value: WideString);
begin
  ChildNodes['cpfContratado'].NodeValue := Value;
end;

{ T341_XMLCtm_honorarioIndividualGuia }

procedure T341_XMLCtm_honorarioIndividualGuia.AfterConstruction;
begin
  RegisterChildNode('cabecalhoGuia', T341_XMLCt_guiaCabecalho);
  RegisterChildNode('beneficiario', T341_XMLCtm_honorarioIndividualGuia_beneficiario);
  RegisterChildNode('localContratado', T341_XMLCtm_honorarioIndividualGuia_localContratado);
  RegisterChildNode('dadosContratadoExecutante', T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante);
  RegisterChildNode('dadosInternacao', T341_XMLCtm_honorarioIndividualGuia_dadosInternacao);
  RegisterChildNode('procedimentosRealizados', T341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados);
  RegisterChildNode('assinaturaDigitalGuia', T341_XMLSignature);
  inherited;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_CabecalhoGuia: I341_XMLCt_guiaCabecalho;
begin
  Result := ChildNodes['cabecalhoGuia'] as I341_XMLCt_guiaCabecalho;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_GuiaSolicInternacao: WideString;
begin
  Result := ChildNodes['guiaSolicInternacao'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia.Set_GuiaSolicInternacao(Value: WideString);
begin
  ChildNodes['guiaSolicInternacao'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_Beneficiario: I341_XMLCtm_honorarioIndividualGuia_beneficiario;
begin
  Result := ChildNodes['beneficiario'] as I341_XMLCtm_honorarioIndividualGuia_beneficiario;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_LocalContratado: I341_XMLCtm_honorarioIndividualGuia_localContratado;
begin
  Result := ChildNodes['localContratado'] as I341_XMLCtm_honorarioIndividualGuia_localContratado;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_DadosContratadoExecutante: I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante;
begin
  Result := ChildNodes['dadosContratadoExecutante'] as I341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_DadosInternacao: I341_XMLCtm_honorarioIndividualGuia_dadosInternacao;
begin
  Result := ChildNodes['dadosInternacao'] as I341_XMLCtm_honorarioIndividualGuia_dadosInternacao;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_ProcedimentosRealizados: I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados;
begin
  Result := ChildNodes['procedimentosRealizados'] as I341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_ValorTotalHonorarios: WideString;
begin
  Result := ChildNodes['valorTotalHonorarios'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia.Set_ValorTotalHonorarios(Value: WideString);
begin
  ChildNodes['valorTotalHonorarios'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_DataEmissaoGuia: WideString;
begin
  Result := ChildNodes['dataEmissaoGuia'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia.Set_DataEmissaoGuia(Value: WideString);
begin
  ChildNodes['dataEmissaoGuia'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia.Get_AssinaturaDigitalGuia: I341_XMLSignature;
begin
  Result := ChildNodes['assinaturaDigitalGuia'] as I341_XMLSignature;
end;

{ T341_XMLCtm_honorarioIndividualGuiaList341 }

function T341_XMLCtm_honorarioIndividualGuiaList341.Add: I341_XMLCtm_honorarioIndividualGuia;
begin
  Result := AddItem(-1) as I341_XMLCtm_honorarioIndividualGuia;
end;

function T341_XMLCtm_honorarioIndividualGuiaList341.Insert(const Index: Integer): I341_XMLCtm_honorarioIndividualGuia;
begin
  Result := AddItem(Index) as I341_XMLCtm_honorarioIndividualGuia;
end;

function T341_XMLCtm_honorarioIndividualGuiaList341.Get_Item(Index: Integer): I341_XMLCtm_honorarioIndividualGuia;
begin
  Result := List[Index] as I341_XMLCtm_honorarioIndividualGuia;
end;

{ T341_XMLCtm_honorarioIndividualGuia_beneficiario }

function T341_XMLCtm_honorarioIndividualGuia_beneficiario.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_beneficiario.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia_beneficiario.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_beneficiario.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia_beneficiario.Get_AtendimentoRN: WideString;
begin
  Result := ChildNodes['atendimentoRN'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_beneficiario.Set_AtendimentoRN(Value: WideString);
begin
  ChildNodes['atendimentoRN'].NodeValue := Value;
end;

{ T341_XMLCtm_honorarioIndividualGuia_localContratado }

procedure T341_XMLCtm_honorarioIndividualGuia_localContratado.AfterConstruction;
begin
  RegisterChildNode('codigoContratado', T341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado);
  inherited;
end;

function T341_XMLCtm_honorarioIndividualGuia_localContratado.Get_CodigoContratado: I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado;
begin
  Result := ChildNodes['codigoContratado'] as I341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado;
end;

function T341_XMLCtm_honorarioIndividualGuia_localContratado.Get_NomeContratado: WideString;
begin
  Result := ChildNodes['nomeContratado'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_localContratado.Set_NomeContratado(Value: WideString);
begin
  ChildNodes['nomeContratado'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia_localContratado.Get_Cnes: WideString;
begin
  Result := ChildNodes['cnes'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_localContratado.Set_Cnes(Value: WideString);
begin
  ChildNodes['cnes'].NodeValue := Value;
end;

{ T341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado }

function T341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado.Get_CodigoNaOperadora: WideString;
begin
  Result := ChildNodes['codigoNaOperadora'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado.Set_CodigoNaOperadora(Value: WideString);
begin
  ChildNodes['codigoNaOperadora'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado.Get_CnpjLocalExecutante: WideString;
begin
  Result := ChildNodes['cnpjLocalExecutante'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_localContratado_codigoContratado.Set_CnpjLocalExecutante(Value: WideString);
begin
  ChildNodes['cnpjLocalExecutante'].NodeValue := Value;
end;

{ T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante }

function T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante.Get_CodigonaOperadora: WideString;
begin
  Result := ChildNodes['codigonaOperadora'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante.Set_CodigonaOperadora(Value: WideString);
begin
  ChildNodes['codigonaOperadora'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante.Get_NomeContratadoExecutante: WideString;
begin
  Result := ChildNodes['nomeContratadoExecutante'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante.Set_NomeContratadoExecutante(Value: WideString);
begin
  ChildNodes['nomeContratadoExecutante'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante.Get_CnesContratadoExecutante: WideString;
begin
  Result := ChildNodes['cnesContratadoExecutante'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_dadosContratadoExecutante.Set_CnesContratadoExecutante(Value: WideString);
begin
  ChildNodes['cnesContratadoExecutante'].NodeValue := Value;
end;

{ T341_XMLCtm_honorarioIndividualGuia_dadosInternacao }

function T341_XMLCtm_honorarioIndividualGuia_dadosInternacao.Get_DataInicioFaturamento: WideString;
begin
  Result := ChildNodes['dataInicioFaturamento'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_dadosInternacao.Set_DataInicioFaturamento(Value: WideString);
begin
  ChildNodes['dataInicioFaturamento'].NodeValue := Value;
end;

function T341_XMLCtm_honorarioIndividualGuia_dadosInternacao.Get_DataFimFaturamento: WideString;
begin
  Result := ChildNodes['dataFimFaturamento'].Text;
end;

procedure T341_XMLCtm_honorarioIndividualGuia_dadosInternacao.Set_DataFimFaturamento(Value: WideString);
begin
  ChildNodes['dataFimFaturamento'].NodeValue := Value;
end;

{ T341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados }

procedure T341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados.AfterConstruction;
begin
  RegisterChildNode('procedimentoRealizado', T341_XMLCt_procedimentoExecutadoHonorIndiv);
  ItemTag := 'procedimentoRealizado';
  ItemInterface := I341_XMLCt_procedimentoExecutadoHonorIndiv;
  inherited;
end;

function T341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados.Get_ProcedimentoRealizado(Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv;
begin
  Result := List[Index] as I341_XMLCt_procedimentoExecutadoHonorIndiv;
end;

function T341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados.Add: I341_XMLCt_procedimentoExecutadoHonorIndiv;
begin
  Result := AddItem(-1) as I341_XMLCt_procedimentoExecutadoHonorIndiv;
end;

function T341_XMLCtm_honorarioIndividualGuia_procedimentosRealizados.Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv;
begin
  Result := AddItem(Index) as I341_XMLCt_procedimentoExecutadoHonorIndiv;
end;

{ T341_XMLCt_procedimentoExecutadoHonorIndiv }

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  RegisterChildNode('profissionais', T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais);
  FProfissionais := CreateCollection(T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341, I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais, 'profissionais') as I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341;
  inherited;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_DataExecucao: WideString;
begin
  Result := ChildNodes['dataExecucao'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_DataExecucao(Value: WideString);
begin
  ChildNodes['dataExecucao'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_HoraInicial: WideString;
begin
  Result := ChildNodes['horaInicial'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_HoraInicial(Value: WideString);
begin
  ChildNodes['horaInicial'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_HoraFinal: WideString;
begin
  Result := ChildNodes['horaFinal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_HoraFinal(Value: WideString);
begin
  ChildNodes['horaFinal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_QuantidadeExecutada: Integer;
begin
  Result := ChildNodes['quantidadeExecutada'].NodeValue;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_QuantidadeExecutada(Value: Integer);
begin
  ChildNodes['quantidadeExecutada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_ViaAcesso: WideString;
begin
  Result := ChildNodes['viaAcesso'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_ViaAcesso(Value: WideString);
begin
  ChildNodes['viaAcesso'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_TecnicaUtilizada: WideString;
begin
  Result := ChildNodes['tecnicaUtilizada'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_TecnicaUtilizada(Value: WideString);
begin
  ChildNodes['tecnicaUtilizada'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_ReducaoAcrescimo: WideString;
begin
  Result := ChildNodes['reducaoAcrescimo'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_ReducaoAcrescimo(Value: WideString);
begin
  ChildNodes['reducaoAcrescimo'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_ValorUnitario: WideString;
begin
  Result := ChildNodes['valorUnitario'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_ValorUnitario(Value: WideString);
begin
  ChildNodes['valorUnitario'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_ValorTotal: WideString;
begin
  Result := ChildNodes['valorTotal'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv.Set_ValorTotal(Value: WideString);
begin
  ChildNodes['valorTotal'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv.Get_Profissionais: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341;
begin
  Result := FProfissionais;
end;

{ T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais }

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.AfterConstruction;
begin
  RegisterChildNode('codProfissional', T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional);
  inherited;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Get_GrauParticipacao: WideString;
begin
  Result := ChildNodes['grauParticipacao'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Set_GrauParticipacao(Value: WideString);
begin
  ChildNodes['grauParticipacao'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Get_CodProfissional: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional;
begin
  Result := ChildNodes['codProfissional'] as I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Get_NomeProfissional: WideString;
begin
  Result := ChildNodes['nomeProfissional'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Set_NomeProfissional(Value: WideString);
begin
  ChildNodes['nomeProfissional'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Get_ConselhoProfissional: WideString;
begin
  Result := ChildNodes['conselhoProfissional'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Set_ConselhoProfissional(Value: WideString);
begin
  ChildNodes['conselhoProfissional'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Get_NumeroConselhoProfissional: WideString;
begin
  Result := ChildNodes['numeroConselhoProfissional'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Set_NumeroConselhoProfissional(Value: WideString);
begin
  ChildNodes['numeroConselhoProfissional'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Get_UF: WideString;
begin
  Result := ChildNodes['UF'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Set_UF(Value: WideString);
begin
  ChildNodes['UF'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Get_CBO: WideString;
begin
  Result := ChildNodes['CBO'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais.Set_CBO(Value: WideString);
begin
  ChildNodes['CBO'].NodeValue := Value;
end;

{ T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341 }

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341.Add: I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
begin
  Result := AddItem(-1) as I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341.Insert(const Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
begin
  Result := AddItem(Index) as I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionaisList341.Get_Item(Index: Integer): I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
begin
  Result := List[Index] as I341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais;
end;

{ T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional }

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional.Get_CodigoPrestadorNaOperadora: WideString;
begin
  Result := ChildNodes['codigoPrestadorNaOperadora'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional.Set_CodigoPrestadorNaOperadora(Value: WideString);
begin
  ChildNodes['codigoPrestadorNaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional.Get_CpfContratado: WideString;
begin
  Result := ChildNodes['cpfContratado'].Text;
end;

procedure T341_XMLCt_procedimentoExecutadoHonorIndiv_profissionais_codProfissional.Set_CpfContratado(Value: WideString);
begin
  ChildNodes['cpfContratado'].NodeValue := Value;
end;

{ T341_XMLCtm_consultaGuia }

procedure T341_XMLCtm_consultaGuia.AfterConstruction;
begin
  RegisterChildNode('cabecalhoConsulta', T341_XMLCt_guiaCabecalho);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('contratadoExecutante', T341_XMLCtm_consultaGuia_contratadoExecutante);
  RegisterChildNode('profissionalExecutante', T341_XMLCt_contratadoProfissionalDados);
  RegisterChildNode('dadosAtendimento', T341_XMLCtm_consultaAtendimento);
  RegisterChildNode('assinaturaDigitalGuia', T341_XMLSignature);
  inherited;
end;

function T341_XMLCtm_consultaGuia.Get_CabecalhoConsulta: I341_XMLCt_guiaCabecalho;
begin
  Result := ChildNodes['cabecalhoConsulta'] as I341_XMLCt_guiaCabecalho;
end;

function T341_XMLCtm_consultaGuia.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCtm_consultaGuia.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCtm_consultaGuia.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCtm_consultaGuia.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCtm_consultaGuia.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCtm_consultaGuia.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

function T341_XMLCtm_consultaGuia.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_consultaGuia.Get_ContratadoExecutante: I341_XMLCtm_consultaGuia_contratadoExecutante;
begin
  Result := ChildNodes['contratadoExecutante'] as I341_XMLCtm_consultaGuia_contratadoExecutante;
end;

function T341_XMLCtm_consultaGuia.Get_ProfissionalExecutante: I341_XMLCt_contratadoProfissionalDados;
begin
  Result := ChildNodes['profissionalExecutante'] as I341_XMLCt_contratadoProfissionalDados;
end;

function T341_XMLCtm_consultaGuia.Get_IndicacaoAcidente: WideString;
begin
  Result := ChildNodes['indicacaoAcidente'].Text;
end;

procedure T341_XMLCtm_consultaGuia.Set_IndicacaoAcidente(Value: WideString);
begin
  ChildNodes['indicacaoAcidente'].NodeValue := Value;
end;

function T341_XMLCtm_consultaGuia.Get_DadosAtendimento: I341_XMLCtm_consultaAtendimento;
begin
  Result := ChildNodes['dadosAtendimento'] as I341_XMLCtm_consultaAtendimento;
end;

function T341_XMLCtm_consultaGuia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_consultaGuia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCtm_consultaGuia.Get_AssinaturaDigitalGuia: I341_XMLSignature;
begin
  Result := ChildNodes['assinaturaDigitalGuia'] as I341_XMLSignature;
end;

{ T341_XMLCtm_consultaGuiaList341 }

function T341_XMLCtm_consultaGuiaList341.Add: I341_XMLCtm_consultaGuia;
begin
  Result := AddItem(-1) as I341_XMLCtm_consultaGuia;
end;

function T341_XMLCtm_consultaGuiaList341.Insert(const Index: Integer): I341_XMLCtm_consultaGuia;
begin
  Result := AddItem(Index) as I341_XMLCtm_consultaGuia;
end;

function T341_XMLCtm_consultaGuiaList341.Get_Item(Index: Integer): I341_XMLCtm_consultaGuia;
begin
  Result := List[Index] as I341_XMLCtm_consultaGuia;
end;

{ T341_XMLCtm_consultaGuia_contratadoExecutante }

function T341_XMLCtm_consultaGuia_contratadoExecutante.Get_CNES: WideString;
begin
  Result := ChildNodes['CNES'].Text;
end;

procedure T341_XMLCtm_consultaGuia_contratadoExecutante.Set_CNES(Value: WideString);
begin
  ChildNodes['CNES'].NodeValue := Value;
end;

{ T341_XMLCtm_consultaAtendimento }

procedure T341_XMLCtm_consultaAtendimento.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCtm_consultaAtendimento_procedimento);
  inherited;
end;

function T341_XMLCtm_consultaAtendimento.Get_DataAtendimento: WideString;
begin
  Result := ChildNodes['dataAtendimento'].Text;
end;

procedure T341_XMLCtm_consultaAtendimento.Set_DataAtendimento(Value: WideString);
begin
  ChildNodes['dataAtendimento'].NodeValue := Value;
end;

function T341_XMLCtm_consultaAtendimento.Get_TipoConsulta: WideString;
begin
  Result := ChildNodes['tipoConsulta'].Text;
end;

procedure T341_XMLCtm_consultaAtendimento.Set_TipoConsulta(Value: WideString);
begin
  ChildNodes['tipoConsulta'].NodeValue := Value;
end;

function T341_XMLCtm_consultaAtendimento.Get_Procedimento: I341_XMLCtm_consultaAtendimento_procedimento;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCtm_consultaAtendimento_procedimento;
end;

{ T341_XMLCtm_consultaAtendimento_procedimento }

function T341_XMLCtm_consultaAtendimento_procedimento.Get_CodigoTabela: WideString;
begin
  Result := ChildNodes['codigoTabela'].Text;
end;

procedure T341_XMLCtm_consultaAtendimento_procedimento.Set_CodigoTabela(Value: WideString);
begin
  ChildNodes['codigoTabela'].NodeValue := Value;
end;

function T341_XMLCtm_consultaAtendimento_procedimento.Get_CodigoProcedimento: WideString;
begin
  Result := ChildNodes['codigoProcedimento'].Text;
end;

procedure T341_XMLCtm_consultaAtendimento_procedimento.Set_CodigoProcedimento(Value: WideString);
begin
  ChildNodes['codigoProcedimento'].NodeValue := Value;
end;

function T341_XMLCtm_consultaAtendimento_procedimento.Get_ValorProcedimento: WideString;
begin
  Result := ChildNodes['valorProcedimento'].Text;
end;

procedure T341_XMLCtm_consultaAtendimento_procedimento.Set_ValorProcedimento(Value: WideString);
begin
  ChildNodes['valorProcedimento'].NodeValue := Value;
end;

{ T341_XMLCto_guiaOdontologia }

procedure T341_XMLCto_guiaOdontologia.AfterConstruction;
begin
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('dadosProfissionaisResponsaveis', T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis);
  RegisterChildNode('procedimentosExecutados', T341_XMLCto_guiaOdontologia_procedimentosExecutados);
  RegisterChildNode('odontoInicial', T341_XMLCto_anexoSituacaoInicialnaGTO);
  RegisterChildNode('assinaturaDigitalGuia', T341_XMLSignature);
  FProcedimentosExecutados := CreateCollection(T341_XMLCto_guiaOdontologia_procedimentosExecutadosList341, I341_XMLCto_guiaOdontologia_procedimentosExecutados, 'procedimentosExecutados') as I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341;
  inherited;
end;

function T341_XMLCto_guiaOdontologia.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_NumeroGuiaPrincipal: WideString;
begin
  Result := ChildNodes['numeroGuiaPrincipal'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_NumeroGuiaPrincipal(Value: WideString);
begin
  ChildNodes['numeroGuiaPrincipal'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_DataAutorizacao: WideString;
begin
  Result := ChildNodes['dataAutorizacao'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_DataAutorizacao(Value: WideString);
begin
  ChildNodes['dataAutorizacao'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_SenhaAutorizacao: WideString;
begin
  Result := ChildNodes['senhaAutorizacao'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_SenhaAutorizacao(Value: WideString);
begin
  ChildNodes['senhaAutorizacao'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_ValidadeSenha: WideString;
begin
  Result := ChildNodes['validadeSenha'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_ValidadeSenha(Value: WideString);
begin
  ChildNodes['validadeSenha'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCto_guiaOdontologia.Get_PlanoBeneficiario: WideString;
begin
  Result := ChildNodes['planoBeneficiario'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_PlanoBeneficiario(Value: WideString);
begin
  ChildNodes['planoBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_NomeEmpresa: WideString;
begin
  Result := ChildNodes['nomeEmpresa'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_NomeEmpresa(Value: WideString);
begin
  ChildNodes['nomeEmpresa'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_NumeroTelefone: WideString;
begin
  Result := ChildNodes['numeroTelefone'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_NumeroTelefone(Value: WideString);
begin
  ChildNodes['numeroTelefone'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_NomeTitular: WideString;
begin
  Result := ChildNodes['nomeTitular'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_NomeTitular(Value: WideString);
begin
  ChildNodes['nomeTitular'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_DadosProfissionaisResponsaveis: I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis;
begin
  Result := ChildNodes['dadosProfissionaisResponsaveis'] as I341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis;
end;

function T341_XMLCto_guiaOdontologia.Get_ProcedimentosExecutados: I341_XMLCto_guiaOdontologia_procedimentosExecutadosList341;
begin
  Result := FProcedimentosExecutados;
end;

function T341_XMLCto_guiaOdontologia.Get_DataTerminoTrat: WideString;
begin
  Result := ChildNodes['dataTerminoTrat'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_DataTerminoTrat(Value: WideString);
begin
  ChildNodes['dataTerminoTrat'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_TipoAtendimento: WideString;
begin
  Result := ChildNodes['tipoAtendimento'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_TipoAtendimento(Value: WideString);
begin
  ChildNodes['tipoAtendimento'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_TipoFaturamento: WideString;
begin
  Result := ChildNodes['tipoFaturamento'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_TipoFaturamento(Value: WideString);
begin
  ChildNodes['tipoFaturamento'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_QtdTotalUS: WideString;
begin
  Result := ChildNodes['qtdTotalUS'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_QtdTotalUS(Value: WideString);
begin
  ChildNodes['qtdTotalUS'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_ValorTotalProc: WideString;
begin
  Result := ChildNodes['valorTotalProc'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_ValorTotalProc(Value: WideString);
begin
  ChildNodes['valorTotalProc'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_ValorTotalFranquia: WideString;
begin
  Result := ChildNodes['valorTotalFranquia'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_ValorTotalFranquia(Value: WideString);
begin
  ChildNodes['valorTotalFranquia'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCto_guiaOdontologia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia.Get_OdontoInicial: I341_XMLCto_anexoSituacaoInicialnaGTO;
begin
  Result := ChildNodes['odontoInicial'] as I341_XMLCto_anexoSituacaoInicialnaGTO;
end;

function T341_XMLCto_guiaOdontologia.Get_AssinaturaDigitalGuia: I341_XMLSignature;
begin
  Result := ChildNodes['assinaturaDigitalGuia'] as I341_XMLSignature;
end;

{ T341_XMLCto_guiaOdontologiaList341 }

function T341_XMLCto_guiaOdontologiaList341.Add: I341_XMLCto_guiaOdontologia;
begin
  Result := AddItem(-1) as I341_XMLCto_guiaOdontologia;
end;

function T341_XMLCto_guiaOdontologiaList341.Insert(const Index: Integer): I341_XMLCto_guiaOdontologia;
begin
  Result := AddItem(Index) as I341_XMLCto_guiaOdontologia;
end;

function T341_XMLCto_guiaOdontologiaList341.Get_Item(Index: Integer): I341_XMLCto_guiaOdontologia;
begin
  Result := List[Index] as I341_XMLCto_guiaOdontologia;
end;

{ T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis }

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_NomeProfSolic: WideString;
begin
  Result := ChildNodes['nomeProfSolic'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_NomeProfSolic(Value: WideString);
begin
  ChildNodes['nomeProfSolic'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_CroSolic: WideString;
begin
  Result := ChildNodes['croSolic'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_CroSolic(Value: WideString);
begin
  ChildNodes['croSolic'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_UfSolic: WideString;
begin
  Result := ChildNodes['ufSolic'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_UfSolic(Value: WideString);
begin
  ChildNodes['ufSolic'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_CbosSolic: WideString;
begin
  Result := ChildNodes['cbosSolic'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_CbosSolic(Value: WideString);
begin
  ChildNodes['cbosSolic'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_CodigoProfExec: WideString;
begin
  Result := ChildNodes['codigoProfExec'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_CodigoProfExec(Value: WideString);
begin
  ChildNodes['codigoProfExec'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_NomeProfExec: WideString;
begin
  Result := ChildNodes['nomeProfExec'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_NomeProfExec(Value: WideString);
begin
  ChildNodes['nomeProfExec'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_CroExec: WideString;
begin
  Result := ChildNodes['croExec'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_CroExec(Value: WideString);
begin
  ChildNodes['croExec'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_UfExec: WideString;
begin
  Result := ChildNodes['ufExec'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_UfExec(Value: WideString);
begin
  ChildNodes['ufExec'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_CnesExec: WideString;
begin
  Result := ChildNodes['cnesExec'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_CnesExec(Value: WideString);
begin
  ChildNodes['cnesExec'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_NomeProfExec2: WideString;
begin
  Result := ChildNodes['nomeProfExec2'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_NomeProfExec2(Value: WideString);
begin
  ChildNodes['nomeProfExec2'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_CroExec2: WideString;
begin
  Result := ChildNodes['croExec2'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_CroExec2(Value: WideString);
begin
  ChildNodes['croExec2'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_UfExec2: WideString;
begin
  Result := ChildNodes['ufExec2'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_UfExec2(Value: WideString);
begin
  ChildNodes['ufExec2'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Get_CbosExec2: WideString;
begin
  Result := ChildNodes['cbosExec2'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_dadosProfissionaisResponsaveis.Set_CbosExec2(Value: WideString);
begin
  ChildNodes['cbosExec2'].NodeValue := Value;
end;

{ T341_XMLCto_guiaOdontologia_procedimentosExecutados }

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados.AfterConstruction;
begin
  RegisterChildNode('procSolic', T341_XMLCt_procedimentoDados);
  RegisterChildNode('denteRegiao', T341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao);
  inherited;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_ProcSolic: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procSolic'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_DenteRegiao: I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao;
begin
  Result := ChildNodes['denteRegiao'] as I341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_DenteFace: WideString;
begin
  Result := ChildNodes['denteFace'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados.Set_DenteFace(Value: WideString);
begin
  ChildNodes['denteFace'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_QtdProc: Integer;
begin
  Result := ChildNodes['qtdProc'].NodeValue;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados.Set_QtdProc(Value: Integer);
begin
  ChildNodes['qtdProc'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_QtdUS: WideString;
begin
  Result := ChildNodes['qtdUS'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados.Set_QtdUS(Value: WideString);
begin
  ChildNodes['qtdUS'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_ValorProc: WideString;
begin
  Result := ChildNodes['valorProc'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados.Set_ValorProc(Value: WideString);
begin
  ChildNodes['valorProc'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_ValorFranquia: WideString;
begin
  Result := ChildNodes['valorFranquia'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados.Set_ValorFranquia(Value: WideString);
begin
  ChildNodes['valorFranquia'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_Autorizado: Boolean;
begin
  Result := ChildNodes['autorizado'].NodeValue;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados.Set_Autorizado(Value: Boolean);
begin
  ChildNodes['autorizado'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados.Get_DataRealizacao: WideString;
begin
  Result := ChildNodes['dataRealizacao'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados.Set_DataRealizacao(Value: WideString);
begin
  ChildNodes['dataRealizacao'].NodeValue := Value;
end;

{ T341_XMLCto_guiaOdontologia_procedimentosExecutadosList341 }

function T341_XMLCto_guiaOdontologia_procedimentosExecutadosList341.Add: I341_XMLCto_guiaOdontologia_procedimentosExecutados;
begin
  Result := AddItem(-1) as I341_XMLCto_guiaOdontologia_procedimentosExecutados;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutadosList341.Insert(const Index: Integer): I341_XMLCto_guiaOdontologia_procedimentosExecutados;
begin
  Result := AddItem(Index) as I341_XMLCto_guiaOdontologia_procedimentosExecutados;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutadosList341.Get_Item(Index: Integer): I341_XMLCto_guiaOdontologia_procedimentosExecutados;
begin
  Result := List[Index] as I341_XMLCto_guiaOdontologia_procedimentosExecutados;
end;

{ T341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao }

function T341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao.Get_CodDente: WideString;
begin
  Result := ChildNodes['codDente'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao.Set_CodDente(Value: WideString);
begin
  ChildNodes['codDente'].NodeValue := Value;
end;

function T341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao.Get_CodRegiao: WideString;
begin
  Result := ChildNodes['codRegiao'].Text;
end;

procedure T341_XMLCto_guiaOdontologia_procedimentosExecutados_denteRegiao.Set_CodRegiao(Value: WideString);
begin
  ChildNodes['codRegiao'].NodeValue := Value;
end;

{ T341_XMLCto_anexoSituacaoInicialnaGTO }

procedure T341_XMLCto_anexoSituacaoInicialnaGTO.AfterConstruction;
begin
  RegisterChildNode('ct_situacaoInicial', T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial);
  inherited;
end;

function T341_XMLCto_anexoSituacaoInicialnaGTO.Get_NumeroGuiaAnexo: WideString;
begin
  Result := ChildNodes['numeroGuiaAnexo'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicialnaGTO.Set_NumeroGuiaAnexo(Value: WideString);
begin
  ChildNodes['numeroGuiaAnexo'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicialnaGTO.Get_NumeroGuiaReferenciada: WideString;
begin
  Result := ChildNodes['numeroGuiaReferenciada'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicialnaGTO.Set_NumeroGuiaReferenciada(Value: WideString);
begin
  ChildNodes['numeroGuiaReferenciada'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicialnaGTO.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicialnaGTO.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicialnaGTO.Get_Ct_situacaoInicial: I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial;
begin
  Result := ChildNodes['ct_situacaoInicial'] as I341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial;
end;

{ T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial }

procedure T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial.AfterConstruction;
begin
  RegisterChildNode('situacaoClinica', T341_XMLCt_situacaoClinica);
  inherited;
end;

function T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial.Get_SituacaoClinica: I341_XMLCt_situacaoClinica;
begin
  Result := ChildNodes['situacaoClinica'] as I341_XMLCt_situacaoClinica;
end;

function T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial.Get_DoencaPeriodontal: Boolean;
begin
  Result := ChildNodes['doencaPeriodontal'].NodeValue;
end;

procedure T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial.Set_DoencaPeriodontal(Value: Boolean);
begin
  ChildNodes['doencaPeriodontal'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial.Get_AlteracaoTecidoMole: Boolean;
begin
  Result := ChildNodes['alteracaoTecidoMole'].NodeValue;
end;

procedure T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial.Set_AlteracaoTecidoMole(Value: Boolean);
begin
  ChildNodes['alteracaoTecidoMole'].NodeValue := Value;
end;

function T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCto_anexoSituacaoInicialnaGTO_ct_situacaoInicial.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

{ T341_XMLCt_anexoLote }

procedure T341_XMLCt_anexoLote.AfterConstruction;
begin
  RegisterChildNode('AnexosGuiasTISS', T341_XMLCt_anexoLote_AnexosGuiasTISS);
  inherited;
end;

function T341_XMLCt_anexoLote.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_anexoLote.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_anexoLote.Get_AnexosGuiasTISS: I341_XMLCt_anexoLote_AnexosGuiasTISS;
begin
  Result := ChildNodes['AnexosGuiasTISS'] as I341_XMLCt_anexoLote_AnexosGuiasTISS;
end;

{ T341_XMLCt_anexoLote_AnexosGuiasTISS }

procedure T341_XMLCt_anexoLote_AnexosGuiasTISS.AfterConstruction;
begin
  RegisterChildNode('anexoSituacaoInicial', T341_XMLCto_anexoSituacaoInicial);
  RegisterChildNode('anexoSolicitacaoRadio', T341_XMLCtm_anexoSolicitacaoRadio);
  RegisterChildNode('anexoSolicitacaoQuimio', T341_XMLCtm_anexoSolicitacaoQuimio);
  RegisterChildNode('anexoSolicitacaoOPME', T341_XMLCtm_anexoSolicitacaoOPME);
  FAnexoSituacaoInicial := CreateCollection(T341_XMLCto_anexoSituacaoInicialList341, I341_XMLCto_anexoSituacaoInicial, 'anexoSituacaoInicial') as I341_XMLCto_anexoSituacaoInicialList341;
  inherited;
end;

function T341_XMLCt_anexoLote_AnexosGuiasTISS.Get_AnexoSituacaoInicial: I341_XMLCto_anexoSituacaoInicialList341;
begin
  Result := FAnexoSituacaoInicial;
end;

function T341_XMLCt_anexoLote_AnexosGuiasTISS.Get_AnexoSolicitacaoRadio: I341_XMLCtm_anexoSolicitacaoRadio;
begin
  Result := ChildNodes['anexoSolicitacaoRadio'] as I341_XMLCtm_anexoSolicitacaoRadio;
end;

function T341_XMLCt_anexoLote_AnexosGuiasTISS.Get_AnexoSolicitacaoQuimio: I341_XMLCtm_anexoSolicitacaoQuimio;
begin
  Result := ChildNodes['anexoSolicitacaoQuimio'] as I341_XMLCtm_anexoSolicitacaoQuimio;
end;

function T341_XMLCt_anexoLote_AnexosGuiasTISS.Get_AnexoSolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
begin
  Result := ChildNodes['anexoSolicitacaoOPME'] as I341_XMLCtm_anexoSolicitacaoOPME;
end;

{ T341_XMLCtm_anexoSolicitacaoRadio }

procedure T341_XMLCtm_anexoSolicitacaoRadio.AfterConstruction;
begin
  RegisterChildNode('cabecalhoAnexo', T341_XMLCt_anexoCabecalho);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('dadosComplementaresBeneficiario', T341_XMLCt_dadosComplementaresBeneficiarioRadio);
  RegisterChildNode('medicoSolicitante', T341_XMLCtm_anexoSolicitante);
  RegisterChildNode('diagnosticoOncologicoRadio', T341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio);
  RegisterChildNode('tratamentosAnteriores', T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores);
  inherited;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_CabecalhoAnexo: I341_XMLCt_anexoCabecalho;
begin
  Result := ChildNodes['cabecalhoAnexo'] as I341_XMLCt_anexoCabecalho;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiarioRadio;
begin
  Result := ChildNodes['dadosComplementaresBeneficiario'] as I341_XMLCt_dadosComplementaresBeneficiarioRadio;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
begin
  Result := ChildNodes['medicoSolicitante'] as I341_XMLCtm_anexoSolicitante;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_DiagnosticoOncologicoRadio: I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio;
begin
  Result := ChildNodes['diagnosticoOncologicoRadio'] as I341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_TratamentosAnteriores: I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores;
begin
  Result := ChildNodes['tratamentosAnteriores'] as I341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_NumeroCampos: Integer;
begin
  Result := ChildNodes['numeroCampos'].NodeValue;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio.Set_NumeroCampos(Value: Integer);
begin
  ChildNodes['numeroCampos'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_DoseCampo: Integer;
begin
  Result := ChildNodes['doseCampo'].NodeValue;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio.Set_DoseCampo(Value: Integer);
begin
  ChildNodes['doseCampo'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_DoseTotal: Integer;
begin
  Result := ChildNodes['doseTotal'].NodeValue;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio.Set_DoseTotal(Value: Integer);
begin
  ChildNodes['doseTotal'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_NrDias: Integer;
begin
  Result := ChildNodes['nrDias'].NodeValue;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio.Set_NrDias(Value: Integer);
begin
  ChildNodes['nrDias'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_DtPrevistaInicio: WideString;
begin
  Result := ChildNodes['dtPrevistaInicio'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio.Set_DtPrevistaInicio(Value: WideString);
begin
  ChildNodes['dtPrevistaInicio'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoRadio.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

{ T341_XMLCt_anexoCabecalho }

function T341_XMLCt_anexoCabecalho.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_anexoCabecalho.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_anexoCabecalho.Get_NumeroGuiaAnexo: WideString;
begin
  Result := ChildNodes['numeroGuiaAnexo'].Text;
end;

procedure T341_XMLCt_anexoCabecalho.Set_NumeroGuiaAnexo(Value: WideString);
begin
  ChildNodes['numeroGuiaAnexo'].NodeValue := Value;
end;

function T341_XMLCt_anexoCabecalho.Get_NumeroGuiaReferenciada: WideString;
begin
  Result := ChildNodes['numeroGuiaReferenciada'].Text;
end;

procedure T341_XMLCt_anexoCabecalho.Set_NumeroGuiaReferenciada(Value: WideString);
begin
  ChildNodes['numeroGuiaReferenciada'].NodeValue := Value;
end;

function T341_XMLCt_anexoCabecalho.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_anexoCabecalho.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_anexoCabecalho.Get_DataSolicitacao: WideString;
begin
  Result := ChildNodes['dataSolicitacao'].Text;
end;

procedure T341_XMLCt_anexoCabecalho.Set_DataSolicitacao(Value: WideString);
begin
  ChildNodes['dataSolicitacao'].NodeValue := Value;
end;

function T341_XMLCt_anexoCabecalho.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCt_anexoCabecalho.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCt_anexoCabecalho.Get_DataAutorizacao: WideString;
begin
  Result := ChildNodes['dataAutorizacao'].Text;
end;

procedure T341_XMLCt_anexoCabecalho.Set_DataAutorizacao(Value: WideString);
begin
  ChildNodes['dataAutorizacao'].NodeValue := Value;
end;

{ T341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio }

procedure T341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio.AfterConstruction;
begin
  RegisterChildNode('diagRadio', T341_XMLCt_diagnosticoOncologico);
  inherited;
end;

function T341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio.Get_DiagRadio: I341_XMLCt_diagnosticoOncologico;
begin
  Result := ChildNodes['diagRadio'] as I341_XMLCt_diagnosticoOncologico;
end;

function T341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio.Get_DiagnosticoImagem: WideString;
begin
  Result := ChildNodes['diagnosticoImagem'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio_diagnosticoOncologicoRadio.Set_DiagnosticoImagem(Value: WideString);
begin
  ChildNodes['diagnosticoImagem'].NodeValue := Value;
end;

{ T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores }

function T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores.Get_Cirurgia: WideString;
begin
  Result := ChildNodes['cirurgia'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores.Set_Cirurgia(Value: WideString);
begin
  ChildNodes['cirurgia'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores.Get_Datacirurgia: WideString;
begin
  Result := ChildNodes['datacirurgia'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores.Set_Datacirurgia(Value: WideString);
begin
  ChildNodes['datacirurgia'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores.Get_Quimioterapia: WideString;
begin
  Result := ChildNodes['quimioterapia'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores.Set_Quimioterapia(Value: WideString);
begin
  ChildNodes['quimioterapia'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores.Get_DataQuimioterapia: WideString;
begin
  Result := ChildNodes['dataQuimioterapia'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoRadio_tratamentosAnteriores.Set_DataQuimioterapia(Value: WideString);
begin
  ChildNodes['dataQuimioterapia'].NodeValue := Value;
end;

{ T341_XMLCtm_anexoSolicitacaoQuimio }

procedure T341_XMLCtm_anexoSolicitacaoQuimio.AfterConstruction;
begin
  RegisterChildNode('cabecalhoAnexo', T341_XMLCt_anexoCabecalho);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('dadosComplementaresBeneficiario', T341_XMLCt_dadosComplementaresBeneficiario);
  RegisterChildNode('medicoSolicitante', T341_XMLCtm_anexoSolicitante);
  RegisterChildNode('diagnosticoOncologicoQuimioterapia', T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia);
  RegisterChildNode('drogasSolicitadas', T341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas);
  RegisterChildNode('tratamentosAnteriores', T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores);
  inherited;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_CabecalhoAnexo: I341_XMLCt_anexoCabecalho;
begin
  Result := ChildNodes['cabecalhoAnexo'] as I341_XMLCt_anexoCabecalho;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_DadosComplementaresBeneficiario: I341_XMLCt_dadosComplementaresBeneficiario;
begin
  Result := ChildNodes['dadosComplementaresBeneficiario'] as I341_XMLCt_dadosComplementaresBeneficiario;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_MedicoSolicitante: I341_XMLCtm_anexoSolicitante;
begin
  Result := ChildNodes['medicoSolicitante'] as I341_XMLCtm_anexoSolicitante;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_DiagnosticoOncologicoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia;
begin
  Result := ChildNodes['diagnosticoOncologicoQuimioterapia'] as I341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_DrogasSolicitadas: I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas;
begin
  Result := ChildNodes['drogasSolicitadas'] as I341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_TratamentosAnteriores: I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores;
begin
  Result := ChildNodes['tratamentosAnteriores'] as I341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_NumeroCiclos: Integer;
begin
  Result := ChildNodes['numeroCiclos'].NodeValue;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio.Set_NumeroCiclos(Value: Integer);
begin
  ChildNodes['numeroCiclos'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_CicloAtual: Integer;
begin
  Result := ChildNodes['cicloAtual'].NodeValue;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio.Set_CicloAtual(Value: Integer);
begin
  ChildNodes['cicloAtual'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_DiasCicloAtual: Integer;
begin
  Result := ChildNodes['diasCicloAtual'].NodeValue;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio.Set_DiasCicloAtual(Value: Integer);
begin
  ChildNodes['diasCicloAtual'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_IntervaloCiclos: Integer;
begin
  Result := ChildNodes['intervaloCiclos'].NodeValue;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio.Set_IntervaloCiclos(Value: Integer);
begin
  ChildNodes['intervaloCiclos'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

{ T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia }

procedure T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.AfterConstruction;
begin
  RegisterChildNode('diagQuimio', T341_XMLCt_diagnosticoOncologico);
  inherited;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_DiagQuimio: I341_XMLCt_diagnosticoOncologico;
begin
  Result := ChildNodes['diagQuimio'] as I341_XMLCt_diagnosticoOncologico;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_Tumor: WideString;
begin
  Result := ChildNodes['tumor'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_Tumor(Value: WideString);
begin
  ChildNodes['tumor'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_Nodulo: WideString;
begin
  Result := ChildNodes['nodulo'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_Nodulo(Value: WideString);
begin
  ChildNodes['nodulo'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_Metastase: WideString;
begin
  Result := ChildNodes['metastase'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_Metastase(Value: WideString);
begin
  ChildNodes['metastase'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_TipoQuimioterapia: WideString;
begin
  Result := ChildNodes['tipoQuimioterapia'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_TipoQuimioterapia(Value: WideString);
begin
  ChildNodes['tipoQuimioterapia'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Get_PlanoTerapeutico: WideString;
begin
  Result := ChildNodes['planoTerapeutico'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio_diagnosticoOncologicoQuimioterapia.Set_PlanoTerapeutico(Value: WideString);
begin
  ChildNodes['planoTerapeutico'].NodeValue := Value;
end;

{ T341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas }

procedure T341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas.AfterConstruction;
begin
  RegisterChildNode('drogaSolicitada', T341_XMLCt_drogasSolicitadas);
  ItemTag := 'drogaSolicitada';
  ItemInterface := I341_XMLCt_drogasSolicitadas;
  inherited;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas.Get_DrogaSolicitada(Index: Integer): I341_XMLCt_drogasSolicitadas;
begin
  Result := List[Index] as I341_XMLCt_drogasSolicitadas;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas.Add: I341_XMLCt_drogasSolicitadas;
begin
  Result := AddItem(-1) as I341_XMLCt_drogasSolicitadas;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_drogasSolicitadas.Insert(const Index: Integer): I341_XMLCt_drogasSolicitadas;
begin
  Result := AddItem(Index) as I341_XMLCt_drogasSolicitadas;
end;

{ T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores }

function T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores.Get_Cirurgia: WideString;
begin
  Result := ChildNodes['cirurgia'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores.Set_Cirurgia(Value: WideString);
begin
  ChildNodes['cirurgia'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores.Get_Datacirurgia: WideString;
begin
  Result := ChildNodes['datacirurgia'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores.Set_Datacirurgia(Value: WideString);
begin
  ChildNodes['datacirurgia'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores.Get_AreaIrradiada: WideString;
begin
  Result := ChildNodes['areaIrradiada'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores.Set_AreaIrradiada(Value: WideString);
begin
  ChildNodes['areaIrradiada'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores.Get_DataIrradiacao: WideString;
begin
  Result := ChildNodes['dataIrradiacao'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoQuimio_tratamentosAnteriores.Set_DataIrradiacao(Value: WideString);
begin
  ChildNodes['dataIrradiacao'].NodeValue := Value;
end;

{ T341_XMLCtm_anexoSolicitacaoOPME }

procedure T341_XMLCtm_anexoSolicitacaoOPME.AfterConstruction;
begin
  RegisterChildNode('cabecalhoAnexo', T341_XMLCt_anexoCabecalho);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('profissionalSolicitante', T341_XMLCtm_anexoSolicitante);
  RegisterChildNode('opmeSolicitadas', T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas);
  inherited;
end;

function T341_XMLCtm_anexoSolicitacaoOPME.Get_CabecalhoAnexo: I341_XMLCt_anexoCabecalho;
begin
  Result := ChildNodes['cabecalhoAnexo'] as I341_XMLCt_anexoCabecalho;
end;

function T341_XMLCtm_anexoSolicitacaoOPME.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_anexoSolicitacaoOPME.Get_ProfissionalSolicitante: I341_XMLCtm_anexoSolicitante;
begin
  Result := ChildNodes['profissionalSolicitante'] as I341_XMLCtm_anexoSolicitante;
end;

function T341_XMLCtm_anexoSolicitacaoOPME.Get_JustificativaTecnica: WideString;
begin
  Result := ChildNodes['justificativaTecnica'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoOPME.Set_JustificativaTecnica(Value: WideString);
begin
  ChildNodes['justificativaTecnica'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoOPME.Get_EspecificacaoMaterial: WideString;
begin
  Result := ChildNodes['especificacaoMaterial'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoOPME.Set_EspecificacaoMaterial(Value: WideString);
begin
  ChildNodes['especificacaoMaterial'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoOPME.Get_OpmeSolicitadas: I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas;
begin
  Result := ChildNodes['opmeSolicitadas'] as I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas;
end;

function T341_XMLCtm_anexoSolicitacaoOPME.Get_Observacao: WideString;
begin
  Result := ChildNodes['Observacao'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoOPME.Set_Observacao(Value: WideString);
begin
  ChildNodes['Observacao'].NodeValue := Value;
end;

{ T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas }

procedure T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas.AfterConstruction;
begin
  RegisterChildNode('opmeSolicitada', T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada);
  ItemTag := 'opmeSolicitada';
  ItemInterface := I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
  inherited;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas.Get_OpmeSolicitada(Index: Integer): I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
begin
  Result := List[Index] as I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas.Add: I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
begin
  Result := AddItem(-1) as I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas.Insert(const Index: Integer): I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
begin
  Result := AddItem(Index) as I341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada;
end;

{ T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada }

procedure T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.AfterConstruction;
begin
  RegisterChildNode('identificacaoOPME', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Get_IdentificacaoOPME: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['identificacaoOPME'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Get_OpcaoFabricante: WideString;
begin
  Result := ChildNodes['opcaoFabricante'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Set_OpcaoFabricante(Value: WideString);
begin
  ChildNodes['opcaoFabricante'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Get_QuantidadeSolicitada: Integer;
begin
  Result := ChildNodes['quantidadeSolicitada'].NodeValue;
end;

procedure T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Set_QuantidadeSolicitada(Value: Integer);
begin
  ChildNodes['quantidadeSolicitada'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Get_ValorSolicitado: WideString;
begin
  Result := ChildNodes['valorSolicitado'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Set_ValorSolicitado(Value: WideString);
begin
  ChildNodes['valorSolicitado'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Get_RegistroANVISA: WideString;
begin
  Result := ChildNodes['registroANVISA'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Set_RegistroANVISA(Value: WideString);
begin
  ChildNodes['registroANVISA'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Get_CodigoRefFabricante: WideString;
begin
  Result := ChildNodes['codigoRefFabricante'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Set_CodigoRefFabricante(Value: WideString);
begin
  ChildNodes['codigoRefFabricante'].NodeValue := Value;
end;

function T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Get_AutorizacaoFuncionamento: WideString;
begin
  Result := ChildNodes['autorizacaoFuncionamento'].Text;
end;

procedure T341_XMLCtm_anexoSolicitacaoOPME_opmeSolicitadas_opmeSolicitada.Set_AutorizacaoFuncionamento(Value: WideString);
begin
  ChildNodes['autorizacaoFuncionamento'].NodeValue := Value;
end;

{ T341_XMLCt_demonstrativoSolicitacao }

procedure T341_XMLCt_demonstrativoSolicitacao.AfterConstruction;
begin
  RegisterChildNode('demonstrativoPagamento', T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento);
  RegisterChildNode('demonstrativoAnalise', T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise);
  inherited;
end;

function T341_XMLCt_demonstrativoSolicitacao.Get_DemonstrativoPagamento: I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento;
begin
  Result := ChildNodes['demonstrativoPagamento'] as I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento;
end;

function T341_XMLCt_demonstrativoSolicitacao.Get_DemonstrativoAnalise: I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise;
begin
  Result := ChildNodes['demonstrativoAnalise'] as I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise;
end;

{ T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento }

procedure T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('periodo', T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo);
  inherited;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento.Get_DataSolicitacao: WideString;
begin
  Result := ChildNodes['dataSolicitacao'].Text;
end;

procedure T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento.Set_DataSolicitacao(Value: WideString);
begin
  ChildNodes['dataSolicitacao'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento.Get_TipoDemonstrativo: WideString;
begin
  Result := ChildNodes['tipoDemonstrativo'].Text;
end;

procedure T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento.Set_TipoDemonstrativo(Value: WideString);
begin
  ChildNodes['tipoDemonstrativo'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento.Get_Periodo: I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo;
begin
  Result := ChildNodes['periodo'] as I341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo;
end;

{ T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo }

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo.Get_DataPagamento: WideString;
begin
  Result := ChildNodes['dataPagamento'].Text;
end;

procedure T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo.Set_DataPagamento(Value: WideString);
begin
  ChildNodes['dataPagamento'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo.Get_Competencia: WideString;
begin
  Result := ChildNodes['competencia'].Text;
end;

procedure T341_XMLCt_demonstrativoSolicitacao_demonstrativoPagamento_periodo.Set_Competencia(Value: WideString);
begin
  ChildNodes['competencia'].NodeValue := Value;
end;

{ T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise }

procedure T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('protocolos', T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos);
  inherited;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise.Get_DataSolicitacao: WideString;
begin
  Result := ChildNodes['dataSolicitacao'].Text;
end;

procedure T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise.Set_DataSolicitacao(Value: WideString);
begin
  ChildNodes['dataSolicitacao'].NodeValue := Value;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise.Get_Protocolos: I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos;
begin
  Result := ChildNodes['protocolos'] as I341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos;
end;

{ T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos }

procedure T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos.AfterConstruction;
begin
  ItemTag := 'numeroProtocolo';
  ItemInterface := IXMLNode;
  inherited;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos.Get_NumeroProtocolo(Index: Integer): WideString;
begin
  Result := List[Index].Text;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos.Add(const NumeroProtocolo: WideString): IXMLNode;
begin
  Result := AddItem(-1);
  Result.NodeValue := NumeroProtocolo;
end;

function T341_XMLCt_demonstrativoSolicitacao_demonstrativoAnalise_protocolos.Insert(const Index: Integer; const NumeroProtocolo: WideString): IXMLNode;
begin
  Result := AddItem(Index);
  Result.NodeValue := NumeroProtocolo;
end;

{ T341_XMLCt_protocoloSolicitacaoStatus }

procedure T341_XMLCt_protocoloSolicitacaoStatus.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCt_protocoloSolicitacaoStatus.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_protocoloSolicitacaoStatus.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloSolicitacaoStatus.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

{ T341_XMLCtm_solicitacaoLote }

procedure T341_XMLCtm_solicitacaoLote.AfterConstruction;
begin
  RegisterChildNode('solicitacaoSP-SADT', T341_XMLCtm_spsadtSolicitacaoGuia);
  RegisterChildNode('solicitacaoInternacao', T341_XMLCtm_internacaoSolicitacaoGuia);
  RegisterChildNode('solicitacaoProrrogacao', T341_XMLCtm_prorrogacaoSolicitacaoGuia);
  RegisterChildNode('solicitacaoOdontologia', T341_XMLCto_odontoSolicitacaoGuia);
  inherited;
end;

function T341_XMLCtm_solicitacaoLote.Get_SolicitacaoSPSADT: I341_XMLCtm_spsadtSolicitacaoGuia;
begin
  Result := ChildNodes['solicitacaoSP-SADT'] as I341_XMLCtm_spsadtSolicitacaoGuia;
end;

function T341_XMLCtm_solicitacaoLote.Get_SolicitacaoInternacao: I341_XMLCtm_internacaoSolicitacaoGuia;
begin
  Result := ChildNodes['solicitacaoInternacao'] as I341_XMLCtm_internacaoSolicitacaoGuia;
end;

function T341_XMLCtm_solicitacaoLote.Get_SolicitacaoProrrogacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia;
begin
  Result := ChildNodes['solicitacaoProrrogacao'] as I341_XMLCtm_prorrogacaoSolicitacaoGuia;
end;

function T341_XMLCtm_solicitacaoLote.Get_SolicitacaoOdontologia: I341_XMLCto_odontoSolicitacaoGuia;
begin
  Result := ChildNodes['solicitacaoOdontologia'] as I341_XMLCto_odontoSolicitacaoGuia;
end;

{ T341_XMLCtm_spsadtSolicitacaoGuia }

procedure T341_XMLCtm_spsadtSolicitacaoGuia.AfterConstruction;
begin
  RegisterChildNode('cabecalhoSolicitacao', T341_XMLCt_guiaCabecalho);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('dadosSolicitante', T341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante);
  RegisterChildNode('procedimentosSolicitados', T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados);
  RegisterChildNode('dadosExecutante', T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante);
  RegisterChildNode('anexoClinico', T341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico);
  FProcedimentosSolicitados := CreateCollection(T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341, I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados, 'procedimentosSolicitados') as I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341;
  inherited;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_CabecalhoSolicitacao: I341_XMLCt_guiaCabecalho;
begin
  Result := ChildNodes['cabecalhoSolicitacao'] as I341_XMLCt_guiaCabecalho;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_NumeroGuiaPrincipal: WideString;
begin
  Result := ChildNodes['numeroGuiaPrincipal'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia.Set_NumeroGuiaPrincipal(Value: WideString);
begin
  ChildNodes['numeroGuiaPrincipal'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_TipoEtapaAutorizacao: WideString;
begin
  Result := ChildNodes['tipoEtapaAutorizacao'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia.Set_TipoEtapaAutorizacao(Value: WideString);
begin
  ChildNodes['tipoEtapaAutorizacao'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_DadosSolicitante: I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante;
begin
  Result := ChildNodes['dadosSolicitante'] as I341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_CaraterAtendimento: WideString;
begin
  Result := ChildNodes['caraterAtendimento'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia.Set_CaraterAtendimento(Value: WideString);
begin
  ChildNodes['caraterAtendimento'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_DataSolicitacao: WideString;
begin
  Result := ChildNodes['dataSolicitacao'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia.Set_DataSolicitacao(Value: WideString);
begin
  ChildNodes['dataSolicitacao'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_IndicacaoClinica: WideString;
begin
  Result := ChildNodes['indicacaoClinica'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia.Set_IndicacaoClinica(Value: WideString);
begin
  ChildNodes['indicacaoClinica'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_ProcedimentosSolicitados: I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341;
begin
  Result := FProcedimentosSolicitados;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_DadosExecutante: I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante;
begin
  Result := ChildNodes['dadosExecutante'] as I341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_AnexoClinico: I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico;
begin
  Result := ChildNodes['anexoClinico'] as I341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante }

procedure T341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante.AfterConstruction;
begin
  RegisterChildNode('contratadoSolicitante', T341_XMLCt_contratadoDados);
  RegisterChildNode('profissionalSolicitante', T341_XMLCt_contratadoProfissionalDados);
  inherited;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante.Get_ContratadoSolicitante: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['contratadoSolicitante'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_dadosSolicitante.Get_ProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados;
begin
  Result := ChildNodes['profissionalSolicitante'] as I341_XMLCt_contratadoProfissionalDados;
end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados }

procedure T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados.Get_QuantidadeSolicitada: Integer;
begin
  Result := ChildNodes['quantidadeSolicitada'].NodeValue;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados.Set_QuantidadeSolicitada(Value: Integer);
begin
  ChildNodes['quantidadeSolicitada'].NodeValue := Value;
end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341 }

function T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341.Add: I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
begin
  Result := AddItem(-1) as I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341.Insert(const Index: Integer): I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
begin
  Result := AddItem(Index) as I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitadosList341.Get_Item(Index: Integer): I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
begin
  Result := List[Index] as I341_XMLCtm_spsadtSolicitacaoGuia_procedimentosSolicitados;
end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante }

function T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante.Get_CodigonaOperadora: WideString;
begin
  Result := ChildNodes['codigonaOperadora'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante.Set_CodigonaOperadora(Value: WideString);
begin
  ChildNodes['codigonaOperadora'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante.Get_NomeContratado: WideString;
begin
  Result := ChildNodes['nomeContratado'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante.Set_NomeContratado(Value: WideString);
begin
  ChildNodes['nomeContratado'].NodeValue := Value;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante.Get_CNES: WideString;
begin
  Result := ChildNodes['CNES'].Text;
end;

procedure T341_XMLCtm_spsadtSolicitacaoGuia_dadosExecutante.Set_CNES(Value: WideString);
begin
  ChildNodes['CNES'].NodeValue := Value;
end;

{ T341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico }

procedure T341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico.AfterConstruction;
begin
  RegisterChildNode('solicitacaoQuimioterapia', T341_XMLCtm_anexoSolicitacaoQuimio);
  RegisterChildNode('solicitacaoRadioterapia', T341_XMLCtm_anexoSolicitacaoRadio);
  RegisterChildNode('solicitacaoOPME', T341_XMLCtm_anexoSolicitacaoOPME);
  inherited;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico.Get_SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio;
begin
  Result := ChildNodes['solicitacaoQuimioterapia'] as I341_XMLCtm_anexoSolicitacaoQuimio;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico.Get_SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio;
begin
  Result := ChildNodes['solicitacaoRadioterapia'] as I341_XMLCtm_anexoSolicitacaoRadio;
end;

function T341_XMLCtm_spsadtSolicitacaoGuia_anexoClinico.Get_SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
begin
  Result := ChildNodes['solicitacaoOPME'] as I341_XMLCtm_anexoSolicitacaoOPME;
end;

{ T341_XMLCtm_internacaoSolicitacaoGuia }

procedure T341_XMLCtm_internacaoSolicitacaoGuia.AfterConstruction;
begin
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('identificacaoSolicitante', T341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante);
  RegisterChildNode('dadosHospitalSolicitado', T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado);
  RegisterChildNode('dadosInternacao', T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao);
  RegisterChildNode('hipotesesDiagnosticas', T341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas);
  RegisterChildNode('procedimentosSolicitados', T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados);
  RegisterChildNode('anexoClinico', T341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico);
  FProcedimentosSolicitados := CreateCollection(T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341, I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados, 'procedimentosSolicitados') as I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341;
  inherited;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_TipoEtapaAutorizacao: WideString;
begin
  Result := ChildNodes['tipoEtapaAutorizacao'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia.Set_TipoEtapaAutorizacao(Value: WideString);
begin
  ChildNodes['tipoEtapaAutorizacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_IdentificacaoSolicitante: I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante;
begin
  Result := ChildNodes['identificacaoSolicitante'] as I341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_DadosHospitalSolicitado: I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado;
begin
  Result := ChildNodes['dadosHospitalSolicitado'] as I341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_DadosInternacao: I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao;
begin
  Result := ChildNodes['dadosInternacao'] as I341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_HipotesesDiagnosticas: I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas;
begin
  Result := ChildNodes['hipotesesDiagnosticas'] as I341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_ProcedimentosSolicitados: I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341;
begin
  Result := FProcedimentosSolicitados;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_DataSolicitacao: WideString;
begin
  Result := ChildNodes['dataSolicitacao'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia.Set_DataSolicitacao(Value: WideString);
begin
  ChildNodes['dataSolicitacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia.Get_AnexoClinico: I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico;
begin
  Result := ChildNodes['anexoClinico'] as I341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico;
end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante }

procedure T341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante.AfterConstruction;
begin
  RegisterChildNode('dadosDoContratado', T341_XMLCt_contratadoDados);
  RegisterChildNode('dadosProfissionalContratado', T341_XMLCt_contratadoProfissionalDados);
  inherited;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante.Get_DadosDoContratado: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosDoContratado'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_identificacaoSolicitante.Get_DadosProfissionalContratado: I341_XMLCt_contratadoProfissionalDados;
begin
  Result := ChildNodes['dadosProfissionalContratado'] as I341_XMLCt_contratadoProfissionalDados;
end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado }

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado.Get_CodigoIndicadonaOperadora: WideString;
begin
  Result := ChildNodes['codigoIndicadonaOperadora'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado.Set_CodigoIndicadonaOperadora(Value: WideString);
begin
  ChildNodes['codigoIndicadonaOperadora'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado.Get_NomeContratadoIndicado: WideString;
begin
  Result := ChildNodes['nomeContratadoIndicado'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado.Set_NomeContratadoIndicado(Value: WideString);
begin
  ChildNodes['nomeContratadoIndicado'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado.Get_DataSugeridaInternacao: WideString;
begin
  Result := ChildNodes['dataSugeridaInternacao'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosHospitalSolicitado.Set_DataSugeridaInternacao(Value: WideString);
begin
  ChildNodes['dataSugeridaInternacao'].NodeValue := Value;
end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao }

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Get_CaraterAtendimento: WideString;
begin
  Result := ChildNodes['caraterAtendimento'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Set_CaraterAtendimento(Value: WideString);
begin
  ChildNodes['caraterAtendimento'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Get_TipoInternacao: WideString;
begin
  Result := ChildNodes['tipoInternacao'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Set_TipoInternacao(Value: WideString);
begin
  ChildNodes['tipoInternacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Get_RegimeInternacao: WideString;
begin
  Result := ChildNodes['regimeInternacao'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Set_RegimeInternacao(Value: WideString);
begin
  ChildNodes['regimeInternacao'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Get_QtDiariasSolicitadas: Integer;
begin
  Result := ChildNodes['qtDiariasSolicitadas'].NodeValue;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Set_QtDiariasSolicitadas(Value: Integer);
begin
  ChildNodes['qtDiariasSolicitadas'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Get_IndicadorOPME: WideString;
begin
  Result := ChildNodes['indicadorOPME'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Set_IndicadorOPME(Value: WideString);
begin
  ChildNodes['indicadorOPME'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Get_IndicadorQuimio: WideString;
begin
  Result := ChildNodes['indicadorQuimio'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Set_IndicadorQuimio(Value: WideString);
begin
  ChildNodes['indicadorQuimio'].NodeValue := Value;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Get_IndicacaoClinica: WideString;
begin
  Result := ChildNodes['indicacaoClinica'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_dadosInternacao.Set_IndicacaoClinica(Value: WideString);
begin
  ChildNodes['indicacaoClinica'].NodeValue := Value;
end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas }

procedure T341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas.AfterConstruction;
begin
  FDiagnosticoCID := CreateCollection(T341_XMLSt_texto4List341, IXMLNode, 'diagnosticoCID') as I341_XMLSt_texto4List341;
  inherited;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas.Get_DiagnosticoCID: I341_XMLSt_texto4List341;
begin
  Result := FDiagnosticoCID;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas.Get_IndicadorAcidente: WideString;
begin
  Result := ChildNodes['indicadorAcidente'].Text;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_hipotesesDiagnosticas.Set_IndicadorAcidente(Value: WideString);
begin
  ChildNodes['indicadorAcidente'].NodeValue := Value;
end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados }

procedure T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados.Get_QuantidadeSolicitada: Integer;
begin
  Result := ChildNodes['quantidadeSolicitada'].NodeValue;
end;

procedure T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados.Set_QuantidadeSolicitada(Value: Integer);
begin
  ChildNodes['quantidadeSolicitada'].NodeValue := Value;
end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341 }

function T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341.Add: I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
begin
  Result := AddItem(-1) as I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341.Insert(const Index: Integer): I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
begin
  Result := AddItem(Index) as I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitadosList341.Get_Item(Index: Integer): I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
begin
  Result := List[Index] as I341_XMLCtm_internacaoSolicitacaoGuia_procedimentosSolicitados;
end;

{ T341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico }

procedure T341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico.AfterConstruction;
begin
  RegisterChildNode('solicitacaoQuimioterapia', T341_XMLCtm_anexoSolicitacaoQuimio);
  RegisterChildNode('solicitacaoRadioterapia', T341_XMLCtm_anexoSolicitacaoRadio);
  RegisterChildNode('solicitacaoOPME', T341_XMLCtm_anexoSolicitacaoOPME);
  inherited;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico.Get_SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio;
begin
  Result := ChildNodes['solicitacaoQuimioterapia'] as I341_XMLCtm_anexoSolicitacaoQuimio;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico.Get_SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio;
begin
  Result := ChildNodes['solicitacaoRadioterapia'] as I341_XMLCtm_anexoSolicitacaoRadio;
end;

function T341_XMLCtm_internacaoSolicitacaoGuia_anexoClinico.Get_SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
begin
  Result := ChildNodes['solicitacaoOPME'] as I341_XMLCtm_anexoSolicitacaoOPME;
end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia }

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia.AfterConstruction;
begin
  RegisterChildNode('dadosBeneficiario', T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario);
  RegisterChildNode('dadosContratadoSolicitante', T341_XMLCt_contratadoDados);
  RegisterChildNode('dadosProfissionalSolicitante', T341_XMLCt_contratadoProfissionalDados);
  RegisterChildNode('dadosInternacao', T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao);
  RegisterChildNode('procedimentosAdicionais', T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais);
  RegisterChildNode('anexoClinicoProrrogacao', T341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao);
  FProcedimentosAdicionais := CreateCollection(T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341, I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais, 'procedimentosAdicionais') as I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341;
  inherited;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_NrGuiaReferenciada: WideString;
begin
  Result := ChildNodes['nrGuiaReferenciada'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia.Set_NrGuiaReferenciada(Value: WideString);
begin
  ChildNodes['nrGuiaReferenciada'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_DadosBeneficiario: I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_DadosContratadoSolicitante: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosContratadoSolicitante'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_DadosProfissionalSolicitante: I341_XMLCt_contratadoProfissionalDados;
begin
  Result := ChildNodes['dadosProfissionalSolicitante'] as I341_XMLCt_contratadoProfissionalDados;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_DadosInternacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao;
begin
  Result := ChildNodes['dadosInternacao'] as I341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_ProcedimentosAdicionais: I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341;
begin
  Result := FProcedimentosAdicionais;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_AnexoClinicoProrrogacao: I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao;
begin
  Result := ChildNodes['anexoClinicoProrrogacao'] as I341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia.Get_DataSolicitacao: WideString;
begin
  Result := ChildNodes['dataSolicitacao'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia.Set_DataSolicitacao(Value: WideString);
begin
  ChildNodes['dataSolicitacao'].NodeValue := Value;
end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario }

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Get_TipoIdent: WideString;
begin
  Result := ChildNodes['tipoIdent'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Set_TipoIdent(Value: WideString);
begin
  ChildNodes['tipoIdent'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Get_IdentificadorBeneficiario: WideString;
begin
  Result := ChildNodes['identificadorBeneficiario'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Set_IdentificadorBeneficiario(Value: WideString);
begin
  ChildNodes['identificadorBeneficiario'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Get_TemplateBiometrico: WideString;
begin
  Result := ChildNodes['templateBiometrico'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosBeneficiario.Set_TemplateBiometrico(Value: WideString);
begin
  ChildNodes['templateBiometrico'].NodeValue := Value;
end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao }

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao.Get_QtDiariasAdicionais: Integer;
begin
  Result := ChildNodes['qtDiariasAdicionais'].NodeValue;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao.Set_QtDiariasAdicionais(Value: Integer);
begin
  ChildNodes['qtDiariasAdicionais'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao.Get_TipoAcomodacaoSolicitada: WideString;
begin
  Result := ChildNodes['tipoAcomodacaoSolicitada'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao.Set_TipoAcomodacaoSolicitada(Value: WideString);
begin
  ChildNodes['tipoAcomodacaoSolicitada'].NodeValue := Value;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao.Get_IndicacaoClinica: WideString;
begin
  Result := ChildNodes['indicacaoClinica'].Text;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_dadosInternacao.Set_IndicacaoClinica(Value: WideString);
begin
  ChildNodes['indicacaoClinica'].NodeValue := Value;
end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais }

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais.Get_QuantidadeSolicitada: Integer;
begin
  Result := ChildNodes['quantidadeSolicitada'].NodeValue;
end;

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais.Set_QuantidadeSolicitada(Value: Integer);
begin
  ChildNodes['quantidadeSolicitada'].NodeValue := Value;
end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341 }

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341.Add: I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
begin
  Result := AddItem(-1) as I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341.Insert(const Index: Integer): I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
begin
  Result := AddItem(Index) as I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionaisList341.Get_Item(Index: Integer): I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
begin
  Result := List[Index] as I341_XMLCtm_prorrogacaoSolicitacaoGuia_procedimentosAdicionais;
end;

{ T341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao }

procedure T341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao.AfterConstruction;
begin
  RegisterChildNode('solicitacaoQuimioterapia', T341_XMLCtm_anexoSolicitacaoQuimio);
  RegisterChildNode('solicitacaoRadioterapia', T341_XMLCtm_anexoSolicitacaoRadio);
  RegisterChildNode('solicitacaoOPME', T341_XMLCtm_anexoSolicitacaoOPME);
  inherited;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao.Get_SolicitacaoQuimioterapia: I341_XMLCtm_anexoSolicitacaoQuimio;
begin
  Result := ChildNodes['solicitacaoQuimioterapia'] as I341_XMLCtm_anexoSolicitacaoQuimio;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao.Get_SolicitacaoRadioterapia: I341_XMLCtm_anexoSolicitacaoRadio;
begin
  Result := ChildNodes['solicitacaoRadioterapia'] as I341_XMLCtm_anexoSolicitacaoRadio;
end;

function T341_XMLCtm_prorrogacaoSolicitacaoGuia_anexoClinicoProrrogacao.Get_SolicitacaoOPME: I341_XMLCtm_anexoSolicitacaoOPME;
begin
  Result := ChildNodes['solicitacaoOPME'] as I341_XMLCtm_anexoSolicitacaoOPME;
end;

{ T341_XMLCto_odontoSolicitacaoGuia }

procedure T341_XMLCto_odontoSolicitacaoGuia.AfterConstruction;
begin
  RegisterChildNode('dadosProfissionaisResponsaveis', T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis);
  RegisterChildNode('procedimentosSolicitados', T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados);
  RegisterChildNode('odontoInicial', T341_XMLCto_anexoSituacaoInicial);
  FProcedimentosSolicitados := CreateCollection(T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341, I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados, 'procedimentosSolicitados') as I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341;
  inherited;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_NumeroGuiaPrincipal: WideString;
begin
  Result := ChildNodes['numeroGuiaPrincipal'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_NumeroGuiaPrincipal(Value: WideString);
begin
  ChildNodes['numeroGuiaPrincipal'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_AtendimentoRN: WideString;
begin
  Result := ChildNodes['atendimentoRN'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_AtendimentoRN(Value: WideString);
begin
  ChildNodes['atendimentoRN'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_NumeroCNS: WideString;
begin
  Result := ChildNodes['numeroCNS'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_NumeroCNS(Value: WideString);
begin
  ChildNodes['numeroCNS'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_TipoIdent: WideString;
begin
  Result := ChildNodes['tipoIdent'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_TipoIdent(Value: WideString);
begin
  ChildNodes['tipoIdent'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_IdentificadorBeneficiario: WideString;
begin
  Result := ChildNodes['identificadorBeneficiario'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_IdentificadorBeneficiario(Value: WideString);
begin
  ChildNodes['identificadorBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_TemplateBiometrico: WideString;
begin
  Result := ChildNodes['templateBiometrico'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_TemplateBiometrico(Value: WideString);
begin
  ChildNodes['templateBiometrico'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_PlanoBeneficiario: WideString;
begin
  Result := ChildNodes['planoBeneficiario'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_PlanoBeneficiario(Value: WideString);
begin
  ChildNodes['planoBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_NomeEmpresa: WideString;
begin
  Result := ChildNodes['nomeEmpresa'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_NomeEmpresa(Value: WideString);
begin
  ChildNodes['nomeEmpresa'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_NumeroTelefone: WideString;
begin
  Result := ChildNodes['numeroTelefone'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_NumeroTelefone(Value: WideString);
begin
  ChildNodes['numeroTelefone'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_NomeTitular: WideString;
begin
  Result := ChildNodes['nomeTitular'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_NomeTitular(Value: WideString);
begin
  ChildNodes['nomeTitular'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_DadosProfissionaisResponsaveis: I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis;
begin
  Result := ChildNodes['dadosProfissionaisResponsaveis'] as I341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_ProcedimentosSolicitados: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341;
begin
  Result := FProcedimentosSolicitados;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_DataTerminoTrat: WideString;
begin
  Result := ChildNodes['dataTerminoTrat'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_DataTerminoTrat(Value: WideString);
begin
  ChildNodes['dataTerminoTrat'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_TipoAtendimento: WideString;
begin
  Result := ChildNodes['tipoAtendimento'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_TipoAtendimento(Value: WideString);
begin
  ChildNodes['tipoAtendimento'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_QtdTotalUS: WideString;
begin
  Result := ChildNodes['qtdTotalUS'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_QtdTotalUS(Value: WideString);
begin
  ChildNodes['qtdTotalUS'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_ValorTotalProc: WideString;
begin
  Result := ChildNodes['valorTotalProc'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_ValorTotalProc(Value: WideString);
begin
  ChildNodes['valorTotalProc'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_ValorTotalFranquia: WideString;
begin
  Result := ChildNodes['valorTotalFranquia'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_ValorTotalFranquia(Value: WideString);
begin
  ChildNodes['valorTotalFranquia'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_Observacao: WideString;
begin
  Result := ChildNodes['observacao'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia.Set_Observacao(Value: WideString);
begin
  ChildNodes['observacao'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia.Get_OdontoInicial: I341_XMLCto_anexoSituacaoInicial;
begin
  Result := ChildNodes['odontoInicial'] as I341_XMLCto_anexoSituacaoInicial;
end;

{ T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis }

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_NomeProfSolic: WideString;
begin
  Result := ChildNodes['nomeProfSolic'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_NomeProfSolic(Value: WideString);
begin
  ChildNodes['nomeProfSolic'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_CroSolic: WideString;
begin
  Result := ChildNodes['croSolic'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_CroSolic(Value: WideString);
begin
  ChildNodes['croSolic'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_UfSolic: WideString;
begin
  Result := ChildNodes['ufSolic'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_UfSolic(Value: WideString);
begin
  ChildNodes['ufSolic'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_CbosSolic: WideString;
begin
  Result := ChildNodes['cbosSolic'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_CbosSolic(Value: WideString);
begin
  ChildNodes['cbosSolic'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_CodigoProfExec: WideString;
begin
  Result := ChildNodes['codigoProfExec'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_CodigoProfExec(Value: WideString);
begin
  ChildNodes['codigoProfExec'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_NomeProfExec: WideString;
begin
  Result := ChildNodes['nomeProfExec'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_NomeProfExec(Value: WideString);
begin
  ChildNodes['nomeProfExec'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_CroExec: WideString;
begin
  Result := ChildNodes['croExec'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_CroExec(Value: WideString);
begin
  ChildNodes['croExec'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_UfExec: WideString;
begin
  Result := ChildNodes['ufExec'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_UfExec(Value: WideString);
begin
  ChildNodes['ufExec'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_CnesExec: WideString;
begin
  Result := ChildNodes['cnesExec'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_CnesExec(Value: WideString);
begin
  ChildNodes['cnesExec'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_NomeProfExec2: WideString;
begin
  Result := ChildNodes['nomeProfExec2'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_NomeProfExec2(Value: WideString);
begin
  ChildNodes['nomeProfExec2'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_CroExec2: WideString;
begin
  Result := ChildNodes['croExec2'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_CroExec2(Value: WideString);
begin
  ChildNodes['croExec2'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_UfExec2: WideString;
begin
  Result := ChildNodes['ufExec2'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_UfExec2(Value: WideString);
begin
  ChildNodes['ufExec2'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Get_CbosExec2: WideString;
begin
  Result := ChildNodes['cbosExec2'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_dadosProfissionaisResponsaveis.Set_CbosExec2(Value: WideString);
begin
  ChildNodes['cbosExec2'].NodeValue := Value;
end;

{ T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados }

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.AfterConstruction;
begin
  RegisterChildNode('procSolic', T341_XMLCt_procedimentoDados);
  RegisterChildNode('denteRegiao', T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao);
  inherited;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Get_ProcSolic: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procSolic'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Get_DenteRegiao: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao;
begin
  Result := ChildNodes['denteRegiao'] as I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Get_DenteFace: WideString;
begin
  Result := ChildNodes['denteFace'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Set_DenteFace(Value: WideString);
begin
  ChildNodes['denteFace'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Get_QtdProc: Integer;
begin
  Result := ChildNodes['qtdProc'].NodeValue;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Set_QtdProc(Value: Integer);
begin
  ChildNodes['qtdProc'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Get_QtdUS: WideString;
begin
  Result := ChildNodes['qtdUS'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Set_QtdUS(Value: WideString);
begin
  ChildNodes['qtdUS'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Get_ValorProc: WideString;
begin
  Result := ChildNodes['valorProc'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Set_ValorProc(Value: WideString);
begin
  ChildNodes['valorProc'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Get_ValorFranquia: WideString;
begin
  Result := ChildNodes['valorFranquia'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Set_ValorFranquia(Value: WideString);
begin
  ChildNodes['valorFranquia'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Get_Aut: WideString;
begin
  Result := ChildNodes['aut'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Set_Aut(Value: WideString);
begin
  ChildNodes['aut'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Get_DataRealizacao: WideString;
begin
  Result := ChildNodes['dataRealizacao'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados.Set_DataRealizacao(Value: WideString);
begin
  ChildNodes['dataRealizacao'].NodeValue := Value;
end;

{ T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341 }

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341.Add: I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
begin
  Result := AddItem(-1) as I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341.Insert(const Index: Integer): I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
begin
  Result := AddItem(Index) as I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitadosList341.Get_Item(Index: Integer): I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
begin
  Result := List[Index] as I341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados;
end;

{ T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao }

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao.Get_CodDente: WideString;
begin
  Result := ChildNodes['codDente'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao.Set_CodDente(Value: WideString);
begin
  ChildNodes['codDente'].NodeValue := Value;
end;

function T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao.Get_CodRegiao: WideString;
begin
  Result := ChildNodes['codRegiao'].Text;
end;

procedure T341_XMLCto_odontoSolicitacaoGuia_procedimentosSolicitados_denteRegiao.Set_CodRegiao(Value: WideString);
begin
  ChildNodes['codRegiao'].NodeValue := Value;
end;

{ T341_XMLCt_solicitacaoProcedimento }

{ T341_XMLCt_autorizacaoSolicitaStatus }

procedure T341_XMLCt_autorizacaoSolicitaStatus.AfterConstruction;
begin
  RegisterChildNode('identificacaoSolicitacao', T341_XMLCt_guiaCabecalho);
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('dadosContratado', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCt_autorizacaoSolicitaStatus.Get_IdentificacaoSolicitacao: I341_XMLCt_guiaCabecalho;
begin
  Result := ChildNodes['identificacaoSolicitacao'] as I341_XMLCt_guiaCabecalho;
end;

function T341_XMLCt_autorizacaoSolicitaStatus.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCt_autorizacaoSolicitaStatus.Get_DadosContratado: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosContratado'] as I341_XMLCt_contratadoDados;
end;

{ T341_XMLCt_elegibilidadeVerifica }

procedure T341_XMLCt_elegibilidadeVerifica.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  inherited;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_NumeroCarteira: WideString;
begin
  Result := ChildNodes['numeroCarteira'].Text;
end;

procedure T341_XMLCt_elegibilidadeVerifica.Set_NumeroCarteira(Value: WideString);
begin
  ChildNodes['numeroCarteira'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCt_elegibilidadeVerifica.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_NumeroCNS: WideString;
begin
  Result := ChildNodes['numeroCNS'].Text;
end;

procedure T341_XMLCt_elegibilidadeVerifica.Set_NumeroCNS(Value: WideString);
begin
  ChildNodes['numeroCNS'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_TipoIdent: WideString;
begin
  Result := ChildNodes['tipoIdent'].Text;
end;

procedure T341_XMLCt_elegibilidadeVerifica.Set_TipoIdent(Value: WideString);
begin
  ChildNodes['tipoIdent'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_IdentificadorBeneficiario: WideString;
begin
  Result := ChildNodes['identificadorBeneficiario'].Text;
end;

procedure T341_XMLCt_elegibilidadeVerifica.Set_IdentificadorBeneficiario(Value: WideString);
begin
  ChildNodes['identificadorBeneficiario'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_TemplateBiometrico: WideString;
begin
  Result := ChildNodes['templateBiometrico'].Text;
end;

procedure T341_XMLCt_elegibilidadeVerifica.Set_TemplateBiometrico(Value: WideString);
begin
  ChildNodes['templateBiometrico'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_ValidadeCarteira: WideString;
begin
  Result := ChildNodes['validadeCarteira'].Text;
end;

procedure T341_XMLCt_elegibilidadeVerifica.Set_ValidadeCarteira(Value: WideString);
begin
  ChildNodes['validadeCarteira'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_AusenciaCodValidacao: WideString;
begin
  Result := ChildNodes['ausenciaCodValidacao'].Text;
end;

procedure T341_XMLCt_elegibilidadeVerifica.Set_AusenciaCodValidacao(Value: WideString);
begin
  ChildNodes['ausenciaCodValidacao'].NodeValue := Value;
end;

function T341_XMLCt_elegibilidadeVerifica.Get_CodValidacao: WideString;
begin
  Result := ChildNodes['codValidacao'].Text;
end;

procedure T341_XMLCt_elegibilidadeVerifica.Set_CodValidacao(Value: WideString);
begin
  ChildNodes['codValidacao'].NodeValue := Value;
end;

{ T341_XMLCt_guiaCancelamento }

procedure T341_XMLCt_guiaCancelamento.AfterConstruction;
begin
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('guiasCancelamento', T341_XMLCt_guiaCancelamento_guiasCancelamento);
  FGuiasCancelamento := CreateCollection(T341_XMLCt_guiaCancelamento_guiasCancelamentoList341, I341_XMLCt_guiaCancelamento_guiasCancelamento, 'guiasCancelamento') as I341_XMLCt_guiaCancelamento_guiasCancelamentoList341;
  inherited;
end;

function T341_XMLCt_guiaCancelamento.Get_TipoGuia: WideString;
begin
  Result := ChildNodes['tipoGuia'].Text;
end;

procedure T341_XMLCt_guiaCancelamento.Set_TipoGuia(Value: WideString);
begin
  ChildNodes['tipoGuia'].NodeValue := Value;
end;

function T341_XMLCt_guiaCancelamento.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_guiaCancelamento.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_guiaCancelamento.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_guiaCancelamento.Get_GuiasCancelamento: I341_XMLCt_guiaCancelamento_guiasCancelamentoList341;
begin
  Result := FGuiasCancelamento;
end;

{ T341_XMLCt_guiaCancelamento_guiasCancelamento }

function T341_XMLCt_guiaCancelamento_guiasCancelamento.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_guiaCancelamento_guiasCancelamento.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_guiaCancelamento_guiasCancelamento.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_guiaCancelamento_guiasCancelamento.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

{ T341_XMLCt_guiaCancelamento_guiasCancelamentoList341 }

function T341_XMLCt_guiaCancelamento_guiasCancelamentoList341.Add: I341_XMLCt_guiaCancelamento_guiasCancelamento;
begin
  Result := AddItem(-1) as I341_XMLCt_guiaCancelamento_guiasCancelamento;
end;

function T341_XMLCt_guiaCancelamento_guiasCancelamentoList341.Insert(const Index: Integer): I341_XMLCt_guiaCancelamento_guiasCancelamento;
begin
  Result := AddItem(Index) as I341_XMLCt_guiaCancelamento_guiasCancelamento;
end;

function T341_XMLCt_guiaCancelamento_guiasCancelamentoList341.Get_Item(Index: Integer): I341_XMLCt_guiaCancelamento_guiasCancelamento;
begin
  Result := List[Index] as I341_XMLCt_guiaCancelamento_guiasCancelamento;
end;

{ T341_XMLCt_guiaRecursoLote }

procedure T341_XMLCt_guiaRecursoLote.AfterConstruction;
begin
  RegisterChildNode('guiaRecursoGlosaOdonto', T341_XMLCto_recursoGlosaOdonto);
  RegisterChildNode('guiaRecursoGlosa', T341_XMLCtm_recursoGlosa);
  inherited;
end;

function T341_XMLCt_guiaRecursoLote.Get_GuiaRecursoGlosaOdonto: I341_XMLCto_recursoGlosaOdonto;
begin
  Result := ChildNodes['guiaRecursoGlosaOdonto'] as I341_XMLCto_recursoGlosaOdonto;
end;

function T341_XMLCt_guiaRecursoLote.Get_GuiaRecursoGlosa: I341_XMLCtm_recursoGlosa;
begin
  Result := ChildNodes['guiaRecursoGlosa'] as I341_XMLCtm_recursoGlosa;
end;

{ T341_XMLCto_recursoGlosaOdonto }

procedure T341_XMLCto_recursoGlosaOdonto.AfterConstruction;
begin
  RegisterChildNode('dadosContratado', T341_XMLCt_contratadoDados);
  RegisterChildNode('opcaoRecurso', T341_XMLCto_recursoGlosaOdonto_opcaoRecurso);
  inherited;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_NumeroGuiaRecGlosaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaRecGlosaPrestador'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto.Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaRecGlosaPrestador'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_NomeOperadora: WideString;
begin
  Result := ChildNodes['nomeOperadora'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto.Set_NomeOperadora(Value: WideString);
begin
  ChildNodes['nomeOperadora'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_ObjetoRecurso: WideString;
begin
  Result := ChildNodes['objetoRecurso'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto.Set_ObjetoRecurso(Value: WideString);
begin
  ChildNodes['objetoRecurso'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_NumeroGuiaRecGlosaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaRecGlosaOperadora'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto.Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaRecGlosaOperadora'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_DadosContratado: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosContratado'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_NumeroProtocolo: Integer;
begin
  Result := ChildNodes['numeroProtocolo'].NodeValue;
end;

procedure T341_XMLCto_recursoGlosaOdonto.Set_NumeroProtocolo(Value: Integer);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_OpcaoRecurso: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso;
begin
  Result := ChildNodes['opcaoRecurso'] as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_ValorTotalRecursado: WideString;
begin
  Result := ChildNodes['valorTotalRecursado'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto.Set_ValorTotalRecursado(Value: WideString);
begin
  ChildNodes['valorTotalRecursado'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto.Get_DataRecurso: WideString;
begin
  Result := ChildNodes['dataRecurso'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto.Set_DataRecurso(Value: WideString);
begin
  ChildNodes['dataRecurso'].NodeValue := Value;
end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso }

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso.AfterConstruction;
begin
  RegisterChildNode('recursoProtocolo', T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo);
  RegisterChildNode('recursoGuia', T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia);
  FRecursoGuia := CreateCollection(T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341, I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia, 'recursoGuia') as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341;
  inherited;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso.Get_RecursoProtocolo: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo;
begin
  Result := ChildNodes['recursoProtocolo'] as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso.Get_RecursoGuia: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341;
begin
  Result := FRecursoGuia;
end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo }

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo.Get_CodigoGlosaProtocolo: WideString;
begin
  Result := ChildNodes['codigoGlosaProtocolo'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo.Set_CodigoGlosaProtocolo(Value: WideString);
begin
  ChildNodes['codigoGlosaProtocolo'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo.Get_JustificativaProtocolo: WideString;
begin
  Result := ChildNodes['justificativaProtocolo'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoProtocolo.Set_JustificativaProtocolo(Value: WideString);
begin
  ChildNodes['justificativaProtocolo'].NodeValue := Value;
end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia }

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.AfterConstruction;
begin
  RegisterChildNode('recursoProcedimento', T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento);
  FRecursoProcedimento := CreateCollection(T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341, I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento, 'recursoProcedimento') as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341;
  inherited;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Get_NomeBeneficiario: WideString;
begin
  Result := ChildNodes['nomeBeneficiario'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Set_NomeBeneficiario(Value: WideString);
begin
  ChildNodes['nomeBeneficiario'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Get_CodGlosaGuia: WideString;
begin
  Result := ChildNodes['codGlosaGuia'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Set_CodGlosaGuia(Value: WideString);
begin
  ChildNodes['codGlosaGuia'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Get_JustificativaGuia: WideString;
begin
  Result := ChildNodes['justificativaGuia'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Set_JustificativaGuia(Value: WideString);
begin
  ChildNodes['justificativaGuia'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia.Get_RecursoProcedimento: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341;
begin
  Result := FRecursoProcedimento;
end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341 }

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341.Add: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
begin
  Result := AddItem(-1) as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341.Insert(const Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
begin
  Result := AddItem(Index) as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuiaList341.Get_Item(Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
begin
  Result := List[Index] as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia;
end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento }

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.AfterConstruction;
begin
  RegisterChildNode('denteRegiao', T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao);
  RegisterChildNode('procRecurso', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Get_DataRealizacao: WideString;
begin
  Result := ChildNodes['dataRealizacao'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Set_DataRealizacao(Value: WideString);
begin
  ChildNodes['dataRealizacao'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Get_DenteRegiao: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao;
begin
  Result := ChildNodes['denteRegiao'] as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Get_DenteFace: WideString;
begin
  Result := ChildNodes['denteFace'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Set_DenteFace(Value: WideString);
begin
  ChildNodes['denteFace'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Get_Quantidade: Integer;
begin
  Result := ChildNodes['quantidade'].NodeValue;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Set_Quantidade(Value: Integer);
begin
  ChildNodes['quantidade'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Get_ProcRecurso: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procRecurso'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Get_CodGlosaProc: WideString;
begin
  Result := ChildNodes['codGlosaProc'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Set_CodGlosaProc(Value: WideString);
begin
  ChildNodes['codGlosaProc'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Get_JustificativaProc: WideString;
begin
  Result := ChildNodes['justificativaProc'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Set_JustificativaProc(Value: WideString);
begin
  ChildNodes['justificativaProc'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Get_ValorRecursado: WideString;
begin
  Result := ChildNodes['valorRecursado'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento.Set_ValorRecursado(Value: WideString);
begin
  ChildNodes['valorRecursado'].NodeValue := Value;
end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341 }

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341.Add: I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
begin
  Result := AddItem(-1) as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341.Insert(const Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
begin
  Result := AddItem(Index) as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimentoList341.Get_Item(Index: Integer): I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
begin
  Result := List[Index] as I341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento;
end;

{ T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao }

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao.Get_CodDente: WideString;
begin
  Result := ChildNodes['codDente'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao.Set_CodDente(Value: WideString);
begin
  ChildNodes['codDente'].NodeValue := Value;
end;

function T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao.Get_CodRegiao: WideString;
begin
  Result := ChildNodes['codRegiao'].Text;
end;

procedure T341_XMLCto_recursoGlosaOdonto_opcaoRecurso_recursoGuia_recursoProcedimento_denteRegiao.Set_CodRegiao(Value: WideString);
begin
  ChildNodes['codRegiao'].NodeValue := Value;
end;

{ T341_XMLCtm_recursoGlosa }

procedure T341_XMLCtm_recursoGlosa.AfterConstruction;
begin
  RegisterChildNode('dadosContratado', T341_XMLCt_contratadoDados);
  RegisterChildNode('opcaoRecurso', T341_XMLCtm_recursoGlosa_opcaoRecurso);
  inherited;
end;

function T341_XMLCtm_recursoGlosa.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCtm_recursoGlosa.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa.Get_NumeroGuiaRecGlosaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaRecGlosaPrestador'].Text;
end;

procedure T341_XMLCtm_recursoGlosa.Set_NumeroGuiaRecGlosaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaRecGlosaPrestador'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa.Get_NomeOperadora: WideString;
begin
  Result := ChildNodes['nomeOperadora'].Text;
end;

procedure T341_XMLCtm_recursoGlosa.Set_NomeOperadora(Value: WideString);
begin
  ChildNodes['nomeOperadora'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa.Get_ObjetoRecurso: WideString;
begin
  Result := ChildNodes['objetoRecurso'].Text;
end;

procedure T341_XMLCtm_recursoGlosa.Set_ObjetoRecurso(Value: WideString);
begin
  ChildNodes['objetoRecurso'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa.Get_NumeroGuiaRecGlosaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaRecGlosaOperadora'].Text;
end;

procedure T341_XMLCtm_recursoGlosa.Set_NumeroGuiaRecGlosaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaRecGlosaOperadora'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa.Get_DadosContratado: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosContratado'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCtm_recursoGlosa.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCtm_recursoGlosa.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa.Get_NumeroProtocolo: Integer;
begin
  Result := ChildNodes['numeroProtocolo'].NodeValue;
end;

procedure T341_XMLCtm_recursoGlosa.Set_NumeroProtocolo(Value: Integer);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa.Get_OpcaoRecurso: I341_XMLCtm_recursoGlosa_opcaoRecurso;
begin
  Result := ChildNodes['opcaoRecurso'] as I341_XMLCtm_recursoGlosa_opcaoRecurso;
end;

function T341_XMLCtm_recursoGlosa.Get_ValorTotalRecursado: WideString;
begin
  Result := ChildNodes['valorTotalRecursado'].Text;
end;

procedure T341_XMLCtm_recursoGlosa.Set_ValorTotalRecursado(Value: WideString);
begin
  ChildNodes['valorTotalRecursado'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa.Get_DataRecurso: WideString;
begin
  Result := ChildNodes['dataRecurso'].Text;
end;

procedure T341_XMLCtm_recursoGlosa.Set_DataRecurso(Value: WideString);
begin
  ChildNodes['dataRecurso'].NodeValue := Value;
end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso }

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso.AfterConstruction;
begin
  RegisterChildNode('recursoProtocolo', T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo);
  RegisterChildNode('recursoGuia', T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia);
  FRecursoGuia := CreateCollection(T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia, 'recursoGuia') as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341;
  inherited;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso.Get_RecursoProtocolo: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo;
begin
  Result := ChildNodes['recursoProtocolo'] as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso.Get_RecursoGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341;
begin
  Result := FRecursoGuia;
end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo }

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo.Get_CodigoGlosaProtocolo: WideString;
begin
  Result := ChildNodes['codigoGlosaProtocolo'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo.Set_CodigoGlosaProtocolo(Value: WideString);
begin
  ChildNodes['codigoGlosaProtocolo'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo.Get_JustificativaProtocolo: WideString;
begin
  Result := ChildNodes['justificativaProtocolo'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoProtocolo.Set_JustificativaProtocolo(Value: WideString);
begin
  ChildNodes['justificativaProtocolo'].NodeValue := Value;
end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia }

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia.AfterConstruction;
begin
  RegisterChildNode('opcaoRecursoGuia', T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia);
  inherited;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia.Get_NumeroGuiaOrigem: WideString;
begin
  Result := ChildNodes['numeroGuiaOrigem'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia.Set_NumeroGuiaOrigem(Value: WideString);
begin
  ChildNodes['numeroGuiaOrigem'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia.Get_Senha: WideString;
begin
  Result := ChildNodes['senha'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia.Set_Senha(Value: WideString);
begin
  ChildNodes['senha'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia.Get_OpcaoRecursoGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia;
begin
  Result := ChildNodes['opcaoRecursoGuia'] as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia;
end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341 }

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341.Add: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
begin
  Result := AddItem(-1) as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341.Insert(const Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
begin
  Result := AddItem(Index) as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuiaList341.Get_Item(Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
begin
  Result := List[Index] as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia;
end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia }

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia.AfterConstruction;
begin
  RegisterChildNode('recursoGuiaCompleta', T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta);
  RegisterChildNode('itensGuia', T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia);
  FRecursoGuiaCompleta := CreateCollection(T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta, 'recursoGuiaCompleta') as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341;
  FItensGuia := CreateCollection(T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341, I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia, 'itensGuia') as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341;
  inherited;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia.Get_RecursoGuiaCompleta: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341;
begin
  Result := FRecursoGuiaCompleta;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia.Get_ItensGuia: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341;
begin
  Result := FItensGuia;
end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta }

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta.Get_CodGlosaGuia: WideString;
begin
  Result := ChildNodes['codGlosaGuia'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta.Set_CodGlosaGuia(Value: WideString);
begin
  ChildNodes['codGlosaGuia'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta.Get_JustificativaGuia: WideString;
begin
  Result := ChildNodes['justificativaGuia'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta.Set_JustificativaGuia(Value: WideString);
begin
  ChildNodes['justificativaGuia'].NodeValue := Value;
end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341 }

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341.Add: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
begin
  Result := AddItem(-1) as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341.Insert(const Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
begin
  Result := AddItem(Index) as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompletaList341.Get_Item(Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
begin
  Result := List[Index] as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_recursoGuiaCompleta;
end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia }

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.AfterConstruction;
begin
  RegisterChildNode('procRecurso', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Get_SequencialItem: Integer;
begin
  Result := ChildNodes['sequencialItem'].NodeValue;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Set_SequencialItem(Value: Integer);
begin
  ChildNodes['sequencialItem'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Get_DataInicio: WideString;
begin
  Result := ChildNodes['dataInicio'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Set_DataInicio(Value: WideString);
begin
  ChildNodes['dataInicio'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Get_DataFim: WideString;
begin
  Result := ChildNodes['dataFim'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Set_DataFim(Value: WideString);
begin
  ChildNodes['dataFim'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Get_ProcRecurso: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procRecurso'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Get_GrauParticipacao: WideString;
begin
  Result := ChildNodes['grauParticipacao'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Set_GrauParticipacao(Value: WideString);
begin
  ChildNodes['grauParticipacao'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Get_CodGlosaItem: WideString;
begin
  Result := ChildNodes['codGlosaItem'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Set_CodGlosaItem(Value: WideString);
begin
  ChildNodes['codGlosaItem'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Get_ValorRecursado: WideString;
begin
  Result := ChildNodes['valorRecursado'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Set_ValorRecursado(Value: WideString);
begin
  ChildNodes['valorRecursado'].NodeValue := Value;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Get_JustificativaItem: WideString;
begin
  Result := ChildNodes['justificativaItem'].Text;
end;

procedure T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia.Set_JustificativaItem(Value: WideString);
begin
  ChildNodes['justificativaItem'].NodeValue := Value;
end;

{ T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341 }

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341.Add: I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
begin
  Result := AddItem(-1) as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341.Insert(const Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
begin
  Result := AddItem(Index) as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
end;

function T341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuiaList341.Get_Item(Index: Integer): I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
begin
  Result := List[Index] as I341_XMLCtm_recursoGlosa_opcaoRecurso_recursoGuia_opcaoRecursoGuia_itensGuia;
end;

{ T341_XMLEpilogo }

function T341_XMLEpilogo.Get_Hash: WideString;
begin
  Result := ChildNodes['hash'].Text;
end;

procedure T341_XMLEpilogo.Set_Hash(Value: WideString);
begin
  ChildNodes['hash'].NodeValue := Value;
end;

{ T341_XMLCt_creditoOdonto }

function T341_XMLCt_creditoOdonto.Get_ValorCredito: WideString;
begin
  Result := ChildNodes['valorCredito'].Text;
end;

procedure T341_XMLCt_creditoOdonto.Set_ValorCredito(Value: WideString);
begin
  ChildNodes['valorCredito'].NodeValue := Value;
end;

function T341_XMLCt_creditoOdonto.Get_Descricao: WideString;
begin
  Result := ChildNodes['descricao'].Text;
end;

procedure T341_XMLCt_creditoOdonto.Set_Descricao(Value: WideString);
begin
  ChildNodes['descricao'].NodeValue := Value;
end;

{ T341_XMLCt_diagnostico }

function T341_XMLCt_diagnostico.Get_TabelaDiagnostico: WideString;
begin
  Result := ChildNodes['tabelaDiagnostico'].Text;
end;

procedure T341_XMLCt_diagnostico.Set_TabelaDiagnostico(Value: WideString);
begin
  ChildNodes['tabelaDiagnostico'].NodeValue := Value;
end;

function T341_XMLCt_diagnostico.Get_CodigoDiagnostico: WideString;
begin
  Result := ChildNodes['codigoDiagnostico'].Text;
end;

procedure T341_XMLCt_diagnostico.Set_CodigoDiagnostico(Value: WideString);
begin
  ChildNodes['codigoDiagnostico'].NodeValue := Value;
end;

function T341_XMLCt_diagnostico.Get_DescricaoDiagnostico: WideString;
begin
  Result := ChildNodes['descricaoDiagnostico'].Text;
end;

procedure T341_XMLCt_diagnostico.Set_DescricaoDiagnostico(Value: WideString);
begin
  ChildNodes['descricaoDiagnostico'].NodeValue := Value;
end;

{ T341_XMLCt_fontePagadora }

function T341_XMLCt_fontePagadora.Get_RegistroANS: WideString;
begin
  Result := ChildNodes['registroANS'].Text;
end;

procedure T341_XMLCt_fontePagadora.Set_RegistroANS(Value: WideString);
begin
  ChildNodes['registroANS'].NodeValue := Value;
end;

function T341_XMLCt_fontePagadora.Get_IdentificacaoUnidadePagadora: WideString;
begin
  Result := ChildNodes['identificacaoUnidadePagadora'].Text;
end;

procedure T341_XMLCt_fontePagadora.Set_IdentificacaoUnidadePagadora(Value: WideString);
begin
  ChildNodes['identificacaoUnidadePagadora'].NodeValue := Value;
end;

{ T341_XMLCt_guiaDadosAnexo }

procedure T341_XMLCt_guiaDadosAnexo.AfterConstruction;
begin
  RegisterChildNode('dadosBeneficiario', T341_XMLCt_beneficiarioDados);
  RegisterChildNode('vlInformadoGuia', T341_XMLCt_valorTotal);
  RegisterChildNode('glosaAnexo', T341_XMLCt_guiaDadosAnexo_glosaAnexo);
  RegisterChildNode('procedimentosSolicitados', T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados);
  inherited;
end;

function T341_XMLCt_guiaDadosAnexo.Get_NumeroGuiaPrestador: WideString;
begin
  Result := ChildNodes['numeroGuiaPrestador'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo.Set_NumeroGuiaPrestador(Value: WideString);
begin
  ChildNodes['numeroGuiaPrestador'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosAnexo.Get_NumeroGuiaOperadora: WideString;
begin
  Result := ChildNodes['numeroGuiaOperadora'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo.Set_NumeroGuiaOperadora(Value: WideString);
begin
  ChildNodes['numeroGuiaOperadora'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosAnexo.Get_DadosBeneficiario: I341_XMLCt_beneficiarioDados;
begin
  Result := ChildNodes['dadosBeneficiario'] as I341_XMLCt_beneficiarioDados;
end;

function T341_XMLCt_guiaDadosAnexo.Get_DataEmissao_SolicitacaoAnexo: WideString;
begin
  Result := ChildNodes['dataEmissao_SolicitacaoAnexo'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo.Set_DataEmissao_SolicitacaoAnexo(Value: WideString);
begin
  ChildNodes['dataEmissao_SolicitacaoAnexo'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosAnexo.Get_VlInformadoGuia: I341_XMLCt_valorTotal;
begin
  Result := ChildNodes['vlInformadoGuia'] as I341_XMLCt_valorTotal;
end;

function T341_XMLCt_guiaDadosAnexo.Get_GlosaAnexo: I341_XMLCt_guiaDadosAnexo_glosaAnexo;
begin
  Result := ChildNodes['glosaAnexo'] as I341_XMLCt_guiaDadosAnexo_glosaAnexo;
end;

function T341_XMLCt_guiaDadosAnexo.Get_ProcedimentosSolicitados: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados;
begin
  Result := ChildNodes['procedimentosSolicitados'] as I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados;
end;

{ T341_XMLCt_guiaDadosAnexoList341 }

function T341_XMLCt_guiaDadosAnexoList341.Add: I341_XMLCt_guiaDadosAnexo;
begin
  Result := AddItem(-1) as I341_XMLCt_guiaDadosAnexo;
end;

function T341_XMLCt_guiaDadosAnexoList341.Insert(const Index: Integer): I341_XMLCt_guiaDadosAnexo;
begin
  Result := AddItem(Index) as I341_XMLCt_guiaDadosAnexo;
end;

function T341_XMLCt_guiaDadosAnexoList341.Get_Item(Index: Integer): I341_XMLCt_guiaDadosAnexo;
begin
  Result := List[Index] as I341_XMLCt_guiaDadosAnexo;
end;

{ T341_XMLCt_guiaDadosAnexo_glosaAnexo }

procedure T341_XMLCt_guiaDadosAnexo_glosaAnexo.AfterConstruction;
begin
  RegisterChildNode('motivoGlosa', T341_XMLCt_motivoGlosa);
  FMotivoGlosa := CreateCollection(T341_XMLCt_motivoGlosaList341, I341_XMLCt_motivoGlosa, 'motivoGlosa') as I341_XMLCt_motivoGlosaList341;
  inherited;
end;

function T341_XMLCt_guiaDadosAnexo_glosaAnexo.Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
begin
  Result := FMotivoGlosa;
end;

function T341_XMLCt_guiaDadosAnexo_glosaAnexo.Get_VlGlosaAnexo: WideString;
begin
  Result := ChildNodes['vlGlosaAnexo'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo_glosaAnexo.Set_VlGlosaAnexo(Value: WideString);
begin
  ChildNodes['vlGlosaAnexo'].NodeValue := Value;
end;

{ T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados }

procedure T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados.AfterConstruction;
begin
  RegisterChildNode('procedimentoSolicitado', T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado);
  ItemTag := 'procedimentoSolicitado';
  ItemInterface := I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
  inherited;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados.Get_ProcedimentoSolicitado(Index: Integer): I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
begin
  Result := List[Index] as I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados.Add: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
begin
  Result := AddItem(-1) as I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados.Insert(const Index: Integer): I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
begin
  Result := AddItem(Index) as I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado;
end;

{ T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado }

procedure T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  RegisterChildNode('glosasProcedimento', T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento);
  inherited;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Get_OpcaoFabricante: WideString;
begin
  Result := ChildNodes['opcaoFabricante'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Set_OpcaoFabricante(Value: WideString);
begin
  ChildNodes['opcaoFabricante'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Get_QtdSolicitada: WideString;
begin
  Result := ChildNodes['qtdSolicitada'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Set_QtdSolicitada(Value: WideString);
begin
  ChildNodes['qtdSolicitada'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Get_ValorSolicitado: WideString;
begin
  Result := ChildNodes['valorSolicitado'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Set_ValorSolicitado(Value: WideString);
begin
  ChildNodes['valorSolicitado'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Get_QtdAutorizada: WideString;
begin
  Result := ChildNodes['qtdAutorizada'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Set_QtdAutorizada(Value: WideString);
begin
  ChildNodes['qtdAutorizada'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Get_ValorAutorizado: WideString;
begin
  Result := ChildNodes['valorAutorizado'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Set_ValorAutorizado(Value: WideString);
begin
  ChildNodes['valorAutorizado'].NodeValue := Value;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado.Get_GlosasProcedimento: I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento;
begin
  Result := ChildNodes['glosasProcedimento'] as I341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento;
end;

{ T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento }

procedure T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento.AfterConstruction;
begin
  RegisterChildNode('motivoGlosa', T341_XMLCt_motivoGlosa);
  FMotivoGlosa := CreateCollection(T341_XMLCt_motivoGlosaList341, I341_XMLCt_motivoGlosa, 'motivoGlosa') as I341_XMLCt_motivoGlosaList341;
  inherited;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento.Get_MotivoGlosa: I341_XMLCt_motivoGlosaList341;
begin
  Result := FMotivoGlosa;
end;

function T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento.Get_ValorGlosaProcedimento: WideString;
begin
  Result := ChildNodes['valorGlosaProcedimento'].Text;
end;

procedure T341_XMLCt_guiaDadosAnexo_procedimentosSolicitados_procedimentoSolicitado_glosasProcedimento.Set_ValorGlosaProcedimento(Value: WideString);
begin
  ChildNodes['valorGlosaProcedimento'].NodeValue := Value;
end;

{ T341_XMLCt_guiaRecurso }

procedure T341_XMLCt_guiaRecurso.AfterConstruction;
begin
  RegisterChildNode('motivosGlosa', T341_XMLCt_motivoGlosa);
  FMotivosGlosa := CreateCollection(T341_XMLCt_motivoGlosaList341, I341_XMLCt_motivoGlosa, 'motivosGlosa') as I341_XMLCt_motivoGlosaList341;
  inherited;
end;

function T341_XMLCt_guiaRecurso.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_guiaRecurso.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_guiaRecurso.Get_NumDemoAnalisePagto: WideString;
begin
  Result := ChildNodes['numDemoAnalisePagto'].Text;
end;

procedure T341_XMLCt_guiaRecurso.Set_NumDemoAnalisePagto(Value: WideString);
begin
  ChildNodes['numDemoAnalisePagto'].NodeValue := Value;
end;

function T341_XMLCt_guiaRecurso.Get_NumeroGuiaRecurso: WideString;
begin
  Result := ChildNodes['numeroGuiaRecurso'].Text;
end;

procedure T341_XMLCt_guiaRecurso.Set_NumeroGuiaRecurso(Value: WideString);
begin
  ChildNodes['numeroGuiaRecurso'].NodeValue := Value;
end;

function T341_XMLCt_guiaRecurso.Get_NumeroGuiaOrigem: WideString;
begin
  Result := ChildNodes['numeroGuiaOrigem'].Text;
end;

procedure T341_XMLCt_guiaRecurso.Set_NumeroGuiaOrigem(Value: WideString);
begin
  ChildNodes['numeroGuiaOrigem'].NodeValue := Value;
end;

function T341_XMLCt_guiaRecurso.Get_MotivosGlosa: I341_XMLCt_motivoGlosaList341;
begin
  Result := FMotivosGlosa;
end;

{ T341_XMLCt_guiaRecursoList341 }

function T341_XMLCt_guiaRecursoList341.Add: I341_XMLCt_guiaRecurso;
begin
  Result := AddItem(-1) as I341_XMLCt_guiaRecurso;
end;

function T341_XMLCt_guiaRecursoList341.Insert(const Index: Integer): I341_XMLCt_guiaRecurso;
begin
  Result := AddItem(Index) as I341_XMLCt_guiaRecurso;
end;

function T341_XMLCt_guiaRecursoList341.Get_Item(Index: Integer): I341_XMLCt_guiaRecurso;
begin
  Result := List[Index] as I341_XMLCt_guiaRecurso;
end;

{ T341_XMLCt_guiaValorTotalSADT }

function T341_XMLCt_guiaValorTotalSADT.Get_ValorProcedimentos: WideString;
begin
  Result := ChildNodes['valorProcedimentos'].Text;
end;

procedure T341_XMLCt_guiaValorTotalSADT.Set_ValorProcedimentos(Value: WideString);
begin
  ChildNodes['valorProcedimentos'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotalSADT.Get_ValorTaxasAlugueis: WideString;
begin
  Result := ChildNodes['valorTaxasAlugueis'].Text;
end;

procedure T341_XMLCt_guiaValorTotalSADT.Set_ValorTaxasAlugueis(Value: WideString);
begin
  ChildNodes['valorTaxasAlugueis'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotalSADT.Get_ValorMateriais: WideString;
begin
  Result := ChildNodes['valorMateriais'].Text;
end;

procedure T341_XMLCt_guiaValorTotalSADT.Set_ValorMateriais(Value: WideString);
begin
  ChildNodes['valorMateriais'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotalSADT.Get_ValorMedicamentos: WideString;
begin
  Result := ChildNodes['valorMedicamentos'].Text;
end;

procedure T341_XMLCt_guiaValorTotalSADT.Set_ValorMedicamentos(Value: WideString);
begin
  ChildNodes['valorMedicamentos'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotalSADT.Get_ValorOPME: WideString;
begin
  Result := ChildNodes['valorOPME'].Text;
end;

procedure T341_XMLCt_guiaValorTotalSADT.Set_ValorOPME(Value: WideString);
begin
  ChildNodes['valorOPME'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotalSADT.Get_ValorGasesMedicinais: WideString;
begin
  Result := ChildNodes['valorGasesMedicinais'].Text;
end;

procedure T341_XMLCt_guiaValorTotalSADT.Set_ValorGasesMedicinais(Value: WideString);
begin
  ChildNodes['valorGasesMedicinais'].NodeValue := Value;
end;

function T341_XMLCt_guiaValorTotalSADT.Get_ValorTotalGeral: WideString;
begin
  Result := ChildNodes['valorTotalGeral'].Text;
end;

procedure T341_XMLCt_guiaValorTotalSADT.Set_ValorTotalGeral(Value: WideString);
begin
  ChildNodes['valorTotalGeral'].NodeValue := Value;
end;

{ T341_XMLCt_hipoteseDiagnostica }

procedure T341_XMLCt_hipoteseDiagnostica.AfterConstruction;
begin
  RegisterChildNode('diagnostico', T341_XMLCt_diagnostico);
  inherited;
end;

function T341_XMLCt_hipoteseDiagnostica.Get_Diagnostico: I341_XMLCt_diagnostico;
begin
  Result := ChildNodes['diagnostico'] as I341_XMLCt_diagnostico;
end;

function T341_XMLCt_hipoteseDiagnostica.Get_IndicacaoAcidente: WideString;
begin
  Result := ChildNodes['indicacaoAcidente'].Text;
end;

procedure T341_XMLCt_hipoteseDiagnostica.Set_IndicacaoAcidente(Value: WideString);
begin
  ChildNodes['indicacaoAcidente'].NodeValue := Value;
end;

{ T341_XMLCt_intervaloCiclos }

function T341_XMLCt_intervaloCiclos.Get_Tempo: Integer;
begin
  Result := ChildNodes['tempo'].NodeValue;
end;

procedure T341_XMLCt_intervaloCiclos.Set_Tempo(Value: Integer);
begin
  ChildNodes['tempo'].NodeValue := Value;
end;

function T341_XMLCt_intervaloCiclos.Get_Unidade: WideString;
begin
  Result := ChildNodes['unidade'].Text;
end;

procedure T341_XMLCt_intervaloCiclos.Set_Unidade(Value: WideString);
begin
  ChildNodes['unidade'].NodeValue := Value;
end;

{ T341_XMLCt_opmeDados }

procedure T341_XMLCt_opmeDados.AfterConstruction;
begin
  RegisterChildNode('identificacaoOPME', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCt_opmeDados.Get_IdentificacaoOPME: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['identificacaoOPME'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_opmeDados.Get_NomeFabricante: WideString;
begin
  Result := ChildNodes['nomeFabricante'].Text;
end;

procedure T341_XMLCt_opmeDados.Set_NomeFabricante(Value: WideString);
begin
  ChildNodes['nomeFabricante'].NodeValue := Value;
end;

{ T341_XMLCt_opmUtilizada }

procedure T341_XMLCt_opmUtilizada.AfterConstruction;
begin
  RegisterChildNode('OPM', T341_XMLCt_opmUtilizada_OPM);
  inherited;
end;

function T341_XMLCt_opmUtilizada.Get_OPM: I341_XMLCt_opmUtilizada_OPM;
begin
  Result := ChildNodes['OPM'] as I341_XMLCt_opmUtilizada_OPM;
end;

function T341_XMLCt_opmUtilizada.Get_ValorTotalOPM: WideString;
begin
  Result := ChildNodes['valorTotalOPM'].Text;
end;

procedure T341_XMLCt_opmUtilizada.Set_ValorTotalOPM(Value: WideString);
begin
  ChildNodes['valorTotalOPM'].NodeValue := Value;
end;

{ T341_XMLCt_opmUtilizada_OPM }

procedure T341_XMLCt_opmUtilizada_OPM.AfterConstruction;
begin
  RegisterChildNode('identificacaoOPM', T341_XMLCt_opmUtilizada_OPM_identificacaoOPM);
  ItemTag := 'identificacaoOPM';
  ItemInterface := I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
  inherited;
end;

function T341_XMLCt_opmUtilizada_OPM.Get_IdentificacaoOPM(Index: Integer): I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
begin
  Result := List[Index] as I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
end;

function T341_XMLCt_opmUtilizada_OPM.Add: I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
begin
  Result := AddItem(-1) as I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
end;

function T341_XMLCt_opmUtilizada_OPM.Insert(const Index: Integer): I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
begin
  Result := AddItem(Index) as I341_XMLCt_opmUtilizada_OPM_identificacaoOPM;
end;

{ T341_XMLCt_opmUtilizada_OPM_identificacaoOPM }

procedure T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.AfterConstruction;
begin
  RegisterChildNode('identificacaoOPME', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.Get_IdentificacaoOPME: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['identificacaoOPME'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.Get_Quantidade: Integer;
begin
  Result := ChildNodes['quantidade'].NodeValue;
end;

procedure T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.Set_Quantidade(Value: Integer);
begin
  ChildNodes['quantidade'].NodeValue := Value;
end;

function T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.Get_CodigoBarra: WideString;
begin
  Result := ChildNodes['codigoBarra'].Text;
end;

procedure T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.Set_CodigoBarra(Value: WideString);
begin
  ChildNodes['codigoBarra'].NodeValue := Value;
end;

function T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.Get_ValorUnitario: WideString;
begin
  Result := ChildNodes['valorUnitario'].Text;
end;

procedure T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.Set_ValorUnitario(Value: WideString);
begin
  ChildNodes['valorUnitario'].NodeValue := Value;
end;

function T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.Get_ValorTotal: WideString;
begin
  Result := ChildNodes['valorTotal'].Text;
end;

procedure T341_XMLCt_opmUtilizada_OPM_identificacaoOPM.Set_ValorTotal(Value: WideString);
begin
  ChildNodes['valorTotal'].NodeValue := Value;
end;

{ T341_XMLCt_pagamentoResumo }

procedure T341_XMLCt_pagamentoResumo.AfterConstruction;
begin
  RegisterChildNode('valorTotalLote', T341_XMLCt_valorTotal);
  inherited;
end;

function T341_XMLCt_pagamentoResumo.Get_NumeroFatura: WideString;
begin
  Result := ChildNodes['numeroFatura'].Text;
end;

procedure T341_XMLCt_pagamentoResumo.Set_NumeroFatura(Value: WideString);
begin
  ChildNodes['numeroFatura'].NodeValue := Value;
end;

function T341_XMLCt_pagamentoResumo.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_pagamentoResumo.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_pagamentoResumo.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_pagamentoResumo.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_pagamentoResumo.Get_ValorTotalLote: I341_XMLCt_valorTotal;
begin
  Result := ChildNodes['valorTotalLote'] as I341_XMLCt_valorTotal;
end;

{ T341_XMLCt_procedimentosComplementares }

procedure T341_XMLCt_procedimentosComplementares.AfterConstruction;
begin
  RegisterChildNode('identificacao', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCt_procedimentosComplementares.Get_DataProvavel: WideString;
begin
  Result := ChildNodes['dataProvavel'].Text;
end;

procedure T341_XMLCt_procedimentosComplementares.Set_DataProvavel(Value: WideString);
begin
  ChildNodes['dataProvavel'].NodeValue := Value;
end;

function T341_XMLCt_procedimentosComplementares.Get_Identificacao: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['identificacao'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_procedimentosComplementares.Get_Quantidade: WideString;
begin
  Result := ChildNodes['quantidade'].Text;
end;

procedure T341_XMLCt_procedimentosComplementares.Set_Quantidade(Value: WideString);
begin
  ChildNodes['quantidade'].NodeValue := Value;
end;

{ T341_XMLCt_procedimentoSolicitado }

procedure T341_XMLCt_procedimentoSolicitado.AfterConstruction;
begin
  RegisterChildNode('procedimento', T341_XMLCt_procedimentoDados);
  inherited;
end;

function T341_XMLCt_procedimentoSolicitado.Get_Procedimento: I341_XMLCt_procedimentoDados;
begin
  Result := ChildNodes['procedimento'] as I341_XMLCt_procedimentoDados;
end;

function T341_XMLCt_procedimentoSolicitado.Get_UnidadeMedida: WideString;
begin
  Result := ChildNodes['unidadeMedida'].Text;
end;

procedure T341_XMLCt_procedimentoSolicitado.Set_UnidadeMedida(Value: WideString);
begin
  ChildNodes['unidadeMedida'].NodeValue := Value;
end;

function T341_XMLCt_procedimentoSolicitado.Get_QuantidadeSolicitada: Integer;
begin
  Result := ChildNodes['quantidadeSolicitada'].NodeValue;
end;

procedure T341_XMLCt_procedimentoSolicitado.Set_QuantidadeSolicitada(Value: Integer);
begin
  ChildNodes['quantidadeSolicitada'].NodeValue := Value;
end;

{ T341_XMLCt_protocoloDetalheAnexo }

procedure T341_XMLCt_protocoloDetalheAnexo.AfterConstruction;
begin
  RegisterChildNode('glosasProtocolo', T341_XMLCt_motivoGlosa);
  RegisterChildNode('dadosGuias', T341_XMLCt_guiaDadosAnexo);
  FGlosasProtocolo := CreateCollection(T341_XMLCt_motivoGlosaList341, I341_XMLCt_motivoGlosa, 'glosasProtocolo') as I341_XMLCt_motivoGlosaList341;
  FDadosGuias := CreateCollection(T341_XMLCt_guiaDadosAnexoList341, I341_XMLCt_guiaDadosAnexo, 'dadosGuias') as I341_XMLCt_guiaDadosAnexoList341;
  inherited;
end;

function T341_XMLCt_protocoloDetalheAnexo.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloDetalheAnexo.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_protocoloDetalheAnexo.Get_ValorTotalProtocolo: WideString;
begin
  Result := ChildNodes['valorTotalProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloDetalheAnexo.Set_ValorTotalProtocolo(Value: WideString);
begin
  ChildNodes['valorTotalProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_protocoloDetalheAnexo.Get_GlosasProtocolo: I341_XMLCt_motivoGlosaList341;
begin
  Result := FGlosasProtocolo;
end;

function T341_XMLCt_protocoloDetalheAnexo.Get_VlGlosaProtocolo: WideString;
begin
  Result := ChildNodes['vlGlosaProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloDetalheAnexo.Set_VlGlosaProtocolo(Value: WideString);
begin
  ChildNodes['vlGlosaProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_protocoloDetalheAnexo.Get_DadosGuias: I341_XMLCt_guiaDadosAnexoList341;
begin
  Result := FDadosGuias;
end;

{ T341_XMLCt_protocoloRecurso }

procedure T341_XMLCt_protocoloRecurso.AfterConstruction;
begin
  RegisterChildNode('glosaProtocolo', T341_XMLCt_motivoGlosa);
  RegisterChildNode('dadosGuias', T341_XMLCt_guiaRecurso);
  FGlosaProtocolo := CreateCollection(T341_XMLCt_motivoGlosaList341, I341_XMLCt_motivoGlosa, 'glosaProtocolo') as I341_XMLCt_motivoGlosaList341;
  FDadosGuias := CreateCollection(T341_XMLCt_guiaRecursoList341, I341_XMLCt_guiaRecurso, 'dadosGuias') as I341_XMLCt_guiaRecursoList341;
  inherited;
end;

function T341_XMLCt_protocoloRecurso.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloRecurso.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecurso.Get_GlosaProtocolo: I341_XMLCt_motivoGlosaList341;
begin
  Result := FGlosaProtocolo;
end;

function T341_XMLCt_protocoloRecurso.Get_DadosGuias: I341_XMLCt_guiaRecursoList341;
begin
  Result := FDadosGuias;
end;

{ T341_XMLCt_protocoloRecebimentoAnexo }

procedure T341_XMLCt_protocoloRecebimentoAnexo.AfterConstruction;
begin
  RegisterChildNode('identificacaoOperadora', T341_XMLCt_fontePagadora);
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('detalheProtocolo', T341_XMLCt_protocoloDetalheAnexo);
  inherited;
end;

function T341_XMLCt_protocoloRecebimentoAnexo.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloRecebimentoAnexo.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecebimentoAnexo.Get_IdentificacaoOperadora: I341_XMLCt_fontePagadora;
begin
  Result := ChildNodes['identificacaoOperadora'] as I341_XMLCt_fontePagadora;
end;

function T341_XMLCt_protocoloRecebimentoAnexo.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_protocoloRecebimentoAnexo.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_protocoloRecebimentoAnexo.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecebimentoAnexo.Get_DataEnvioLote: WideString;
begin
  Result := ChildNodes['dataEnvioLote'].Text;
end;

procedure T341_XMLCt_protocoloRecebimentoAnexo.Set_DataEnvioLote(Value: WideString);
begin
  ChildNodes['dataEnvioLote'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecebimentoAnexo.Get_DetalheProtocolo: I341_XMLCt_protocoloDetalheAnexo;
begin
  Result := ChildNodes['detalheProtocolo'] as I341_XMLCt_protocoloDetalheAnexo;
end;

{ T341_XMLCt_protocoloRecebimentoRecurso }

procedure T341_XMLCt_protocoloRecebimentoRecurso.AfterConstruction;
begin
  RegisterChildNode('identificacaoOperadora', T341_XMLCt_fontePagadora);
  RegisterChildNode('dadosPrestador', T341_XMLCt_contratadoDados);
  RegisterChildNode('detalheProtocolo', T341_XMLCt_protocoloRecurso);
  inherited;
end;

function T341_XMLCt_protocoloRecebimentoRecurso.Get_NumeroProtocolo: WideString;
begin
  Result := ChildNodes['numeroProtocolo'].Text;
end;

procedure T341_XMLCt_protocoloRecebimentoRecurso.Set_NumeroProtocolo(Value: WideString);
begin
  ChildNodes['numeroProtocolo'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecebimentoRecurso.Get_IdentificacaoOperadora: I341_XMLCt_fontePagadora;
begin
  Result := ChildNodes['identificacaoOperadora'] as I341_XMLCt_fontePagadora;
end;

function T341_XMLCt_protocoloRecebimentoRecurso.Get_DadosPrestador: I341_XMLCt_contratadoDados;
begin
  Result := ChildNodes['dadosPrestador'] as I341_XMLCt_contratadoDados;
end;

function T341_XMLCt_protocoloRecebimentoRecurso.Get_NumeroLote: WideString;
begin
  Result := ChildNodes['numeroLote'].Text;
end;

procedure T341_XMLCt_protocoloRecebimentoRecurso.Set_NumeroLote(Value: WideString);
begin
  ChildNodes['numeroLote'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecebimentoRecurso.Get_DataEnvioLote: WideString;
begin
  Result := ChildNodes['dataEnvioLote'].Text;
end;

procedure T341_XMLCt_protocoloRecebimentoRecurso.Set_DataEnvioLote(Value: WideString);
begin
  ChildNodes['dataEnvioLote'].NodeValue := Value;
end;

function T341_XMLCt_protocoloRecebimentoRecurso.Get_DetalheProtocolo: I341_XMLCt_protocoloRecurso;
begin
  Result := ChildNodes['detalheProtocolo'] as I341_XMLCt_protocoloRecurso;
end;

{ T341_XMLCt_respostaElegibilidade }

procedure T341_XMLCt_respostaElegibilidade.AfterConstruction;
begin
  RegisterChildNode('mensagemErro', T341_XMLCt_motivoGlosa);
  RegisterChildNode('reciboElegibilidade', T341_XMLCt_elegibilidadeRecibo);
  inherited;
end;

function T341_XMLCt_respostaElegibilidade.Get_MensagemErro: I341_XMLCt_motivoGlosa;
begin
  Result := ChildNodes['mensagemErro'] as I341_XMLCt_motivoGlosa;
end;

function T341_XMLCt_respostaElegibilidade.Get_ReciboElegibilidade: I341_XMLCt_elegibilidadeRecibo;
begin
  Result := ChildNodes['reciboElegibilidade'] as I341_XMLCt_elegibilidadeRecibo;
end;

{ T341_XMLCt_valorCreditoDesconto }

function T341_XMLCt_valorCreditoDesconto.Get_TipoLancamento: WideString;
begin
  Result := ChildNodes['tipoLancamento'].Text;
end;

procedure T341_XMLCt_valorCreditoDesconto.Set_TipoLancamento(Value: WideString);
begin
  ChildNodes['tipoLancamento'].NodeValue := Value;
end;

function T341_XMLCt_valorCreditoDesconto.Get_Descricao: WideString;
begin
  Result := ChildNodes['descricao'].Text;
end;

procedure T341_XMLCt_valorCreditoDesconto.Set_Descricao(Value: WideString);
begin
  ChildNodes['descricao'].NodeValue := Value;
end;

function T341_XMLCt_valorCreditoDesconto.Get_Valor: WideString;
begin
  Result := ChildNodes['valor'].Text;
end;

procedure T341_XMLCt_valorCreditoDesconto.Set_Valor(Value: WideString);
begin
  ChildNodes['valor'].NodeValue := Value;
end;

{ T341_XMLString_List341 }

function T341_XMLString_List341.Add(const Value: WideString): IXMLNode;
begin
  Result := AddItem(-1);
  Result.NodeValue := Value;
end;

function T341_XMLString_List341.Insert(const Index: Integer; const Value: WideString): IXMLNode;
begin
  Result := AddItem(Index);
  Result.NodeValue := Value;
end;

function T341_XMLString_List341.Get_Item(Index: Integer): WideString;
begin
  Result := List[Index].NodeValue;
end;

{ T341_XMLBase64BinaryList341 }

function T341_XMLBase64BinaryList341.Add(const Value: WideString): IXMLNode;
begin
  Result := AddItem(-1);
  Result.NodeValue := Value;
end;

function T341_XMLBase64BinaryList341.Insert(const Index: Integer; const Value: WideString): IXMLNode;
begin
  Result := AddItem(Index);
  Result.NodeValue := Value;
end;

function T341_XMLBase64BinaryList341.Get_Item(Index: Integer): WideString;
begin
  Result := List[Index].NodeValue;
end;

{ T341_XMLSt_texto4List341 }

function T341_XMLSt_texto4List341.Add(const Value: WideString): IXMLNode;
begin
  Result := AddItem(-1);
  Result.NodeValue := Value;
end;

function T341_XMLSt_texto4List341.Insert(const Index: Integer; const Value: WideString): IXMLNode;
begin
  Result := AddItem(Index);
  Result.NodeValue := Value;
end;

function T341_XMLSt_texto4List341.Get_Item(Index: Integer): WideString;
begin
  Result := List[Index].NodeValue;
end;

{ T341_XMLDm_tipoGlosaList341 }

function T341_XMLDm_tipoGlosaList341.Add(const Value: WideString): IXMLNode;
begin
  Result := AddItem(-1);
  Result.NodeValue := Value;
end;

function T341_XMLDm_tipoGlosaList341.Insert(const Index: Integer; const Value: WideString): IXMLNode;
begin
  Result := AddItem(Index);
  Result.NodeValue := Value;
end;

function T341_XMLDm_tipoGlosaList341.Get_Item(Index: Integer): WideString;
begin
  Result := List[Index].NodeValue;
end;

{ T341_XMLDm_diagnosticoCID10List341 }

function T341_XMLDm_diagnosticoCID10List341.Add(const Value: WideString): IXMLNode;
begin
  Result := AddItem(-1);
  Result.NodeValue := Value;
end;

function T341_XMLDm_diagnosticoCID10List341.Insert(const Index: Integer; const Value: WideString): IXMLNode;
begin
  Result := AddItem(Index);
  Result.NodeValue := Value;
end;

function T341_XMLDm_diagnosticoCID10List341.Get_Item(Index: Integer): WideString;
begin
  Result := List[Index].NodeValue;
end;

end.